[mlir-neura-opt] Architecture specification file: ../../arch_spec/architecture.yaml
Checking use: "neura.return"(%5) : (i32) -> ()
Checking use: "neura.store"(%5, %6) : (i32, !llvm.ptr) -> ()
Checking use: %6 = neura.alloca %4 : i32 -> !llvm.ptr
Checking use: "neura.store"(%1, %5) : (i32, !llvm.ptr) -> ()
Checking use: "neura.store"(%1, %6) : (i32, !llvm.ptr) -> ()
Checking use: %7 = neura.alloca %0 : i32 -> !llvm.ptr
Checking use: %6 = neura.alloca %0 : i32 -> !llvm.ptr
Checking use: %5 = neura.alloca %0 : i32 -> !llvm.ptr
Checking use: %4 = neura.alloca %0 : i32 -> !llvm.ptr
Checking use: %3 = neura.alloca %0 : i32 -> !llvm.ptr
Checking use: %2 = neura.alloca %0 : i32 -> !llvm.ptr
Checking use: "neura.store"(%1, %5) : (i32, !llvm.ptr) -> ()
Checking use: "neura.store"(%1, %6) : (i32, !llvm.ptr) -> ()
Checking use: %7 = neura.alloca %0 : i32 -> !llvm.ptr
Checking use: %6 = neura.alloca %0 : i32 -> !llvm.ptr
Checking use: %5 = neura.alloca %0 : i32 -> !llvm.ptr
Checking use: %4 = neura.alloca %0 : i32 -> !llvm.ptr
Checking use: %3 = neura.alloca %0 : i32 -> !llvm.ptr
Checking use: %2 = neura.alloca %0 : i32 -> !llvm.ptr
Checking use: "neura.store"(%1, %5) : (i32, !llvm.ptr) -> ()
Checking use: "neura.store"(%1, %6) : (i32, !llvm.ptr) -> ()
Checking use: %7 = neura.alloca %0 : i32 -> !llvm.ptr
Checking use: %6 = neura.alloca %0 : i32 -> !llvm.ptr
Checking use: %5 = neura.alloca %0 : i32 -> !llvm.ptr
Checking use: %4 = neura.alloca %0 : i32 -> !llvm.ptr
Checking use: %3 = neura.alloca %0 : i32 -> !llvm.ptr
Checking use: %2 = neura.alloca %0 : i32 -> !llvm.ptr
Checking use: "neura.return"(%5) : (i32) -> ()
Checking use: "neura.store"(%5, %6) : (i32, !llvm.ptr) -> ()
Checking use: %6 = neura.alloca %4 : i32 -> !llvm.ptr
[ctrl2data] Asserting live-out values dominated by block arguments
[ctrl2data] All live-out values are dominated by block arguments or live-in values.
[ctrl2data] ReturnOp found: "neura.return"() : () -> ()
[ctrl2data] Asserting live-out values dominated by block arguments
[ctrl2data] All live-out values are dominated by block arguments or live-in values.
[ctrl2data] Set dataflow mode to predicate for function: _Z6kernelPfS_S_
Checking use: "neura.return"(%5) : (i32) -> ()
Checking use: "neura.store"(%5, %6) : (i32, !llvm.ptr) -> ()
Checking use: %6 = neura.alloca %4 : i32 -> !llvm.ptr
Checking use: "neura.store"(%4, %13) : (!neura.data<i32, i1>, !neura.data<!llvm.ptr, i1>) -> ()
Checking use: "neura.store"(%4, %11) : (!neura.data<i32, i1>, !neura.data<!llvm.ptr, i1>) -> ()
Checking use: %15 = neura.alloca %3 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>
Checking use: %13 = neura.alloca %3 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>
Checking use: %11 = neura.alloca %3 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>
Checking use: %9 = neura.alloca %3 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>
Checking use: %7 = neura.alloca %3 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>
Checking use: %5 = neura.alloca %3 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>
Checking use: "neura.store"(%2, %9) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> ()
Checking use: "neura.store"(%1, %7) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> ()
Checking use: "neura.store"(%0, %5) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> ()
Checking use: "neura.store"(%4, %13) : (!neura.data<i32, i1>, !neura.data<!llvm.ptr, i1>) -> ()
Checking use: "neura.store"(%4, %11) : (!neura.data<i32, i1>, !neura.data<!llvm.ptr, i1>) -> ()
Checking use: %15 = neura.alloca %3 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>
Checking use: %13 = neura.alloca %3 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>
Checking use: %11 = neura.alloca %3 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>
Checking use: %9 = neura.alloca %3 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>
Checking use: %7 = neura.alloca %3 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>
Checking use: %5 = neura.alloca %3 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>
Checking use: "neura.store"(%2, %9) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> ()
Checking use: "neura.store"(%1, %7) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> ()
Checking use: "neura.store"(%0, %5) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> ()
Checking use: "neura.return"(%5) : (i32) -> ()
Checking use: "neura.store"(%5, %6) : (i32, !llvm.ptr) -> ()
Checking use: %6 = neura.alloca %4 : i32 -> !llvm.ptr
[MapToAcceleratorPass] Using Mapping Mode: spatial-temporal
Collecting recurrence cycles from back edge: parent_op %66 = neura.grant_predicate %64, %65 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>->%54 = neura.reserve : !neura.data<!llvm.ptr, i1>
Collecting recurrence cycles from back edge: parent_op %63 = neura.grant_predicate %61, %62 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>->%51 = neura.reserve : !neura.data<!llvm.ptr, i1>
Collecting recurrence cycles from back edge: parent_op %69 = neura.grant_predicate %67, %68 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>->%48 = neura.reserve : !neura.data<!llvm.ptr, i1>
Collecting recurrence cycles from back edge: parent_op %72 = neura.grant_predicate %70, %71 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>->%45 = neura.reserve : !neura.data<!llvm.ptr, i1>
Collecting recurrence cycles from back edge: parent_op %75 = neura.grant_predicate %73, %74 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>->%42 = neura.reserve : !neura.data<!llvm.ptr, i1>
Collecting recurrence cycles from back edge: parent_op %78 = neura.grant_predicate %76, %77 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>->%39 = neura.reserve : !neura.data<!llvm.ptr, i1>
[calculateResMii] Total operations: 60
[MapToAcceleratorPass] rec_mii=4, res_mii=1, possibleMinII=4, maxII=20 (from YAML config)
Collecting recurrence cycles from back edge: parent_op %66 = neura.grant_predicate %64, %65 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>->%54 = neura.reserve : !neura.data<!llvm.ptr, i1>
Collecting recurrence cycles from back edge: parent_op %63 = neura.grant_predicate %61, %62 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>->%51 = neura.reserve : !neura.data<!llvm.ptr, i1>
Collecting recurrence cycles from back edge: parent_op %69 = neura.grant_predicate %67, %68 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>->%48 = neura.reserve : !neura.data<!llvm.ptr, i1>
Collecting recurrence cycles from back edge: parent_op %72 = neura.grant_predicate %70, %71 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>->%45 = neura.reserve : !neura.data<!llvm.ptr, i1>
Collecting recurrence cycles from back edge: parent_op %75 = neura.grant_predicate %73, %74 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>->%42 = neura.reserve : !neura.data<!llvm.ptr, i1>
Collecting recurrence cycles from back edge: parent_op %78 = neura.grant_predicate %76, %77 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>->%39 = neura.reserve : !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Start mapping with target II of 4
[calculateAward] Operation: %3 = "neura.constant"() <{value = 1 : i32}> : () -> !neura.data<i32, i1>; Producers: 0
[DEBUG] Schedule op %3 = "neura.constant"() <{value = 1 : i32}> : () -> !neura.data<i32, i1> onto loc: tile#14 @t=0
[calculateAward] Operation: %18 = neura.alloca %17 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>; Producers: 1
[DEBUG] Schedule op %18 = neura.alloca %17 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1> onto loc: tile#15 @t=1
Processing operand: %17 = "neura.data_mov"(%3) : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
[DEBUG] Successfully routed data move: %17 = "neura.data_mov"(%3) : (!neura.data<i32, i1>) -> !neura.data<i32, i1> from tile#14 @t=0 to tile#15 @t=1
[calculateAward] Operation: %20 = "neura.grant_once"(%19) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>; Producers: 1
[DEBUG] Schedule op %20 = "neura.grant_once"(%19) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> onto loc: tile#23 @t=2
Processing operand: %19 = "neura.data_mov"(%18) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %19 = "neura.data_mov"(%18) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#15 @t=1 to tile#23 @t=2
[calculateAward] Operation: %22 = neura.alloca %21 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>; Producers: 1
[DEBUG] Schedule op %22 = neura.alloca %21 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1> onto loc: tile#21 @t=3
Processing operand: %21 = "neura.data_mov"(%3) : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
[DEBUG] Successfully routed data move: %21 = "neura.data_mov"(%3) : (!neura.data<i32, i1>) -> !neura.data<i32, i1> from tile#14 @t=0 to tile#21 @t=3
[calculateAward] Operation: %56 = "neura.phi"(%54, %55) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>; Producers: 1
[DEBUG] Schedule op %56 = "neura.phi"(%54, %55) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> onto loc: tile#23 @t=3
Processing operand: %54 = neura.reserve : !neura.data<!llvm.ptr, i1>
Processing operand: %55 = "neura.data_mov"(%20) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %55 = "neura.data_mov"(%20) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#23 @t=2 to tile#23 @t=3
[calculateAward] Operation: %6 = neura.alloca %5 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>; Producers: 1
[DEBUG] Schedule op %6 = neura.alloca %5 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1> onto loc: tile#19 @t=4
Processing operand: %5 = "neura.data_mov"(%3) : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
[DEBUG] Successfully routed data move: %5 = "neura.data_mov"(%3) : (!neura.data<i32, i1>) -> !neura.data<i32, i1> from tile#14 @t=0 to tile#19 @t=4
[calculateAward] Operation: %10 = neura.alloca %9 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>; Producers: 1
[DEBUG] Schedule op %10 = neura.alloca %9 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1> onto loc: tile#6 @t=4
Processing operand: %9 = "neura.data_mov"(%3) : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
[DEBUG] Successfully routed data move: %9 = "neura.data_mov"(%3) : (!neura.data<i32, i1>) -> !neura.data<i32, i1> from tile#14 @t=0 to tile#6 @t=4
[calculateAward] Operation: %14 = neura.alloca %13 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>; Producers: 1
[DEBUG] Schedule op %14 = neura.alloca %13 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1> onto loc: tile#14 @t=5
Processing operand: %13 = "neura.data_mov"(%3) : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
[DEBUG] Successfully routed data move: %13 = "neura.data_mov"(%3) : (!neura.data<i32, i1>) -> !neura.data<i32, i1> from tile#14 @t=0 to tile#14 @t=5
[calculateAward] Operation: %24 = "neura.grant_once"(%23) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>; Producers: 1
[DEBUG] Schedule op %24 = "neura.grant_once"(%23) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> onto loc: tile#13 @t=4
Processing operand: %23 = "neura.data_mov"(%22) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %23 = "neura.data_mov"(%22) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#21 @t=3 to tile#13 @t=4
[calculateAward] Operation: %58 = "neura.load"(%57) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<i32, i1>; Producers: 1
[DEBUG] Schedule op %58 = "neura.load"(%57) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<i32, i1> onto loc: tile#23 @t=4
Processing operand: %57 = "neura.data_mov"(%56) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %57 = "neura.data_mov"(%56) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#23 @t=3 to tile#23 @t=4
[calculateAward] Operation: %8 = "neura.grant_once"(%7) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>; Producers: 1
[DEBUG] Schedule op %8 = "neura.grant_once"(%7) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> onto loc: tile#11 @t=5
Processing operand: %7 = "neura.data_mov"(%6) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %7 = "neura.data_mov"(%6) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#19 @t=4 to tile#11 @t=5
[calculateAward] Operation: %12 = "neura.grant_once"(%11) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>; Producers: 1
[DEBUG] Schedule op %12 = "neura.grant_once"(%11) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> onto loc: tile#5 @t=5
Processing operand: %11 = "neura.data_mov"(%10) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %11 = "neura.data_mov"(%10) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#6 @t=4 to tile#5 @t=5
[calculateAward] Operation: %16 = "neura.grant_once"(%15) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>; Producers: 1
[DEBUG] Schedule op %16 = "neura.grant_once"(%15) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> onto loc: tile#15 @t=6
Processing operand: %15 = "neura.data_mov"(%14) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %15 = "neura.data_mov"(%14) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#14 @t=5 to tile#15 @t=6
[calculateAward] Operation: %41 = "neura.phi"(%39, %40) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>; Producers: 1
[DEBUG] Schedule op %41 = "neura.phi"(%39, %40) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> onto loc: tile#13 @t=5
Processing operand: %39 = neura.reserve : !neura.data<!llvm.ptr, i1>
Processing operand: %40 = "neura.data_mov"(%24) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %40 = "neura.data_mov"(%24) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#13 @t=4 to tile#13 @t=5
[calculateAward] Operation: %60 = "neura.icmp"(%59) <{cmpType = "slt"}> {rhs_const_value = 32 : i32} : (!neura.data<i32, i1>) -> !neura.data<i1, i1>; Producers: 1
[DEBUG] Schedule op %60 = "neura.icmp"(%59) <{cmpType = "slt"}> {rhs_const_value = 32 : i32} : (!neura.data<i32, i1>) -> !neura.data<i1, i1> onto loc: tile#23 @t=5
Processing operand: %59 = "neura.data_mov"(%58) : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
[DEBUG] Successfully routed data move: %59 = "neura.data_mov"(%58) : (!neura.data<i32, i1>) -> !neura.data<i32, i1> from tile#23 @t=4 to tile#23 @t=5
[calculateAward] Operation: %26 = neura.alloca %25 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>; Producers: 1
[DEBUG] Schedule op %26 = neura.alloca %25 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1> onto loc: tile#14 @t=6
Processing operand: %25 = "neura.data_mov"(%3) : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
[DEBUG] Successfully routed data move: %25 = "neura.data_mov"(%3) : (!neura.data<i32, i1>) -> !neura.data<i32, i1> from tile#14 @t=0 to tile#14 @t=6
[calculateAward] Operation: %53 = "neura.phi"(%51, %52) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>; Producers: 1
[DEBUG] Schedule op %53 = "neura.phi"(%51, %52) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> onto loc: tile#11 @t=6
Processing operand: %51 = neura.reserve : !neura.data<!llvm.ptr, i1>
Processing operand: %52 = "neura.data_mov"(%8) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %52 = "neura.data_mov"(%8) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#11 @t=5 to tile#11 @t=6
[calculateAward] Operation: %44 = "neura.phi"(%42, %43) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>; Producers: 1
[DEBUG] Schedule op %44 = "neura.phi"(%42, %43) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> onto loc: tile#13 @t=6
Processing operand: %42 = neura.reserve : !neura.data<!llvm.ptr, i1>
Processing operand: %43 = "neura.data_mov"(%12) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %43 = "neura.data_mov"(%12) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#5 @t=5 to tile#13 @t=6
[calculateAward] Operation: %50 = "neura.phi"(%48, %49) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>; Producers: 1
[DEBUG] Schedule op %50 = "neura.phi"(%48, %49) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> onto loc: tile#15 @t=7
Processing operand: %48 = neura.reserve : !neura.data<!llvm.ptr, i1>
Processing operand: %49 = "neura.data_mov"(%16) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %49 = "neura.data_mov"(%16) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#15 @t=6 to tile#15 @t=7
[calculateAward] Operation: %78 = neura.grant_predicate %76, %77 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>; Producers: 2
[DEBUG] Schedule op %78 = neura.grant_predicate %76, %77 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1> onto loc: tile#14 @t=7
Processing operand: %76 = "neura.data_mov"(%41) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %76 = "neura.data_mov"(%41) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#13 @t=5 to tile#14 @t=7
Processing operand: %77 = "neura.data_mov"(%60) : (!neura.data<i1, i1>) -> !neura.data<i1, i1>
[DEBUG] Successfully routed data move: %77 = "neura.data_mov"(%60) : (!neura.data<i1, i1>) -> !neura.data<i1, i1> from tile#23 @t=5 to tile#14 @t=7
[DEBUG] Found ctrl_mov user: neura.ctrl_mov %78 -> %39 : !neura.data<!llvm.ptr, i1> !neura.data<!llvm.ptr, i1>
[tryRouteBackwardMove] src_loc: tile#14 @t=7, dst_loc: tile#13 @t=5
[DEBUG] Successfully routed ctrl_mov: neura.ctrl_mov %78 -> %39 : !neura.data<!llvm.ptr, i1> !neura.data<!llvm.ptr, i1> to tile#13 @t=5
[calculateAward] Operation: %66 = neura.grant_predicate %64, %65 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>; Producers: 2
[DEBUG] Schedule op %66 = neura.grant_predicate %64, %65 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1> onto loc: tile#31 @t=6
Processing operand: %64 = "neura.data_mov"(%56) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %64 = "neura.data_mov"(%56) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#23 @t=3 to tile#31 @t=6
Processing operand: %65 = "neura.data_mov"(%60) : (!neura.data<i1, i1>) -> !neura.data<i1, i1>
[DEBUG] Successfully routed data move: %65 = "neura.data_mov"(%60) : (!neura.data<i1, i1>) -> !neura.data<i1, i1> from tile#23 @t=5 to tile#31 @t=6
[DEBUG] Found ctrl_mov user: neura.ctrl_mov %66 -> %54 : !neura.data<!llvm.ptr, i1> !neura.data<!llvm.ptr, i1>
[tryRouteBackwardMove] src_loc: tile#31 @t=6, dst_loc: tile#23 @t=3
[DEBUG] Successfully routed ctrl_mov: neura.ctrl_mov %66 -> %54 : !neura.data<!llvm.ptr, i1> !neura.data<!llvm.ptr, i1> to tile#23 @t=3
[calculateAward] Operation: %28 = "neura.grant_once"(%27) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>; Producers: 1
[DEBUG] Schedule op %28 = "neura.grant_once"(%27) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> onto loc: tile#6 @t=7
Processing operand: %27 = "neura.data_mov"(%26) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %27 = "neura.data_mov"(%26) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#14 @t=6 to tile#6 @t=7
[calculateAward] Operation: %75 = neura.grant_predicate %73, %74 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>; Producers: 2
[DEBUG] Schedule op %75 = neura.grant_predicate %73, %74 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1> onto loc: tile#22 @t=8
Processing operand: %73 = "neura.data_mov"(%44) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %73 = "neura.data_mov"(%44) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#13 @t=6 to tile#22 @t=8
Processing operand: %74 = "neura.data_mov"(%60) : (!neura.data<i1, i1>) -> !neura.data<i1, i1>
[DEBUG] Successfully routed data move: %74 = "neura.data_mov"(%60) : (!neura.data<i1, i1>) -> !neura.data<i1, i1> from tile#23 @t=5 to tile#22 @t=8
[DEBUG] Found ctrl_mov user: neura.ctrl_mov %75 -> %42 : !neura.data<!llvm.ptr, i1> !neura.data<!llvm.ptr, i1>
[tryRouteBackwardMove] src_loc: tile#22 @t=8, dst_loc: tile#13 @t=6
[DEBUG] Successfully routed ctrl_mov: neura.ctrl_mov %75 -> %42 : !neura.data<!llvm.ptr, i1> !neura.data<!llvm.ptr, i1> to tile#13 @t=6
[calculateAward] Operation: %69 = neura.grant_predicate %67, %68 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>; Producers: 2
[DEBUG] Schedule op %69 = neura.grant_predicate %67, %68 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1> onto loc: tile#15 @t=8
Processing operand: %67 = "neura.data_mov"(%50) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %67 = "neura.data_mov"(%50) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#15 @t=7 to tile#15 @t=8
Processing operand: %68 = "neura.data_mov"(%60) : (!neura.data<i1, i1>) -> !neura.data<i1, i1>
[DEBUG] Successfully routed data move: %68 = "neura.data_mov"(%60) : (!neura.data<i1, i1>) -> !neura.data<i1, i1> from tile#23 @t=5 to tile#15 @t=8
[DEBUG] Found ctrl_mov user: neura.ctrl_mov %69 -> %48 : !neura.data<!llvm.ptr, i1> !neura.data<!llvm.ptr, i1>
[tryRouteBackwardMove] src_loc: tile#15 @t=8, dst_loc: tile#15 @t=7
[DEBUG] Successfully routed ctrl_mov: neura.ctrl_mov %69 -> %48 : !neura.data<!llvm.ptr, i1> !neura.data<!llvm.ptr, i1> to tile#15 @t=7
[calculateAward] Operation: %63 = neura.grant_predicate %61, %62 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>; Producers: 2
[calculateAward] Operation: %69 = neura.grant_predicate %67, %68 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>; Producers: 2
[DEBUG] mapping failed for II = 4
=== MappingState: op_to_locs ===
  - neura.data_mov
      -> register#736 @t=2
  - neura.data_mov
      -> link#48 @t=0
      -> link#75 @t=1
      -> link#71 @t=2
      -> link#67 @t=3
  - neura.ctrl_mov
      -> link#110 @t=6
  - neura.grant_predicate
      -> tile#14 @t=7
  - neura.data_mov
      -> register#736 @t=3
  - neura.ctrl_mov
      -> link#45 @t=7
      -> register#417 @t=8
  - neura.grant_predicate
      -> tile#31 @t=6
  - neura.phi
      -> tile#23 @t=3
  - neura.constant
      -> tile#14 @t=0
  - neura.data_mov
      -> register#448 @t=0
      -> register#448 @t=1
      -> register#448 @t=2
      -> register#448 @t=3
      -> register#448 @t=4
  - neura.data_mov
      -> link#46 @t=0
  - neura.data_mov
      -> link#45 @t=0
      -> link#44 @t=1
      -> register#672 @t=2
  - neura.data_mov
      -> register#449 @t=0
      -> register#449 @t=1
      -> register#449 @t=2
      -> register#449 @t=3
      -> register#449 @t=4
      -> register#449 @t=5
  - neura.data_mov
      -> link#73 @t=3
  - neura.data_mov
      -> link#51 @t=1
  - neura.data_mov
      -> link#46 @t=5
  - neura.data_mov
      -> link#17 @t=4
  - neura.data_mov
      -> link#65 @t=4
  - neura.phi
      -> tile#11 @t=6
  - neura.phi
      -> tile#15 @t=7
  - neura.phi
      -> tile#13 @t=6
  - neura.phi
      -> tile#13 @t=5
  - neura.data_mov
      -> link#42 @t=5
      -> register#450 @t=6
  - neura.data_mov
      -> link#79 @t=5
      -> link#77 @t=6
  - neura.data_mov
      -> link#81 @t=3
      -> register#992 @t=4
      -> register#992 @t=5
  - neura.data_mov
      -> link#81 @t=5
  - neura.data_mov
      -> register#736 @t=4
  - neura.icmp
      -> tile#23 @t=5
  - neura.load
      -> tile#23 @t=4
  - neura.data_mov
      -> register#352 @t=5
  - neura.data_mov
      -> register#480 @t=6
  - neura.data_mov
      -> link#16 @t=5
  - neura.data_mov
      -> register#416 @t=4
  - neura.data_mov
      -> link#47 @t=6
  - neura.grant_once
      -> tile#6 @t=7
  - neura.alloca
      -> tile#14 @t=6
  - neura.grant_once
      -> tile#13 @t=4
  - neura.alloca
      -> tile#21 @t=3
  - neura.grant_once
      -> tile#23 @t=2
  - neura.alloca
      -> tile#15 @t=1
  - neura.grant_once
      -> tile#15 @t=6
  - neura.alloca
      -> tile#14 @t=5
  - neura.grant_once
      -> tile#5 @t=5
  - neura.data_mov
      -> link#47 @t=0
      -> register#192 @t=1
      -> register#192 @t=2
      -> register#192 @t=3
  - neura.alloca
      -> tile#6 @t=4
  - neura.grant_once
      -> tile#11 @t=5
  - neura.alloca
      -> tile#19 @t=4
=== End ===
[MapToAcceleratorPass] Start mapping with target II of 5
[calculateAward] Operation: %3 = "neura.constant"() <{value = 1 : i32}> : () -> !neura.data<i32, i1>; Producers: 0
[DEBUG] Schedule op %3 = "neura.constant"() <{value = 1 : i32}> : () -> !neura.data<i32, i1> onto loc: tile#41 @t=0
[calculateAward] Operation: %18 = neura.alloca %17 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>; Producers: 1
[DEBUG] Schedule op %18 = neura.alloca %17 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1> onto loc: tile#40 @t=1
Processing operand: %17 = "neura.data_mov"(%3) : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
[DEBUG] Successfully routed data move: %17 = "neura.data_mov"(%3) : (!neura.data<i32, i1>) -> !neura.data<i32, i1> from tile#41 @t=0 to tile#40 @t=1
[calculateAward] Operation: %20 = "neura.grant_once"(%19) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>; Producers: 1
[DEBUG] Schedule op %20 = "neura.grant_once"(%19) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> onto loc: tile#41 @t=2
Processing operand: %19 = "neura.data_mov"(%18) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %19 = "neura.data_mov"(%18) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#40 @t=1 to tile#41 @t=2
[calculateAward] Operation: %22 = neura.alloca %21 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>; Producers: 1
[DEBUG] Schedule op %22 = neura.alloca %21 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1> onto loc: tile#35 @t=3
Processing operand: %21 = "neura.data_mov"(%3) : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
[DEBUG] Successfully routed data move: %21 = "neura.data_mov"(%3) : (!neura.data<i32, i1>) -> !neura.data<i32, i1> from tile#41 @t=0 to tile#35 @t=3
[calculateAward] Operation: %56 = "neura.phi"(%54, %55) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>; Producers: 1
[DEBUG] Schedule op %56 = "neura.phi"(%54, %55) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> onto loc: tile#41 @t=3
Processing operand: %54 = neura.reserve : !neura.data<!llvm.ptr, i1>
Processing operand: %55 = "neura.data_mov"(%20) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %55 = "neura.data_mov"(%20) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#41 @t=2 to tile#41 @t=3
[calculateAward] Operation: %6 = neura.alloca %5 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>; Producers: 1
[DEBUG] Schedule op %6 = neura.alloca %5 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1> onto loc: tile#50 @t=4
Processing operand: %5 = "neura.data_mov"(%3) : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
[DEBUG] Successfully routed data move: %5 = "neura.data_mov"(%3) : (!neura.data<i32, i1>) -> !neura.data<i32, i1> from tile#41 @t=0 to tile#50 @t=4
[calculateAward] Operation: %10 = neura.alloca %9 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>; Producers: 1
[DEBUG] Schedule op %10 = neura.alloca %9 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1> onto loc: tile#25 @t=4
Processing operand: %9 = "neura.data_mov"(%3) : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
[DEBUG] Successfully routed data move: %9 = "neura.data_mov"(%3) : (!neura.data<i32, i1>) -> !neura.data<i32, i1> from tile#41 @t=0 to tile#25 @t=4
[calculateAward] Operation: %14 = neura.alloca %13 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>; Producers: 1
[DEBUG] Schedule op %14 = neura.alloca %13 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1> onto loc: tile#41 @t=4
Processing operand: %13 = "neura.data_mov"(%3) : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
[DEBUG] Successfully routed data move: %13 = "neura.data_mov"(%3) : (!neura.data<i32, i1>) -> !neura.data<i32, i1> from tile#41 @t=0 to tile#41 @t=4
[calculateAward] Operation: %24 = "neura.grant_once"(%23) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>; Producers: 1
[DEBUG] Schedule op %24 = "neura.grant_once"(%23) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> onto loc: tile#34 @t=4
Processing operand: %23 = "neura.data_mov"(%22) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %23 = "neura.data_mov"(%22) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#35 @t=3 to tile#34 @t=4
[calculateAward] Operation: %58 = "neura.load"(%57) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<i32, i1>; Producers: 1
[DEBUG] Schedule op %58 = "neura.load"(%57) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<i32, i1> onto loc: tile#33 @t=4
Processing operand: %57 = "neura.data_mov"(%56) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %57 = "neura.data_mov"(%56) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#41 @t=3 to tile#33 @t=4
[calculateAward] Operation: %8 = "neura.grant_once"(%7) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>; Producers: 1
[DEBUG] Schedule op %8 = "neura.grant_once"(%7) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> onto loc: tile#58 @t=5
Processing operand: %7 = "neura.data_mov"(%6) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %7 = "neura.data_mov"(%6) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#50 @t=4 to tile#58 @t=5
[calculateAward] Operation: %12 = "neura.grant_once"(%11) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>; Producers: 1
[DEBUG] Schedule op %12 = "neura.grant_once"(%11) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> onto loc: tile#17 @t=5
Processing operand: %11 = "neura.data_mov"(%10) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %11 = "neura.data_mov"(%10) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#25 @t=4 to tile#17 @t=5
[calculateAward] Operation: %16 = "neura.grant_once"(%15) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>; Producers: 1
[DEBUG] Schedule op %16 = "neura.grant_once"(%15) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> onto loc: tile#49 @t=5
Processing operand: %15 = "neura.data_mov"(%14) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %15 = "neura.data_mov"(%14) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#41 @t=4 to tile#49 @t=5
[calculateAward] Operation: %41 = "neura.phi"(%39, %40) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>; Producers: 1
[DEBUG] Schedule op %41 = "neura.phi"(%39, %40) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> onto loc: tile#34 @t=5
Processing operand: %39 = neura.reserve : !neura.data<!llvm.ptr, i1>
Processing operand: %40 = "neura.data_mov"(%24) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %40 = "neura.data_mov"(%24) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#34 @t=4 to tile#34 @t=5
[calculateAward] Operation: %60 = "neura.icmp"(%59) <{cmpType = "slt"}> {rhs_const_value = 32 : i32} : (!neura.data<i32, i1>) -> !neura.data<i1, i1>; Producers: 1
[DEBUG] Schedule op %60 = "neura.icmp"(%59) <{cmpType = "slt"}> {rhs_const_value = 32 : i32} : (!neura.data<i32, i1>) -> !neura.data<i1, i1> onto loc: tile#33 @t=5
Processing operand: %59 = "neura.data_mov"(%58) : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
[DEBUG] Successfully routed data move: %59 = "neura.data_mov"(%58) : (!neura.data<i32, i1>) -> !neura.data<i32, i1> from tile#33 @t=4 to tile#33 @t=5
[calculateAward] Operation: %26 = neura.alloca %25 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>; Producers: 1
[DEBUG] Schedule op %26 = neura.alloca %25 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1> onto loc: tile#41 @t=6
Processing operand: %25 = "neura.data_mov"(%3) : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
[DEBUG] Successfully routed data move: %25 = "neura.data_mov"(%3) : (!neura.data<i32, i1>) -> !neura.data<i32, i1> from tile#41 @t=0 to tile#41 @t=6
[calculateAward] Operation: %53 = "neura.phi"(%51, %52) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>; Producers: 1
[DEBUG] Schedule op %53 = "neura.phi"(%51, %52) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> onto loc: tile#50 @t=6
Processing operand: %51 = neura.reserve : !neura.data<!llvm.ptr, i1>
Processing operand: %52 = "neura.data_mov"(%8) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %52 = "neura.data_mov"(%8) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#58 @t=5 to tile#50 @t=6
[calculateAward] Operation: %44 = "neura.phi"(%42, %43) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>; Producers: 1
[DEBUG] Schedule op %44 = "neura.phi"(%42, %43) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> onto loc: tile#17 @t=6
Processing operand: %42 = neura.reserve : !neura.data<!llvm.ptr, i1>
Processing operand: %43 = "neura.data_mov"(%12) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %43 = "neura.data_mov"(%12) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#17 @t=5 to tile#17 @t=6
[calculateAward] Operation: %50 = "neura.phi"(%48, %49) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>; Producers: 1
[DEBUG] Schedule op %50 = "neura.phi"(%48, %49) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> onto loc: tile#49 @t=6
Processing operand: %48 = neura.reserve : !neura.data<!llvm.ptr, i1>
Processing operand: %49 = "neura.data_mov"(%16) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %49 = "neura.data_mov"(%16) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#49 @t=5 to tile#49 @t=6
[calculateAward] Operation: %78 = neura.grant_predicate %76, %77 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>; Producers: 2
[DEBUG] Schedule op %78 = neura.grant_predicate %76, %77 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1> onto loc: tile#34 @t=6
Processing operand: %76 = "neura.data_mov"(%41) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %76 = "neura.data_mov"(%41) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#34 @t=5 to tile#34 @t=6
Processing operand: %77 = "neura.data_mov"(%60) : (!neura.data<i1, i1>) -> !neura.data<i1, i1>
[DEBUG] Successfully routed data move: %77 = "neura.data_mov"(%60) : (!neura.data<i1, i1>) -> !neura.data<i1, i1> from tile#33 @t=5 to tile#34 @t=6
[DEBUG] Found ctrl_mov user: neura.ctrl_mov %78 -> %39 : !neura.data<!llvm.ptr, i1> !neura.data<!llvm.ptr, i1>
[tryRouteBackwardMove] src_loc: tile#34 @t=6, dst_loc: tile#34 @t=5
[DEBUG] Successfully routed ctrl_mov: neura.ctrl_mov %78 -> %39 : !neura.data<!llvm.ptr, i1> !neura.data<!llvm.ptr, i1> to tile#34 @t=5
[calculateAward] Operation: %66 = neura.grant_predicate %64, %65 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>; Producers: 2
[DEBUG] Schedule op %66 = neura.grant_predicate %64, %65 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1> onto loc: tile#33 @t=6
Processing operand: %64 = "neura.data_mov"(%56) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %64 = "neura.data_mov"(%56) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#41 @t=3 to tile#33 @t=6
Processing operand: %65 = "neura.data_mov"(%60) : (!neura.data<i1, i1>) -> !neura.data<i1, i1>
[DEBUG] Successfully routed data move: %65 = "neura.data_mov"(%60) : (!neura.data<i1, i1>) -> !neura.data<i1, i1> from tile#33 @t=5 to tile#33 @t=6
[DEBUG] Found ctrl_mov user: neura.ctrl_mov %66 -> %54 : !neura.data<!llvm.ptr, i1> !neura.data<!llvm.ptr, i1>
[tryRouteBackwardMove] src_loc: tile#33 @t=6, dst_loc: tile#41 @t=3
[DEBUG] Successfully routed ctrl_mov: neura.ctrl_mov %66 -> %54 : !neura.data<!llvm.ptr, i1> !neura.data<!llvm.ptr, i1> to tile#41 @t=3
[calculateAward] Operation: %28 = "neura.grant_once"(%27) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>; Producers: 1
[DEBUG] Schedule op %28 = "neura.grant_once"(%27) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> onto loc: tile#49 @t=7
Processing operand: %27 = "neura.data_mov"(%26) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %27 = "neura.data_mov"(%26) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#41 @t=6 to tile#49 @t=7
[calculateAward] Operation: %75 = neura.grant_predicate %73, %74 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>; Producers: 2
[DEBUG] Schedule op %75 = neura.grant_predicate %73, %74 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1> onto loc: tile#25 @t=7
Processing operand: %73 = "neura.data_mov"(%44) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %73 = "neura.data_mov"(%44) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#17 @t=6 to tile#25 @t=7
Processing operand: %74 = "neura.data_mov"(%60) : (!neura.data<i1, i1>) -> !neura.data<i1, i1>
[DEBUG] Successfully routed data move: %74 = "neura.data_mov"(%60) : (!neura.data<i1, i1>) -> !neura.data<i1, i1> from tile#33 @t=5 to tile#25 @t=7
[DEBUG] Found ctrl_mov user: neura.ctrl_mov %75 -> %42 : !neura.data<!llvm.ptr, i1> !neura.data<!llvm.ptr, i1>
[tryRouteBackwardMove] src_loc: tile#25 @t=7, dst_loc: tile#17 @t=6
[DEBUG] Successfully routed ctrl_mov: neura.ctrl_mov %75 -> %42 : !neura.data<!llvm.ptr, i1> !neura.data<!llvm.ptr, i1> to tile#17 @t=6
[calculateAward] Operation: %69 = neura.grant_predicate %67, %68 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>; Producers: 2
[DEBUG] Schedule op %69 = neura.grant_predicate %67, %68 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1> onto loc: tile#49 @t=9
Processing operand: %67 = "neura.data_mov"(%50) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %67 = "neura.data_mov"(%50) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#49 @t=6 to tile#49 @t=9
Processing operand: %68 = "neura.data_mov"(%60) : (!neura.data<i1, i1>) -> !neura.data<i1, i1>
[DEBUG] Successfully routed data move: %68 = "neura.data_mov"(%60) : (!neura.data<i1, i1>) -> !neura.data<i1, i1> from tile#33 @t=5 to tile#49 @t=9
[DEBUG] Found ctrl_mov user: neura.ctrl_mov %69 -> %48 : !neura.data<!llvm.ptr, i1> !neura.data<!llvm.ptr, i1>
[tryRouteBackwardMove] src_loc: tile#49 @t=9, dst_loc: tile#49 @t=6
[DEBUG] Successfully routed ctrl_mov: neura.ctrl_mov %69 -> %48 : !neura.data<!llvm.ptr, i1> !neura.data<!llvm.ptr, i1> to tile#49 @t=6
[calculateAward] Operation: %63 = neura.grant_predicate %61, %62 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>; Producers: 2
[DEBUG] Schedule op %63 = neura.grant_predicate %61, %62 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1> onto loc: tile#42 @t=9
Processing operand: %61 = "neura.data_mov"(%53) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %61 = "neura.data_mov"(%53) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#50 @t=6 to tile#42 @t=9
Processing operand: %62 = "neura.data_mov"(%60) : (!neura.data<i1, i1>) -> !neura.data<i1, i1>
[DEBUG] Successfully routed data move: %62 = "neura.data_mov"(%60) : (!neura.data<i1, i1>) -> !neura.data<i1, i1> from tile#33 @t=5 to tile#42 @t=9
[DEBUG] Found ctrl_mov user: neura.ctrl_mov %63 -> %51 : !neura.data<!llvm.ptr, i1> !neura.data<!llvm.ptr, i1>
[tryRouteBackwardMove] src_loc: tile#42 @t=9, dst_loc: tile#50 @t=6
[DEBUG] Successfully routed ctrl_mov: neura.ctrl_mov %63 -> %51 : !neura.data<!llvm.ptr, i1> !neura.data<!llvm.ptr, i1> to tile#50 @t=6
[calculateAward] Operation: %111 = "neura.load"(%110) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<i32, i1>; Producers: 1
[DEBUG] Schedule op %111 = "neura.load"(%110) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<i32, i1> onto loc: tile#42 @t=7
Processing operand: %110 = "neura.data_mov"(%78) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %110 = "neura.data_mov"(%78) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#34 @t=6 to tile#42 @t=7
[calculateAward] Operation: %93 = "neura.load"(%92) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<i32, i1>; Producers: 1
[DEBUG] Schedule op %93 = "neura.load"(%92) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<i32, i1> onto loc: tile#32 @t=7
Processing operand: %92 = "neura.data_mov"(%66) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %92 = "neura.data_mov"(%66) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#33 @t=6 to tile#32 @t=7
[calculateAward] Operation: %82 = "neura.load"(%81) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<i32, i1>; Producers: 1
[DEBUG] Schedule op %82 = "neura.load"(%81) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<i32, i1> onto loc: tile#33 @t=7
Processing operand: %81 = "neura.data_mov"(%66) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %81 = "neura.data_mov"(%66) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#33 @t=6 to tile#33 @t=7
[calculateAward] Operation: %47 = "neura.phi"(%45, %46) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>; Producers: 1
[DEBUG] Schedule op %47 = "neura.phi"(%45, %46) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> onto loc: tile#49 @t=8
Processing operand: %45 = neura.reserve : !neura.data<!llvm.ptr, i1>
Processing operand: %46 = "neura.data_mov"(%28) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %46 = "neura.data_mov"(%28) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#49 @t=7 to tile#49 @t=8
[calculateAward] Operation: %109 = "neura.load"(%108) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>; Producers: 1
[DEBUG] Schedule op %109 = "neura.load"(%108) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> onto loc: tile#24 @t=8
Processing operand: %108 = "neura.data_mov"(%75) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %108 = "neura.data_mov"(%75) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#25 @t=7 to tile#24 @t=8
[calculateAward] Operation: %91 = "neura.load"(%90) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>; Producers: 1
[DEBUG] Schedule op %91 = "neura.load"(%90) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> onto loc: tile#57 @t=10
Processing operand: %90 = "neura.data_mov"(%69) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %90 = "neura.data_mov"(%69) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#49 @t=9 to tile#57 @t=10
[calculateAward] Operation: %80 = "neura.load"(%79) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>; Producers: 1
[DEBUG] Schedule op %80 = "neura.load"(%79) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> onto loc: tile#42 @t=10
Processing operand: %79 = "neura.data_mov"(%63) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %79 = "neura.data_mov"(%63) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#42 @t=9 to tile#42 @t=10
[calculateAward] Operation: %113 = neura.sext %112 : !neura.data<i32, i1> -> !neura.data<i64, i1>; Producers: 1
[DEBUG] Schedule op %113 = neura.sext %112 : !neura.data<i32, i1> -> !neura.data<i64, i1> onto loc: tile#50 @t=8
Processing operand: %112 = "neura.data_mov"(%111) : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
[DEBUG] Successfully routed data move: %112 = "neura.data_mov"(%111) : (!neura.data<i32, i1>) -> !neura.data<i32, i1> from tile#42 @t=7 to tile#50 @t=8
[calculateAward] Operation: %95 = neura.sext %94 : !neura.data<i32, i1> -> !neura.data<i64, i1>; Producers: 1
[DEBUG] Schedule op %95 = neura.sext %94 : !neura.data<i32, i1> -> !neura.data<i64, i1> onto loc: tile#40 @t=8
Processing operand: %94 = "neura.data_mov"(%93) : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
[DEBUG] Successfully routed data move: %94 = "neura.data_mov"(%93) : (!neura.data<i32, i1>) -> !neura.data<i32, i1> from tile#32 @t=7 to tile#40 @t=8
[calculateAward] Operation: %84 = neura.sext %83 : !neura.data<i32, i1> -> !neura.data<i64, i1>; Producers: 1
[DEBUG] Schedule op %84 = neura.sext %83 : !neura.data<i32, i1> -> !neura.data<i64, i1> onto loc: tile#33 @t=8
Processing operand: %83 = "neura.data_mov"(%82) : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
[DEBUG] Successfully routed data move: %83 = "neura.data_mov"(%82) : (!neura.data<i32, i1>) -> !neura.data<i32, i1> from tile#33 @t=7 to tile#33 @t=8
[calculateAward] Operation: %72 = neura.grant_predicate %70, %71 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>; Producers: 2
[DEBUG] Schedule op %72 = neura.grant_predicate %70, %71 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1> onto loc: tile#48 @t=9
Processing operand: %70 = "neura.data_mov"(%47) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %70 = "neura.data_mov"(%47) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#49 @t=8 to tile#48 @t=9
Processing operand: %71 = "neura.data_mov"(%60) : (!neura.data<i1, i1>) -> !neura.data<i1, i1>
[DEBUG] Successfully routed data move: %71 = "neura.data_mov"(%60) : (!neura.data<i1, i1>) -> !neura.data<i1, i1> from tile#33 @t=5 to tile#48 @t=9
[DEBUG] Found ctrl_mov user: neura.ctrl_mov %72 -> %45 : !neura.data<!llvm.ptr, i1> !neura.data<!llvm.ptr, i1>
[tryRouteBackwardMove] src_loc: tile#48 @t=9, dst_loc: tile#49 @t=8
[DEBUG] Successfully routed ctrl_mov: neura.ctrl_mov %72 -> %45 : !neura.data<!llvm.ptr, i1> !neura.data<!llvm.ptr, i1> to tile#49 @t=8
[calculateAward] Operation: %116 = "neura.gep"(%114, %115) : (!neura.data<!llvm.ptr, i1>, !neura.data<i64, i1>) -> !neura.data<!llvm.ptr, i1>; Producers: 2
[DEBUG] Schedule op %116 = "neura.gep"(%114, %115) : (!neura.data<!llvm.ptr, i1>, !neura.data<i64, i1>) -> !neura.data<!llvm.ptr, i1> onto loc: tile#26 @t=11
Processing operand: %114 = "neura.data_mov"(%109) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %114 = "neura.data_mov"(%109) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#24 @t=8 to tile#26 @t=11
Processing operand: %115 = "neura.data_mov"(%113) : (!neura.data<i64, i1>) -> !neura.data<i64, i1>
[DEBUG] Successfully routed data move: %115 = "neura.data_mov"(%113) : (!neura.data<i64, i1>) -> !neura.data<i64, i1> from tile#50 @t=8 to tile#26 @t=11
[calculateAward] Operation: %98 = "neura.gep"(%96, %97) : (!neura.data<!llvm.ptr, i1>, !neura.data<i64, i1>) -> !neura.data<!llvm.ptr, i1>; Producers: 2
[DEBUG] Schedule op %98 = "neura.gep"(%96, %97) : (!neura.data<!llvm.ptr, i1>, !neura.data<i64, i1>) -> !neura.data<!llvm.ptr, i1> onto loc: tile#57 @t=11
Processing operand: %96 = "neura.data_mov"(%91) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %96 = "neura.data_mov"(%91) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#57 @t=10 to tile#57 @t=11
Processing operand: %97 = "neura.data_mov"(%95) : (!neura.data<i64, i1>) -> !neura.data<i64, i1>
[DEBUG] Successfully routed data move: %97 = "neura.data_mov"(%95) : (!neura.data<i64, i1>) -> !neura.data<i64, i1> from tile#40 @t=8 to tile#57 @t=11
[calculateAward] Operation: %87 = "neura.gep"(%85, %86) : (!neura.data<!llvm.ptr, i1>, !neura.data<i64, i1>) -> !neura.data<!llvm.ptr, i1>; Producers: 2
[DEBUG] Schedule op %87 = "neura.gep"(%85, %86) : (!neura.data<!llvm.ptr, i1>, !neura.data<i64, i1>) -> !neura.data<!llvm.ptr, i1> onto loc: tile#43 @t=11
Processing operand: %85 = "neura.data_mov"(%80) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %85 = "neura.data_mov"(%80) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#42 @t=10 to tile#43 @t=11
Processing operand: %86 = "neura.data_mov"(%84) : (!neura.data<i64, i1>) -> !neura.data<i64, i1>
[DEBUG] Successfully routed data move: %86 = "neura.data_mov"(%84) : (!neura.data<i64, i1>) -> !neura.data<i64, i1> from tile#33 @t=8 to tile#43 @t=11
[calculateAward] Operation: %107 = "neura.load"(%106) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<f32, i1>; Producers: 1
[DEBUG] Schedule op %107 = "neura.load"(%106) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<f32, i1> onto loc: tile#40 @t=10
Processing operand: %106 = "neura.data_mov"(%72) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %106 = "neura.data_mov"(%72) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#48 @t=9 to tile#40 @t=10
[calculateAward] Operation: %125 = "neura.load"(%124) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<i32, i1>; Producers: 1
[calculateAward] Operation: %107 = "neura.load"(%106) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<f32, i1>; Producers: 1
[DEBUG] mapping failed for II = 5
=== MappingState: op_to_locs ===
  - neura.data_mov
      -> register#1344 @t=9
  - neura.data_mov
      -> register#1312 @t=2
  - neura.data_mov
      -> link#148 @t=0
      -> link#176 @t=1
      -> register#1600 @t=2
      -> register#1600 @t=3
  - neura.ctrl_mov
      -> link#118 @t=6
      -> register#1315 @t=7
  - neura.ctrl_mov
      -> link#152 @t=9
      -> register#1600 @t=10
  - neura.grant_predicate
      -> tile#42 @t=9
  - neura.grant_predicate
      -> tile#34 @t=6
  - neura.data_mov
      -> link#147 @t=3
  - neura.ctrl_mov
      -> register#1569 @t=9
      -> register#1569 @t=10
  - neura.ctrl_mov
      -> link#172 @t=9
      -> register#1570 @t=10
      -> register#1570 @t=11
      -> register#1570 @t=12
  - neura.ctrl_mov
      -> link#87 @t=7
      -> register#545 @t=8
      -> register#545 @t=9
      -> register#545 @t=10
  - neura.ctrl_mov
      -> register#1089 @t=6
      -> register#1089 @t=7
      -> register#1089 @t=8
      -> register#1089 @t=9
  - neura.grant_predicate
      -> tile#33 @t=6
  - neura.data_mov
      -> register#1056 @t=6
  - neura.data_mov
      -> link#178 @t=9
  - neura.data_mov
      -> link#115 @t=6
  - neura.data_mov
      -> register#1824 @t=10
  - neura.gep
      -> tile#57 @t=11
  - neura.data_mov
      -> link#122 @t=6
  - neura.gep
      -> tile#26 @t=11
  - neura.phi
      -> tile#41 @t=3
  - neura.constant
      -> tile#41 @t=0
  - neura.data_mov
      -> register#1313 @t=0
      -> register#1313 @t=1
      -> register#1313 @t=2
      -> register#1313 @t=3
  - neura.data_mov
      -> link#145 @t=0
  - neura.data_mov
      -> link#146 @t=0
      -> link#150 @t=1
      -> link#155 @t=2
  - neura.data_mov
      -> register#1314 @t=0
      -> register#1314 @t=1
      -> register#1314 @t=2
      -> register#1314 @t=3
      -> register#1314 @t=4
      -> register#1314 @t=5
  - neura.data_mov
      -> link#82 @t=8
      -> link#86 @t=9
      -> register#832 @t=10
  - neura.data_mov
      -> link#85 @t=7
  - neura.data_mov
      -> link#123 @t=3
  - neura.data_mov
      -> link#142 @t=1
  - neura.data_mov
      -> link#148 @t=4
  - neura.data_mov
      -> link#87 @t=4
  - neura.data_mov
      -> link#182 @t=4
  - neura.grant_predicate
      -> tile#49 @t=9
  - neura.grant_predicate
      -> tile#48 @t=9
  - neura.phi
      -> tile#50 @t=6
  - neura.phi
      -> tile#49 @t=6
  - neura.phi
      -> tile#49 @t=8
  - neura.phi
      -> tile#17 @t=6
  - neura.phi
      -> tile#34 @t=5
  - neura.grant_predicate
      -> tile#25 @t=7
  - neura.data_mov
      -> link#181 @t=8
      -> link#151 @t=9
      -> link#121 @t=10
  - neura.data_mov
      -> link#152 @t=7
  - neura.sext
      -> tile#50 @t=8
  - neura.load
      -> tile#42 @t=7
  - neura.load
      -> tile#24 @t=8
  - neura.data_mov
      -> link#144 @t=8
      -> link#174 @t=9
      -> link#202 @t=10
  - neura.data_mov
      -> link#114 @t=7
  - neura.sext
      -> tile#40 @t=8
  - neura.load
      -> tile#32 @t=7
  - neura.load
      -> tile#57 @t=10
  - neura.data_mov
      -> register#1056 @t=7
  - neura.sext
      -> tile#33 @t=8
  - neura.load
      -> tile#33 @t=7
  - neura.load
      -> tile#42 @t=10
  - neura.data_mov
      -> register#1088 @t=5
  - neura.data_mov
      -> link#116 @t=5
  - neura.data_mov
      -> link#58 @t=6
  - neura.data_mov
      -> link#117 @t=5
      -> register#800 @t=6
  - neura.data_mov
      -> link#175 @t=8
  - neura.data_mov
      -> link#115 @t=5
      -> link#114 @t=6
      -> link#144 @t=7
      -> register#1536 @t=8
  - neura.data_mov
      -> register#1568 @t=6
      -> register#1568 @t=7
      -> register#1568 @t=8
  - neura.data_mov
      -> link#118 @t=5
      -> register#1312 @t=6
      -> link#148 @t=7
      -> register#1569 @t=8
  - neura.data_mov
      -> register#1312 @t=3
      -> link#147 @t=4
      -> register#1056 @t=5
  - neura.data_mov
      -> register#1057 @t=5
  - neura.data_mov
      -> link#181 @t=6
      -> register#1344 @t=7
      -> register#1344 @t=8
  - neura.data_mov
      -> register#1058 @t=5
      -> link#116 @t=6
      -> link#122 @t=7
      -> register#1345 @t=8
  - neura.data_mov
      -> register#1056 @t=4
  - neura.icmp
      -> tile#33 @t=5
  - neura.load
      -> tile#33 @t=4
  - neura.data_mov
      -> link#209 @t=5
  - neura.data_mov
      -> register#1568 @t=5
  - neura.data_mov
      -> register#1569 @t=7
  - neura.data_mov
      -> register#544 @t=5
  - neura.data_mov
      -> register#1088 @t=4
  - neura.data_mov
      -> link#148 @t=6
  - neura.grant_once
      -> tile#49 @t=7
  - neura.alloca
      -> tile#41 @t=6
  - neura.grant_once
      -> tile#34 @t=4
  - neura.alloca
      -> tile#35 @t=3
  - neura.grant_once
      -> tile#41 @t=2
  - neura.alloca
      -> tile#40 @t=1
  - neura.grant_once
      -> tile#49 @t=5
  - neura.alloca
      -> tile#41 @t=4
  - neura.grant_once
      -> tile#17 @t=5
  - neura.data_mov
      -> link#147 @t=0
      -> link#117 @t=1
      -> register#800 @t=2
      -> register#800 @t=3
  - neura.alloca
      -> tile#25 @t=4
  - neura.grant_once
      -> tile#58 @t=5
  - neura.alloca
      -> tile#50 @t=4
=== End ===
[MapToAcceleratorPass] Start mapping with target II of 6
[calculateAward] Operation: %3 = "neura.constant"() <{value = 1 : i32}> : () -> !neura.data<i32, i1>; Producers: 0
[DEBUG] Schedule op %3 = "neura.constant"() <{value = 1 : i32}> : () -> !neura.data<i32, i1> onto loc: tile#40 @t=0
[calculateAward] Operation: %18 = neura.alloca %17 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>; Producers: 1
[DEBUG] Schedule op %18 = neura.alloca %17 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1> onto loc: tile#41 @t=1
Processing operand: %17 = "neura.data_mov"(%3) : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
[DEBUG] Successfully routed data move: %17 = "neura.data_mov"(%3) : (!neura.data<i32, i1>) -> !neura.data<i32, i1> from tile#40 @t=0 to tile#41 @t=1
[calculateAward] Operation: %20 = "neura.grant_once"(%19) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>; Producers: 1
[DEBUG] Schedule op %20 = "neura.grant_once"(%19) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> onto loc: tile#42 @t=2
Processing operand: %19 = "neura.data_mov"(%18) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %19 = "neura.data_mov"(%18) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#41 @t=1 to tile#42 @t=2
[calculateAward] Operation: %22 = neura.alloca %21 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>; Producers: 1
[DEBUG] Schedule op %22 = neura.alloca %21 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1> onto loc: tile#41 @t=3
Processing operand: %21 = "neura.data_mov"(%3) : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
[DEBUG] Successfully routed data move: %21 = "neura.data_mov"(%3) : (!neura.data<i32, i1>) -> !neura.data<i32, i1> from tile#40 @t=0 to tile#41 @t=3
[calculateAward] Operation: %56 = "neura.phi"(%54, %55) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>; Producers: 1
[DEBUG] Schedule op %56 = "neura.phi"(%54, %55) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> onto loc: tile#42 @t=3
Processing operand: %54 = neura.reserve : !neura.data<!llvm.ptr, i1>
Processing operand: %55 = "neura.data_mov"(%20) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %55 = "neura.data_mov"(%20) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#42 @t=2 to tile#42 @t=3
[calculateAward] Operation: %6 = neura.alloca %5 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>; Producers: 1
[DEBUG] Schedule op %6 = neura.alloca %5 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1> onto loc: tile#16 @t=4
Processing operand: %5 = "neura.data_mov"(%3) : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
[DEBUG] Successfully routed data move: %5 = "neura.data_mov"(%3) : (!neura.data<i32, i1>) -> !neura.data<i32, i1> from tile#40 @t=0 to tile#16 @t=4
[calculateAward] Operation: %10 = neura.alloca %9 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>; Producers: 1
[DEBUG] Schedule op %10 = neura.alloca %9 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1> onto loc: tile#33 @t=4
Processing operand: %9 = "neura.data_mov"(%3) : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
[DEBUG] Successfully routed data move: %9 = "neura.data_mov"(%3) : (!neura.data<i32, i1>) -> !neura.data<i32, i1> from tile#40 @t=0 to tile#33 @t=4
[calculateAward] Operation: %14 = neura.alloca %13 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>; Producers: 1
[DEBUG] Schedule op %14 = neura.alloca %13 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1> onto loc: tile#48 @t=4
Processing operand: %13 = "neura.data_mov"(%3) : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
[DEBUG] Successfully routed data move: %13 = "neura.data_mov"(%3) : (!neura.data<i32, i1>) -> !neura.data<i32, i1> from tile#40 @t=0 to tile#48 @t=4
[calculateAward] Operation: %24 = "neura.grant_once"(%23) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>; Producers: 1
[DEBUG] Schedule op %24 = "neura.grant_once"(%23) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> onto loc: tile#42 @t=4
Processing operand: %23 = "neura.data_mov"(%22) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %23 = "neura.data_mov"(%22) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#41 @t=3 to tile#42 @t=4
[calculateAward] Operation: %58 = "neura.load"(%57) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<i32, i1>; Producers: 1
[DEBUG] Schedule op %58 = "neura.load"(%57) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<i32, i1> onto loc: tile#34 @t=4
Processing operand: %57 = "neura.data_mov"(%56) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %57 = "neura.data_mov"(%56) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#42 @t=3 to tile#34 @t=4
[calculateAward] Operation: %8 = "neura.grant_once"(%7) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>; Producers: 1
[DEBUG] Schedule op %8 = "neura.grant_once"(%7) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> onto loc: tile#16 @t=5
Processing operand: %7 = "neura.data_mov"(%6) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %7 = "neura.data_mov"(%6) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#16 @t=4 to tile#16 @t=5
[calculateAward] Operation: %12 = "neura.grant_once"(%11) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>; Producers: 1
[DEBUG] Schedule op %12 = "neura.grant_once"(%11) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> onto loc: tile#34 @t=5
Processing operand: %11 = "neura.data_mov"(%10) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %11 = "neura.data_mov"(%10) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#33 @t=4 to tile#34 @t=5
[calculateAward] Operation: %16 = "neura.grant_once"(%15) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>; Producers: 1
[DEBUG] Schedule op %16 = "neura.grant_once"(%15) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> onto loc: tile#49 @t=5
Processing operand: %15 = "neura.data_mov"(%14) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %15 = "neura.data_mov"(%14) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#48 @t=4 to tile#49 @t=5
[calculateAward] Operation: %41 = "neura.phi"(%39, %40) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>; Producers: 1
[DEBUG] Schedule op %41 = "neura.phi"(%39, %40) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> onto loc: tile#42 @t=5
Processing operand: %39 = neura.reserve : !neura.data<!llvm.ptr, i1>
Processing operand: %40 = "neura.data_mov"(%24) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %40 = "neura.data_mov"(%24) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#42 @t=4 to tile#42 @t=5
[calculateAward] Operation: %60 = "neura.icmp"(%59) <{cmpType = "slt"}> {rhs_const_value = 32 : i32} : (!neura.data<i32, i1>) -> !neura.data<i1, i1>; Producers: 1
[DEBUG] Schedule op %60 = "neura.icmp"(%59) <{cmpType = "slt"}> {rhs_const_value = 32 : i32} : (!neura.data<i32, i1>) -> !neura.data<i1, i1> onto loc: tile#26 @t=5
Processing operand: %59 = "neura.data_mov"(%58) : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
[DEBUG] Successfully routed data move: %59 = "neura.data_mov"(%58) : (!neura.data<i32, i1>) -> !neura.data<i32, i1> from tile#34 @t=4 to tile#26 @t=5
[calculateAward] Operation: %26 = neura.alloca %25 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>; Producers: 1
[DEBUG] Schedule op %26 = neura.alloca %25 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1> onto loc: tile#40 @t=7
Processing operand: %25 = "neura.data_mov"(%3) : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
[DEBUG] Successfully routed data move: %25 = "neura.data_mov"(%3) : (!neura.data<i32, i1>) -> !neura.data<i32, i1> from tile#40 @t=0 to tile#40 @t=7
[calculateAward] Operation: %53 = "neura.phi"(%51, %52) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>; Producers: 1
[DEBUG] Schedule op %53 = "neura.phi"(%51, %52) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> onto loc: tile#16 @t=6
Processing operand: %51 = neura.reserve : !neura.data<!llvm.ptr, i1>
Processing operand: %52 = "neura.data_mov"(%8) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %52 = "neura.data_mov"(%8) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#16 @t=5 to tile#16 @t=6
[calculateAward] Operation: %44 = "neura.phi"(%42, %43) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>; Producers: 1
[DEBUG] Schedule op %44 = "neura.phi"(%42, %43) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> onto loc: tile#34 @t=6
Processing operand: %42 = neura.reserve : !neura.data<!llvm.ptr, i1>
Processing operand: %43 = "neura.data_mov"(%12) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %43 = "neura.data_mov"(%12) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#34 @t=5 to tile#34 @t=6
[calculateAward] Operation: %50 = "neura.phi"(%48, %49) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>; Producers: 1
[DEBUG] Schedule op %50 = "neura.phi"(%48, %49) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> onto loc: tile#49 @t=6
Processing operand: %48 = neura.reserve : !neura.data<!llvm.ptr, i1>
Processing operand: %49 = "neura.data_mov"(%16) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %49 = "neura.data_mov"(%16) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#49 @t=5 to tile#49 @t=6
[calculateAward] Operation: %78 = neura.grant_predicate %76, %77 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>; Producers: 2
[DEBUG] Schedule op %78 = neura.grant_predicate %76, %77 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1> onto loc: tile#34 @t=7
Processing operand: %76 = "neura.data_mov"(%41) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %76 = "neura.data_mov"(%41) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#42 @t=5 to tile#34 @t=7
Processing operand: %77 = "neura.data_mov"(%60) : (!neura.data<i1, i1>) -> !neura.data<i1, i1>
[DEBUG] Successfully routed data move: %77 = "neura.data_mov"(%60) : (!neura.data<i1, i1>) -> !neura.data<i1, i1> from tile#26 @t=5 to tile#34 @t=7
[DEBUG] Found ctrl_mov user: neura.ctrl_mov %78 -> %39 : !neura.data<!llvm.ptr, i1> !neura.data<!llvm.ptr, i1>
[tryRouteBackwardMove] src_loc: tile#34 @t=7, dst_loc: tile#42 @t=5
[DEBUG] Successfully routed ctrl_mov: neura.ctrl_mov %78 -> %39 : !neura.data<!llvm.ptr, i1> !neura.data<!llvm.ptr, i1> to tile#42 @t=5
[calculateAward] Operation: %66 = neura.grant_predicate %64, %65 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>; Producers: 2
[DEBUG] Schedule op %66 = neura.grant_predicate %64, %65 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1> onto loc: tile#26 @t=7
Processing operand: %64 = "neura.data_mov"(%56) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %64 = "neura.data_mov"(%56) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#42 @t=3 to tile#26 @t=7
Processing operand: %65 = "neura.data_mov"(%60) : (!neura.data<i1, i1>) -> !neura.data<i1, i1>
[DEBUG] Successfully routed data move: %65 = "neura.data_mov"(%60) : (!neura.data<i1, i1>) -> !neura.data<i1, i1> from tile#26 @t=5 to tile#26 @t=7
[DEBUG] Found ctrl_mov user: neura.ctrl_mov %66 -> %54 : !neura.data<!llvm.ptr, i1> !neura.data<!llvm.ptr, i1>
[tryRouteBackwardMove] src_loc: tile#26 @t=7, dst_loc: tile#42 @t=3
[DEBUG] Successfully routed ctrl_mov: neura.ctrl_mov %66 -> %54 : !neura.data<!llvm.ptr, i1> !neura.data<!llvm.ptr, i1> to tile#42 @t=3
[calculateAward] Operation: %28 = "neura.grant_once"(%27) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>; Producers: 1
[DEBUG] Schedule op %28 = "neura.grant_once"(%27) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> onto loc: tile#48 @t=8
Processing operand: %27 = "neura.data_mov"(%26) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %27 = "neura.data_mov"(%26) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#40 @t=7 to tile#48 @t=8
[calculateAward] Operation: %75 = neura.grant_predicate %73, %74 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>; Producers: 2
[DEBUG] Schedule op %75 = neura.grant_predicate %73, %74 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1> onto loc: tile#34 @t=8
Processing operand: %73 = "neura.data_mov"(%44) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %73 = "neura.data_mov"(%44) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#34 @t=6 to tile#34 @t=8
Processing operand: %74 = "neura.data_mov"(%60) : (!neura.data<i1, i1>) -> !neura.data<i1, i1>
[DEBUG] Successfully routed data move: %74 = "neura.data_mov"(%60) : (!neura.data<i1, i1>) -> !neura.data<i1, i1> from tile#26 @t=5 to tile#34 @t=8
[DEBUG] Found ctrl_mov user: neura.ctrl_mov %75 -> %42 : !neura.data<!llvm.ptr, i1> !neura.data<!llvm.ptr, i1>
[tryRouteBackwardMove] src_loc: tile#34 @t=8, dst_loc: tile#34 @t=6
[DEBUG] Successfully routed ctrl_mov: neura.ctrl_mov %75 -> %42 : !neura.data<!llvm.ptr, i1> !neura.data<!llvm.ptr, i1> to tile#34 @t=6
[calculateAward] Operation: %69 = neura.grant_predicate %67, %68 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>; Producers: 2
[DEBUG] Schedule op %69 = neura.grant_predicate %67, %68 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1> onto loc: tile#33 @t=8
Processing operand: %67 = "neura.data_mov"(%50) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %67 = "neura.data_mov"(%50) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#49 @t=6 to tile#33 @t=8
Processing operand: %68 = "neura.data_mov"(%60) : (!neura.data<i1, i1>) -> !neura.data<i1, i1>
[DEBUG] Successfully routed data move: %68 = "neura.data_mov"(%60) : (!neura.data<i1, i1>) -> !neura.data<i1, i1> from tile#26 @t=5 to tile#33 @t=8
[DEBUG] Found ctrl_mov user: neura.ctrl_mov %69 -> %48 : !neura.data<!llvm.ptr, i1> !neura.data<!llvm.ptr, i1>
[tryRouteBackwardMove] src_loc: tile#33 @t=8, dst_loc: tile#49 @t=6
[DEBUG] Successfully routed ctrl_mov: neura.ctrl_mov %69 -> %48 : !neura.data<!llvm.ptr, i1> !neura.data<!llvm.ptr, i1> to tile#49 @t=6
[calculateAward] Operation: %63 = neura.grant_predicate %61, %62 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>; Producers: 2
[DEBUG] Schedule op %63 = neura.grant_predicate %61, %62 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1> onto loc: tile#17 @t=7
Processing operand: %61 = "neura.data_mov"(%53) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %61 = "neura.data_mov"(%53) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#16 @t=6 to tile#17 @t=7
Processing operand: %62 = "neura.data_mov"(%60) : (!neura.data<i1, i1>) -> !neura.data<i1, i1>
[DEBUG] Successfully routed data move: %62 = "neura.data_mov"(%60) : (!neura.data<i1, i1>) -> !neura.data<i1, i1> from tile#26 @t=5 to tile#17 @t=7
[DEBUG] Found ctrl_mov user: neura.ctrl_mov %63 -> %51 : !neura.data<!llvm.ptr, i1> !neura.data<!llvm.ptr, i1>
[tryRouteBackwardMove] src_loc: tile#17 @t=7, dst_loc: tile#16 @t=6
[DEBUG] Successfully routed ctrl_mov: neura.ctrl_mov %63 -> %51 : !neura.data<!llvm.ptr, i1> !neura.data<!llvm.ptr, i1> to tile#16 @t=6
[calculateAward] Operation: %111 = "neura.load"(%110) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<i32, i1>; Producers: 1
[DEBUG] Schedule op %111 = "neura.load"(%110) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<i32, i1> onto loc: tile#35 @t=8
Processing operand: %110 = "neura.data_mov"(%78) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %110 = "neura.data_mov"(%78) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#34 @t=7 to tile#35 @t=8
[calculateAward] Operation: %93 = "neura.load"(%92) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<i32, i1>; Producers: 1
[DEBUG] Schedule op %93 = "neura.load"(%92) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<i32, i1> onto loc: tile#27 @t=8
Processing operand: %92 = "neura.data_mov"(%66) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %92 = "neura.data_mov"(%66) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#26 @t=7 to tile#27 @t=8
[calculateAward] Operation: %82 = "neura.load"(%81) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<i32, i1>; Producers: 1
[DEBUG] Schedule op %82 = "neura.load"(%81) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<i32, i1> onto loc: tile#18 @t=8
Processing operand: %81 = "neura.data_mov"(%66) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %81 = "neura.data_mov"(%66) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#26 @t=7 to tile#18 @t=8
[calculateAward] Operation: %47 = "neura.phi"(%45, %46) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>; Producers: 1
[DEBUG] Schedule op %47 = "neura.phi"(%45, %46) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> onto loc: tile#49 @t=9
Processing operand: %45 = neura.reserve : !neura.data<!llvm.ptr, i1>
Processing operand: %46 = "neura.data_mov"(%28) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %46 = "neura.data_mov"(%28) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#48 @t=8 to tile#49 @t=9
[calculateAward] Operation: %109 = "neura.load"(%108) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>; Producers: 1
[DEBUG] Schedule op %109 = "neura.load"(%108) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> onto loc: tile#26 @t=9
Processing operand: %108 = "neura.data_mov"(%75) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %108 = "neura.data_mov"(%75) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#34 @t=8 to tile#26 @t=9
[calculateAward] Operation: %91 = "neura.load"(%90) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>; Producers: 1
[DEBUG] Schedule op %91 = "neura.load"(%90) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> onto loc: tile#34 @t=9
Processing operand: %90 = "neura.data_mov"(%69) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %90 = "neura.data_mov"(%69) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#33 @t=8 to tile#34 @t=9
[calculateAward] Operation: %80 = "neura.load"(%79) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>; Producers: 1
[DEBUG] Schedule op %80 = "neura.load"(%79) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> onto loc: tile#9 @t=8
Processing operand: %79 = "neura.data_mov"(%63) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %79 = "neura.data_mov"(%63) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#17 @t=7 to tile#9 @t=8
[calculateAward] Operation: %113 = neura.sext %112 : !neura.data<i32, i1> -> !neura.data<i64, i1>; Producers: 1
[DEBUG] Schedule op %113 = neura.sext %112 : !neura.data<i32, i1> -> !neura.data<i64, i1> onto loc: tile#27 @t=9
Processing operand: %112 = "neura.data_mov"(%111) : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
[DEBUG] Successfully routed data move: %112 = "neura.data_mov"(%111) : (!neura.data<i32, i1>) -> !neura.data<i32, i1> from tile#35 @t=8 to tile#27 @t=9
[calculateAward] Operation: %95 = neura.sext %94 : !neura.data<i32, i1> -> !neura.data<i64, i1>; Producers: 1
[DEBUG] Schedule op %95 = neura.sext %94 : !neura.data<i32, i1> -> !neura.data<i64, i1> onto loc: tile#35 @t=9
Processing operand: %94 = "neura.data_mov"(%93) : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
[DEBUG] Successfully routed data move: %94 = "neura.data_mov"(%93) : (!neura.data<i32, i1>) -> !neura.data<i32, i1> from tile#27 @t=8 to tile#35 @t=9
[calculateAward] Operation: %84 = neura.sext %83 : !neura.data<i32, i1> -> !neura.data<i64, i1>; Producers: 1
[DEBUG] Schedule op %84 = neura.sext %83 : !neura.data<i32, i1> -> !neura.data<i64, i1> onto loc: tile#18 @t=9
Processing operand: %83 = "neura.data_mov"(%82) : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
[DEBUG] Successfully routed data move: %83 = "neura.data_mov"(%82) : (!neura.data<i32, i1>) -> !neura.data<i32, i1> from tile#18 @t=8 to tile#18 @t=9
[calculateAward] Operation: %72 = neura.grant_predicate %70, %71 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>; Producers: 2
[DEBUG] Schedule op %72 = neura.grant_predicate %70, %71 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1> onto loc: tile#50 @t=10
Processing operand: %70 = "neura.data_mov"(%47) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %70 = "neura.data_mov"(%47) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#49 @t=9 to tile#50 @t=10
Processing operand: %71 = "neura.data_mov"(%60) : (!neura.data<i1, i1>) -> !neura.data<i1, i1>
[DEBUG] Successfully routed data move: %71 = "neura.data_mov"(%60) : (!neura.data<i1, i1>) -> !neura.data<i1, i1> from tile#26 @t=5 to tile#50 @t=10
[DEBUG] Found ctrl_mov user: neura.ctrl_mov %72 -> %45 : !neura.data<!llvm.ptr, i1> !neura.data<!llvm.ptr, i1>
[tryRouteBackwardMove] src_loc: tile#50 @t=10, dst_loc: tile#49 @t=9
[DEBUG] Successfully routed ctrl_mov: neura.ctrl_mov %72 -> %45 : !neura.data<!llvm.ptr, i1> !neura.data<!llvm.ptr, i1> to tile#49 @t=9
[calculateAward] Operation: %116 = "neura.gep"(%114, %115) : (!neura.data<!llvm.ptr, i1>, !neura.data<i64, i1>) -> !neura.data<!llvm.ptr, i1>; Producers: 2
[DEBUG] Schedule op %116 = "neura.gep"(%114, %115) : (!neura.data<!llvm.ptr, i1>, !neura.data<i64, i1>) -> !neura.data<!llvm.ptr, i1> onto loc: tile#27 @t=10
Processing operand: %114 = "neura.data_mov"(%109) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %114 = "neura.data_mov"(%109) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#26 @t=9 to tile#27 @t=10
Processing operand: %115 = "neura.data_mov"(%113) : (!neura.data<i64, i1>) -> !neura.data<i64, i1>
[DEBUG] Successfully routed data move: %115 = "neura.data_mov"(%113) : (!neura.data<i64, i1>) -> !neura.data<i64, i1> from tile#27 @t=9 to tile#27 @t=10
[calculateAward] Operation: %98 = "neura.gep"(%96, %97) : (!neura.data<!llvm.ptr, i1>, !neura.data<i64, i1>) -> !neura.data<!llvm.ptr, i1>; Producers: 2
[DEBUG] Schedule op %98 = "neura.gep"(%96, %97) : (!neura.data<!llvm.ptr, i1>, !neura.data<i64, i1>) -> !neura.data<!llvm.ptr, i1> onto loc: tile#35 @t=10
Processing operand: %96 = "neura.data_mov"(%91) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %96 = "neura.data_mov"(%91) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#34 @t=9 to tile#35 @t=10
Processing operand: %97 = "neura.data_mov"(%95) : (!neura.data<i64, i1>) -> !neura.data<i64, i1>
[DEBUG] Successfully routed data move: %97 = "neura.data_mov"(%95) : (!neura.data<i64, i1>) -> !neura.data<i64, i1> from tile#35 @t=9 to tile#35 @t=10
[calculateAward] Operation: %87 = "neura.gep"(%85, %86) : (!neura.data<!llvm.ptr, i1>, !neura.data<i64, i1>) -> !neura.data<!llvm.ptr, i1>; Producers: 2
[DEBUG] Schedule op %87 = "neura.gep"(%85, %86) : (!neura.data<!llvm.ptr, i1>, !neura.data<i64, i1>) -> !neura.data<!llvm.ptr, i1> onto loc: tile#17 @t=10
Processing operand: %85 = "neura.data_mov"(%80) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %85 = "neura.data_mov"(%80) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#9 @t=8 to tile#17 @t=10
Processing operand: %86 = "neura.data_mov"(%84) : (!neura.data<i64, i1>) -> !neura.data<i64, i1>
[DEBUG] Successfully routed data move: %86 = "neura.data_mov"(%84) : (!neura.data<i64, i1>) -> !neura.data<i64, i1> from tile#18 @t=9 to tile#17 @t=10
[calculateAward] Operation: %107 = "neura.load"(%106) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<f32, i1>; Producers: 1
[DEBUG] Schedule op %107 = "neura.load"(%106) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<f32, i1> onto loc: tile#58 @t=11
Processing operand: %106 = "neura.data_mov"(%72) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %106 = "neura.data_mov"(%72) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#50 @t=10 to tile#58 @t=11
[calculateAward] Operation: %125 = "neura.load"(%124) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<i32, i1>; Producers: 1
[DEBUG] Schedule op %125 = "neura.load"(%124) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<i32, i1> onto loc: tile#32 @t=10
Processing operand: %124 = "neura.data_mov"(%66) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %124 = "neura.data_mov"(%66) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#26 @t=7 to tile#32 @t=10
[calculateAward] Operation: %118 = "neura.load"(%117) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<f32, i1>; Producers: 1
[DEBUG] Schedule op %118 = "neura.load"(%117) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<f32, i1> onto loc: tile#35 @t=11
Processing operand: %117 = "neura.data_mov"(%116) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %117 = "neura.data_mov"(%116) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#27 @t=10 to tile#35 @t=11
[calculateAward] Operation: %100 = "neura.load"(%99) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<f32, i1>; Producers: 1
[DEBUG] Schedule op %100 = "neura.load"(%99) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<f32, i1> onto loc: tile#43 @t=11
Processing operand: %99 = "neura.data_mov"(%98) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %99 = "neura.data_mov"(%98) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#35 @t=10 to tile#43 @t=11
[calculateAward] Operation: %89 = "neura.load"(%88) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<f32, i1>; Producers: 1
[DEBUG] Schedule op %89 = "neura.load"(%88) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<f32, i1> onto loc: tile#18 @t=11
Processing operand: %88 = "neura.data_mov"(%87) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %88 = "neura.data_mov"(%87) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#17 @t=10 to tile#18 @t=11
[calculateAward] Operation: %0 = "neura.constant"() <{value = "%arg0"}> : () -> !neura.data<!llvm.ptr, i1>; Producers: 0
[DEBUG] Schedule op %0 = "neura.constant"() <{value = "%arg0"}> : () -> !neura.data<!llvm.ptr, i1> onto loc: tile#36 @t=11
[calculateAward] Operation: %1 = "neura.constant"() <{value = "%arg1"}> : () -> !neura.data<!llvm.ptr, i1>; Producers: 0
[DEBUG] Schedule op %1 = "neura.constant"() <{value = "%arg1"}> : () -> !neura.data<!llvm.ptr, i1> onto loc: tile#8 @t=11
[calculateAward] Operation: %2 = "neura.constant"() <{value = "%arg2"}> : () -> !neura.data<!llvm.ptr, i1>; Producers: 0
[DEBUG] Schedule op %2 = "neura.constant"() <{value = "%arg2"}> : () -> !neura.data<!llvm.ptr, i1> onto loc: tile#59 @t=11
[calculateAward] Operation: %4 = "neura.constant"() <{value = 0 : i32}> : () -> !neura.data<i32, i1>; Producers: 0
[DEBUG] Schedule op %4 = "neura.constant"() <{value = 0 : i32}> : () -> !neura.data<i32, i1> onto loc: tile#17 @t=11
[calculateAward] Operation: %127 = "neura.add"(%126) {rhs_const_value = 1 : i32} : (!neura.data<i32, i1>) -> !neura.data<i32, i1>; Producers: 1
[DEBUG] Schedule op %127 = "neura.add"(%126) {rhs_const_value = 1 : i32} : (!neura.data<i32, i1>) -> !neura.data<i32, i1> onto loc: tile#33 @t=11
Processing operand: %126 = "neura.data_mov"(%125) : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
[DEBUG] Successfully routed data move: %126 = "neura.data_mov"(%125) : (!neura.data<i32, i1>) -> !neura.data<i32, i1> from tile#32 @t=10 to tile#33 @t=11
[calculateAward] Operation: %121 = "neura.fadd"(%119, %120) : (!neura.data<f32, i1>, !neura.data<f32, i1>) -> !neura.data<f32, i1>; Producers: 2
[DEBUG] Schedule op %121 = "neura.fadd"(%119, %120) : (!neura.data<f32, i1>, !neura.data<f32, i1>) -> !neura.data<f32, i1> onto loc: tile#42 @t=13
Processing operand: %119 = "neura.data_mov"(%118) : (!neura.data<f32, i1>) -> !neura.data<f32, i1>
[DEBUG] Successfully routed data move: %119 = "neura.data_mov"(%118) : (!neura.data<f32, i1>) -> !neura.data<f32, i1> from tile#35 @t=11 to tile#42 @t=13
Processing operand: %120 = "neura.data_mov"(%107) : (!neura.data<f32, i1>) -> !neura.data<f32, i1>
[DEBUG] Successfully routed data move: %120 = "neura.data_mov"(%107) : (!neura.data<f32, i1>) -> !neura.data<f32, i1> from tile#58 @t=11 to tile#42 @t=13
[calculateAward] Operation: %103 = "neura.fmul"(%101, %102) : (!neura.data<f32, i1>, !neura.data<f32, i1>) -> !neura.data<f32, i1>; Producers: 2
[DEBUG] Schedule op %103 = "neura.fmul"(%101, %102) : (!neura.data<f32, i1>, !neura.data<f32, i1>) -> !neura.data<f32, i1> onto loc: tile#27 @t=13
Processing operand: %101 = "neura.data_mov"(%89) : (!neura.data<f32, i1>) -> !neura.data<f32, i1>
[DEBUG] Successfully routed data move: %101 = "neura.data_mov"(%89) : (!neura.data<f32, i1>) -> !neura.data<f32, i1> from tile#18 @t=11 to tile#27 @t=13
Processing operand: %102 = "neura.data_mov"(%100) : (!neura.data<f32, i1>) -> !neura.data<f32, i1>
[DEBUG] Successfully routed data move: %102 = "neura.data_mov"(%100) : (!neura.data<f32, i1>) -> !neura.data<f32, i1> from tile#43 @t=11 to tile#27 @t=13
[calculateAward] Operation: "neura.return"() : () -> (); Producers: 0
[DEBUG] Schedule op "neura.return"() : () -> () onto loc: tile#0 @t=12
[calculateAward] Operation: "neura.store"(%29, %30) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> (); Producers: 2
[DEBUG] Schedule op "neura.store"(%29, %30) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> () onto loc: tile#35 @t=12
Processing operand: %29 = "neura.data_mov"(%0) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %29 = "neura.data_mov"(%0) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#36 @t=11 to tile#35 @t=12
Processing operand: %30 = "neura.data_mov"(%6) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %30 = "neura.data_mov"(%6) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#16 @t=4 to tile#35 @t=12
[calculateAward] Operation: "neura.store"(%31, %32) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> (); Producers: 2
[DEBUG] Schedule op "neura.store"(%31, %32) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> () onto loc: tile#8 @t=12
Processing operand: %31 = "neura.data_mov"(%1) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %31 = "neura.data_mov"(%1) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#8 @t=11 to tile#8 @t=12
Processing operand: %32 = "neura.data_mov"(%10) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %32 = "neura.data_mov"(%10) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#33 @t=4 to tile#8 @t=12
[calculateAward] Operation: "neura.store"(%33, %34) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> (); Producers: 2
[DEBUG] Schedule op "neura.store"(%33, %34) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> () onto loc: tile#59 @t=12
Processing operand: %33 = "neura.data_mov"(%2) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %33 = "neura.data_mov"(%2) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#59 @t=11 to tile#59 @t=12
Processing operand: %34 = "neura.data_mov"(%14) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %34 = "neura.data_mov"(%14) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#48 @t=4 to tile#59 @t=12
[calculateAward] Operation: "neura.store"(%37, %38) : (!neura.data<i32, i1>, !neura.data<!llvm.ptr, i1>) -> (); Producers: 2
[DEBUG] Schedule op "neura.store"(%37, %38) : (!neura.data<i32, i1>, !neura.data<!llvm.ptr, i1>) -> () onto loc: tile#17 @t=12
Processing operand: %37 = "neura.data_mov"(%4) : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
[DEBUG] Successfully routed data move: %37 = "neura.data_mov"(%4) : (!neura.data<i32, i1>) -> !neura.data<i32, i1> from tile#17 @t=11 to tile#17 @t=12
Processing operand: %38 = "neura.data_mov"(%18) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %38 = "neura.data_mov"(%18) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#41 @t=1 to tile#17 @t=12
[calculateAward] Operation: "neura.store"(%35, %36) : (!neura.data<i32, i1>, !neura.data<!llvm.ptr, i1>) -> (); Producers: 2
[DEBUG] Schedule op "neura.store"(%35, %36) : (!neura.data<i32, i1>, !neura.data<!llvm.ptr, i1>) -> () onto loc: tile#9 @t=12
Processing operand: %35 = "neura.data_mov"(%4) : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
[DEBUG] Successfully routed data move: %35 = "neura.data_mov"(%4) : (!neura.data<i32, i1>) -> !neura.data<i32, i1> from tile#17 @t=11 to tile#9 @t=12
Processing operand: %36 = "neura.data_mov"(%22) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %36 = "neura.data_mov"(%22) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#41 @t=3 to tile#9 @t=12
[calculateAward] Operation: "neura.store"(%128, %129) : (!neura.data<i32, i1>, !neura.data<!llvm.ptr, i1>) -> (); Producers: 2
[DEBUG] Schedule op "neura.store"(%128, %129) : (!neura.data<i32, i1>, !neura.data<!llvm.ptr, i1>) -> () onto loc: tile#26 @t=14
Processing operand: %128 = "neura.data_mov"(%127) : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
[DEBUG] Successfully routed data move: %128 = "neura.data_mov"(%127) : (!neura.data<i32, i1>) -> !neura.data<i32, i1> from tile#33 @t=11 to tile#26 @t=14
Processing operand: %129 = "neura.data_mov"(%66) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %129 = "neura.data_mov"(%66) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#26 @t=7 to tile#26 @t=14
[calculateAward] Operation: "neura.store"(%122, %123) : (!neura.data<f32, i1>, !neura.data<!llvm.ptr, i1>) -> (); Producers: 2
[DEBUG] Schedule op "neura.store"(%122, %123) : (!neura.data<f32, i1>, !neura.data<!llvm.ptr, i1>) -> () onto loc: tile#43 @t=14
Processing operand: %122 = "neura.data_mov"(%121) : (!neura.data<f32, i1>) -> !neura.data<f32, i1>
[DEBUG] Successfully routed data move: %122 = "neura.data_mov"(%121) : (!neura.data<f32, i1>) -> !neura.data<f32, i1> from tile#42 @t=13 to tile#43 @t=14
Processing operand: %123 = "neura.data_mov"(%116) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %123 = "neura.data_mov"(%116) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#27 @t=10 to tile#43 @t=14
[calculateAward] Operation: "neura.store"(%104, %105) : (!neura.data<f32, i1>, !neura.data<!llvm.ptr, i1>) -> (); Producers: 2
[DEBUG] Schedule op "neura.store"(%104, %105) : (!neura.data<f32, i1>, !neura.data<!llvm.ptr, i1>) -> () onto loc: tile#28 @t=15
Processing operand: %104 = "neura.data_mov"(%103) : (!neura.data<f32, i1>) -> !neura.data<f32, i1>
[DEBUG] Successfully routed data move: %104 = "neura.data_mov"(%103) : (!neura.data<f32, i1>) -> !neura.data<f32, i1> from tile#27 @t=13 to tile#28 @t=15
Processing operand: %105 = "neura.data_mov"(%72) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[DEBUG] Successfully routed data move: %105 = "neura.data_mov"(%72) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> from tile#50 @t=10 to tile#28 @t=15
=== MappingState: op_to_locs ===
  - neura.data_mov
      -> link#57 @t=7
  - neura.data_mov
      -> link#116 @t=11
      -> link#121 @t=12
      -> register#832 @t=13
  - neura.store
      -> tile#35 @t=12
  - neura.data_mov
      -> register#1344 @t=2
  - neura.data_mov
      -> link#143 @t=0
      -> link#113 @t=1
      -> link#83 @t=2
      -> register#512 @t=3
  - neura.ctrl_mov
      -> link#92 @t=7
      -> link#122 @t=8
  - neura.store
      -> tile#26 @t=14
  - neura.ctrl_mov
      -> link#55 @t=7
      -> register#513 @t=8
      -> register#513 @t=9
      -> register#513 @t=10
      -> register#513 @t=11
  - neura.grant_predicate
      -> tile#17 @t=7
  - neura.fmul
      -> tile#27 @t=13
  - neura.grant_predicate
      -> tile#34 @t=7
  - neura.store
      -> tile#9 @t=12
  - neura.data_mov
      -> link#151 @t=3
  - neura.constant
      -> tile#17 @t=11
  - neura.ctrl_mov
      -> link#118 @t=8
      -> link#148 @t=9
      -> register#1569 @t=10
      -> register#1569 @t=11
  - neura.ctrl_mov
      -> link#179 @t=10
      -> register#1570 @t=11
      -> register#1570 @t=12
      -> register#1570 @t=13
      -> register#1570 @t=14
  - neura.ctrl_mov
      -> register#1089 @t=8
      -> register#1089 @t=9
      -> register#1089 @t=10
      -> register#1089 @t=11
  - neura.ctrl_mov
      -> link#122 @t=7
      -> register#1345 @t=8
      -> register#1345 @t=9
      -> register#1345 @t=10
  - neura.store
      -> tile#43 @t=14
  - neura.grant_predicate
      -> tile#26 @t=7
  - neura.data_mov
      -> link#91 @t=7
  - neura.gep
      -> tile#17 @t=10
  - neura.return
      -> tile#0 @t=12
  - neura.data_mov
      -> link#56 @t=10
  - neura.data_mov
      -> link#116 @t=8
  - neura.data_mov
      -> link#90 @t=7
  - neura.data_mov
      -> link#120 @t=9
  - neura.gep
      -> tile#35 @t=10
  - neura.data_mov
      -> link#182 @t=10
  - neura.data_mov
      -> link#120 @t=7
  - neura.gep
      -> tile#27 @t=10
  - neura.phi
      -> tile#42 @t=3
  - neura.data_mov
      -> link#89 @t=7
      -> link#85 @t=8
      -> link#84 @t=9
  - neura.constant
      -> tile#8 @t=11
  - neura.constant
      -> tile#40 @t=0
  - neura.constant
      -> tile#36 @t=11
  - neura.constant
      -> tile#59 @t=11
  - neura.data_mov
      -> link#144 @t=0
      -> register#1536 @t=1
      -> register#1536 @t=2
      -> register#1536 @t=3
  - neura.data_mov
      -> link#142 @t=0
  - neura.data_mov
      -> register#1280 @t=0
      -> link#142 @t=1
      -> register#1312 @t=2
  - neura.data_mov
      -> register#1282 @t=0
      -> register#1282 @t=1
      -> register#1282 @t=2
      -> register#1282 @t=3
      -> register#1282 @t=4
      -> register#1282 @t=5
      -> register#1282 @t=6
  - neura.store
      -> tile#17 @t=12
  - neura.store
      -> tile#28 @t=15
  - neura.data_mov
      -> link#150 @t=13
  - neura.data_mov
      -> link#90 @t=9
  - neura.data_mov
      -> link#121 @t=8
  - neura.data_mov
      -> link#94 @t=13
      -> register#896 @t=14
  - neura.data_mov
      -> link#28 @t=8
      -> register#544 @t=9
  - neura.store
      -> tile#59 @t=12
  - neura.store
      -> tile#8 @t=12
  - neura.data_mov
      -> link#146 @t=3
  - neura.data_mov
      -> link#146 @t=1
  - neura.data_mov
      -> link#172 @t=4
  - neura.data_mov
      -> link#116 @t=4
  - neura.data_mov
      -> register#512 @t=4
  - neura.grant_predicate
      -> tile#33 @t=8
  - neura.grant_predicate
      -> tile#50 @t=10
  - neura.phi
      -> tile#16 @t=6
  - neura.phi
      -> tile#49 @t=6
  - neura.phi
      -> tile#49 @t=9
  - neura.phi
      -> tile#34 @t=6
  - neura.phi
      -> tile#42 @t=5
  - neura.grant_predicate
      -> tile#34 @t=8
  - neura.data_mov
      -> register#834 @t=7
      -> register#834 @t=8
      -> register#834 @t=9
      -> register#834 @t=10
      -> register#834 @t=11
      -> register#834 @t=12
      -> register#834 @t=13
  - neura.data_mov
      -> link#112 @t=10
  - neura.add
      -> tile#33 @t=11
  - neura.load
      -> tile#32 @t=10
  - neura.data_mov
      -> register#864 @t=10
      -> link#96 @t=11
      -> link#126 @t=12
      -> register#1376 @t=13
  - neura.data_mov
      -> link#123 @t=11
      -> link#122 @t=12
  - neura.data_mov
      -> link#209 @t=11
      -> link#181 @t=12
  - neura.fadd
      -> tile#42 @t=13
  - neura.data_mov
      -> link#96 @t=10
  - neura.load
      -> tile#35 @t=11
  - neura.data_mov
      -> register#864 @t=9
  - neura.data_mov
      -> link#125 @t=8
  - neura.sext
      -> tile#27 @t=9
  - neura.load
      -> tile#35 @t=8
  - neura.load
      -> tile#26 @t=9
  - neura.load
      -> tile#58 @t=11
  - neura.data_mov
      -> link#180 @t=10
      -> link#184 @t=11
      -> link#189 @t=12
      -> link#159 @t=13
      -> link#129 @t=14
  - neura.data_mov
      -> link#60 @t=11
      -> link#66 @t=12
  - neura.data_mov
      -> link#155 @t=11
      -> link#125 @t=12
  - neura.data_mov
      -> link#126 @t=10
  - neura.load
      -> tile#43 @t=11
  - neura.data_mov
      -> register#1120 @t=9
  - neura.data_mov
      -> link#96 @t=8
  - neura.sext
      -> tile#35 @t=9
  - neura.load
      -> tile#27 @t=8
  - neura.load
      -> tile#34 @t=9
  - neura.load
      -> tile#18 @t=11
  - neura.data_mov
      -> link#59 @t=9
  - neura.data_mov
      -> register#576 @t=8
  - neura.sext
      -> tile#18 @t=9
  - neura.load
      -> tile#18 @t=8
  - neura.load
      -> tile#9 @t=8
  - neura.data_mov
      -> link#151 @t=5
      -> register#1088 @t=6
  - neura.data_mov
      -> link#92 @t=5
      -> register#1089 @t=6
  - neura.data_mov
      -> register#1090 @t=6
      -> register#1090 @t=7
  - neura.data_mov
      -> register#832 @t=5
      -> link#92 @t=6
      -> register#1088 @t=7
  - neura.data_mov
      -> link#176 @t=9
  - neura.data_mov
      -> link#90 @t=5
      -> link#96 @t=6
      -> link#126 @t=7
      -> link#153 @t=8
      -> link#152 @t=9
  - neura.data_mov
      -> link#177 @t=6
      -> link#147 @t=7
  - neura.data_mov
      -> link#89 @t=5
      -> link#88 @t=6
      -> register#1056 @t=7
  - neura.data_mov
      -> register#1344 @t=3
      -> link#151 @t=4
      -> link#121 @t=5
      -> register#832 @t=6
  - neura.data_mov
      -> register#833 @t=5
      -> register#833 @t=6
  - neura.data_mov
      -> link#52 @t=6
  - neura.data_mov
      -> link#91 @t=5
      -> link#59 @t=6
  - neura.data_mov
      -> link#121 @t=4
  - neura.icmp
      -> tile#26 @t=5
  - neura.load
      -> tile#34 @t=4
  - neura.data_mov
      -> register#512 @t=5
  - neura.data_mov
      -> register#1568 @t=5
  - neura.data_mov
      -> link#172 @t=8
  - neura.data_mov
      -> register#1088 @t=5
  - neura.data_mov
      -> register#1344 @t=4
  - neura.data_mov
      -> register#544 @t=11
  - neura.data_mov
      -> register#1312 @t=1
      -> link#147 @t=2
      -> link#117 @t=3
      -> link#87 @t=4
      -> register#545 @t=5
      -> register#545 @t=6
      -> register#545 @t=7
      -> register#545 @t=8
      -> register#545 @t=9
      -> register#545 @t=10
      -> register#545 @t=11
  - neura.data_mov
      -> link#57 @t=11
  - neura.data_mov
      -> link#147 @t=3
      -> link#117 @t=4
      -> link#87 @t=5
      -> link#57 @t=6
      -> register#288 @t=7
      -> register#288 @t=8
      -> register#288 @t=9
      -> register#288 @t=10
      -> register#288 @t=11
  - neura.data_mov
      -> register#1888 @t=11
  - neura.data_mov
      -> link#174 @t=4
      -> link#202 @t=5
      -> link#205 @t=6
      -> link#208 @t=7
      -> register#1889 @t=8
      -> register#1889 @t=9
      -> register#1889 @t=10
      -> register#1889 @t=11
  - neura.data_mov
      -> register#256 @t=11
  - neura.data_mov
      -> link#115 @t=4
      -> link#113 @t=5
      -> link#83 @t=6
      -> link#53 @t=7
      -> register#257 @t=8
      -> register#257 @t=9
      -> register#257 @t=10
      -> register#257 @t=11
  - neura.data_mov
      -> link#127 @t=11
  - neura.data_mov
      -> link#54 @t=4
      -> link#84 @t=5
      -> link#112 @t=6
      -> link#116 @t=7
      -> link#120 @t=8
      -> register#1121 @t=9
      -> register#1121 @t=10
      -> register#1121 @t=11
  - neura.data_mov
      -> link#144 @t=7
  - neura.grant_once
      -> tile#48 @t=8
  - neura.alloca
      -> tile#40 @t=7
  - neura.grant_once
      -> tile#42 @t=4
  - neura.alloca
      -> tile#41 @t=3
  - neura.grant_once
      -> tile#42 @t=2
  - neura.alloca
      -> tile#41 @t=1
  - neura.grant_once
      -> tile#49 @t=5
  - neura.alloca
      -> tile#48 @t=4
  - neura.grant_once
      -> tile#34 @t=5
  - neura.data_mov
      -> register#1281 @t=0
      -> link#143 @t=1
      -> link#112 @t=2
      -> register#1056 @t=3
  - neura.alloca
      -> tile#33 @t=4
  - neura.grant_once
      -> tile#16 @t=5
  - neura.alloca
      -> tile#16 @t=4
=== End ===
[DEBUG] Recurrence cycle (length 2):
  %54 = neura.reserve : !neura.data<!llvm.ptr, i1>
  %56 = "neura.phi"(%54, %55) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
  %64 = "neura.data_mov"(%56) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
  %66 = neura.grant_predicate %64, %65 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>
  neura.ctrl_mov %66 -> %54 : !neura.data<!llvm.ptr, i1> !neura.data<!llvm.ptr, i1>
[DEBUG] Recurrence cycle (length 4):
  %54 = neura.reserve : !neura.data<!llvm.ptr, i1>
  %56 = "neura.phi"(%54, %55) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
  %57 = "neura.data_mov"(%56) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
  %58 = "neura.load"(%57) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<i32, i1>
  %59 = "neura.data_mov"(%58) : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
  %60 = "neura.icmp"(%59) <{cmpType = "slt"}> {rhs_const_value = 32 : i32} : (!neura.data<i32, i1>) -> !neura.data<i1, i1>
  %65 = "neura.data_mov"(%60) : (!neura.data<i1, i1>) -> !neura.data<i1, i1>
  %66 = neura.grant_predicate %64, %65 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>
  neura.ctrl_mov %66 -> %54 : !neura.data<!llvm.ptr, i1> !neura.data<!llvm.ptr, i1>
[DEBUG] Recurrence cycle (length 2):
  %51 = neura.reserve : !neura.data<!llvm.ptr, i1>
  %53 = "neura.phi"(%51, %52) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
  %61 = "neura.data_mov"(%53) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
  %63 = neura.grant_predicate %61, %62 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>
  neura.ctrl_mov %63 -> %51 : !neura.data<!llvm.ptr, i1> !neura.data<!llvm.ptr, i1>
[DEBUG] Recurrence cycle (length 2):
  %48 = neura.reserve : !neura.data<!llvm.ptr, i1>
  %50 = "neura.phi"(%48, %49) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
  %67 = "neura.data_mov"(%50) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
  %69 = neura.grant_predicate %67, %68 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>
  neura.ctrl_mov %69 -> %48 : !neura.data<!llvm.ptr, i1> !neura.data<!llvm.ptr, i1>
[DEBUG] Recurrence cycle (length 2):
  %45 = neura.reserve : !neura.data<!llvm.ptr, i1>
  %47 = "neura.phi"(%45, %46) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
  %70 = "neura.data_mov"(%47) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
  %72 = neura.grant_predicate %70, %71 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>
  neura.ctrl_mov %72 -> %45 : !neura.data<!llvm.ptr, i1> !neura.data<!llvm.ptr, i1>
[DEBUG] Recurrence cycle (length 2):
  %42 = neura.reserve : !neura.data<!llvm.ptr, i1>
  %44 = "neura.phi"(%42, %43) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
  %73 = "neura.data_mov"(%44) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
  %75 = neura.grant_predicate %73, %74 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>
  neura.ctrl_mov %75 -> %42 : !neura.data<!llvm.ptr, i1> !neura.data<!llvm.ptr, i1>
[DEBUG] Recurrence cycle (length 2):
  %39 = neura.reserve : !neura.data<!llvm.ptr, i1>
  %41 = "neura.phi"(%39, %40) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
  %76 = "neura.data_mov"(%41) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
  %78 = neura.grant_predicate %76, %77 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>
  neura.ctrl_mov %78 -> %39 : !neura.data<!llvm.ptr, i1> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Longest recurrence cycle (length 4):
%54 = neura.reserve : !neura.data<!llvm.ptr, i1>
%56 = "neura.phi"(%54, %55) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
%57 = "neura.data_mov"(%56) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
%58 = "neura.load"(%57) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<i32, i1>
%59 = "neura.data_mov"(%58) : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
%60 = "neura.icmp"(%59) <{cmpType = "slt"}> {rhs_const_value = 32 : i32} : (!neura.data<i32, i1>) -> !neura.data<i1, i1>
%65 = "neura.data_mov"(%60) : (!neura.data<i1, i1>) -> !neura.data<i1, i1>
%66 = neura.grant_predicate %64, %65 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>
neura.ctrl_mov %66 -> %54 : !neura.data<!llvm.ptr, i1> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %0 = "neura.constant"() <{value = "%arg0"}> : () -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %1 = "neura.constant"() <{value = "%arg1"}> : () -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %2 = "neura.constant"() <{value = "%arg2"}> : () -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %3 = "neura.constant"() <{value = 1 : i32}> : () -> !neura.data<i32, i1>
[MapToAcceleratorPass] Topologically sorted op: %4 = "neura.constant"() <{value = 0 : i32}> : () -> !neura.data<i32, i1>
[MapToAcceleratorPass] Topologically sorted op: %39 = neura.reserve : !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %42 = neura.reserve : !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %45 = neura.reserve : !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %48 = neura.reserve : !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %51 = neura.reserve : !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %54 = neura.reserve : !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: "neura.return"() : () -> ()
[MapToAcceleratorPass] Topologically sorted op: %29 = "neura.data_mov"(%0) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %31 = "neura.data_mov"(%1) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %33 = "neura.data_mov"(%2) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %5 = "neura.data_mov"(%3) : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
[MapToAcceleratorPass] Topologically sorted op: %9 = "neura.data_mov"(%3) : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
[MapToAcceleratorPass] Topologically sorted op: %13 = "neura.data_mov"(%3) : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
[MapToAcceleratorPass] Topologically sorted op: %17 = "neura.data_mov"(%3) : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
[MapToAcceleratorPass] Topologically sorted op: %21 = "neura.data_mov"(%3) : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
[MapToAcceleratorPass] Topologically sorted op: %25 = "neura.data_mov"(%3) : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
[MapToAcceleratorPass] Topologically sorted op: %35 = "neura.data_mov"(%4) : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
[MapToAcceleratorPass] Topologically sorted op: %37 = "neura.data_mov"(%4) : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
[MapToAcceleratorPass] Topologically sorted op: %6 = neura.alloca %5 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %10 = neura.alloca %9 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %14 = neura.alloca %13 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %18 = neura.alloca %17 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %22 = neura.alloca %21 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %26 = neura.alloca %25 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %30 = "neura.data_mov"(%6) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %7 = "neura.data_mov"(%6) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %32 = "neura.data_mov"(%10) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %11 = "neura.data_mov"(%10) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %34 = "neura.data_mov"(%14) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %15 = "neura.data_mov"(%14) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %38 = "neura.data_mov"(%18) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %19 = "neura.data_mov"(%18) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %36 = "neura.data_mov"(%22) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %23 = "neura.data_mov"(%22) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %27 = "neura.data_mov"(%26) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: "neura.store"(%29, %30) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> ()
[MapToAcceleratorPass] Topologically sorted op: %8 = "neura.grant_once"(%7) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: "neura.store"(%31, %32) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> ()
[MapToAcceleratorPass] Topologically sorted op: %12 = "neura.grant_once"(%11) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: "neura.store"(%33, %34) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> ()
[MapToAcceleratorPass] Topologically sorted op: %16 = "neura.grant_once"(%15) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: "neura.store"(%37, %38) : (!neura.data<i32, i1>, !neura.data<!llvm.ptr, i1>) -> ()
[MapToAcceleratorPass] Topologically sorted op: %20 = "neura.grant_once"(%19) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: "neura.store"(%35, %36) : (!neura.data<i32, i1>, !neura.data<!llvm.ptr, i1>) -> ()
[MapToAcceleratorPass] Topologically sorted op: %24 = "neura.grant_once"(%23) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %28 = "neura.grant_once"(%27) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %52 = "neura.data_mov"(%8) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %43 = "neura.data_mov"(%12) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %49 = "neura.data_mov"(%16) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %55 = "neura.data_mov"(%20) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %40 = "neura.data_mov"(%24) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %46 = "neura.data_mov"(%28) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %53 = "neura.phi"(%51, %52) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %44 = "neura.phi"(%42, %43) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %50 = "neura.phi"(%48, %49) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %56 = "neura.phi"(%54, %55) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %41 = "neura.phi"(%39, %40) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %47 = "neura.phi"(%45, %46) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %61 = "neura.data_mov"(%53) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %73 = "neura.data_mov"(%44) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %67 = "neura.data_mov"(%50) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %64 = "neura.data_mov"(%56) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %57 = "neura.data_mov"(%56) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %76 = "neura.data_mov"(%41) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %70 = "neura.data_mov"(%47) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %58 = "neura.load"(%57) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<i32, i1>
[MapToAcceleratorPass] Topologically sorted op: %59 = "neura.data_mov"(%58) : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
[MapToAcceleratorPass] Topologically sorted op: %60 = "neura.icmp"(%59) <{cmpType = "slt"}> {rhs_const_value = 32 : i32} : (!neura.data<i32, i1>) -> !neura.data<i1, i1>
[MapToAcceleratorPass] Topologically sorted op: %77 = "neura.data_mov"(%60) : (!neura.data<i1, i1>) -> !neura.data<i1, i1>
[MapToAcceleratorPass] Topologically sorted op: %74 = "neura.data_mov"(%60) : (!neura.data<i1, i1>) -> !neura.data<i1, i1>
[MapToAcceleratorPass] Topologically sorted op: %71 = "neura.data_mov"(%60) : (!neura.data<i1, i1>) -> !neura.data<i1, i1>
[MapToAcceleratorPass] Topologically sorted op: %68 = "neura.data_mov"(%60) : (!neura.data<i1, i1>) -> !neura.data<i1, i1>
[MapToAcceleratorPass] Topologically sorted op: %65 = "neura.data_mov"(%60) : (!neura.data<i1, i1>) -> !neura.data<i1, i1>
[MapToAcceleratorPass] Topologically sorted op: %62 = "neura.data_mov"(%60) : (!neura.data<i1, i1>) -> !neura.data<i1, i1>
[MapToAcceleratorPass] Topologically sorted op: %78 = neura.grant_predicate %76, %77 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %75 = neura.grant_predicate %73, %74 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %72 = neura.grant_predicate %70, %71 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %69 = neura.grant_predicate %67, %68 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %66 = neura.grant_predicate %64, %65 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %63 = neura.grant_predicate %61, %62 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: neura.ctrl_mov %78 -> %39 : !neura.data<!llvm.ptr, i1> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %110 = "neura.data_mov"(%78) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: neura.ctrl_mov %75 -> %42 : !neura.data<!llvm.ptr, i1> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %108 = "neura.data_mov"(%75) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: neura.ctrl_mov %72 -> %45 : !neura.data<!llvm.ptr, i1> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %106 = "neura.data_mov"(%72) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %105 = "neura.data_mov"(%72) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: neura.ctrl_mov %69 -> %48 : !neura.data<!llvm.ptr, i1> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %90 = "neura.data_mov"(%69) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: neura.ctrl_mov %66 -> %54 : !neura.data<!llvm.ptr, i1> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %129 = "neura.data_mov"(%66) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %124 = "neura.data_mov"(%66) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %92 = "neura.data_mov"(%66) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %81 = "neura.data_mov"(%66) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: neura.ctrl_mov %63 -> %51 : !neura.data<!llvm.ptr, i1> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %79 = "neura.data_mov"(%63) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %111 = "neura.load"(%110) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<i32, i1>
[MapToAcceleratorPass] Topologically sorted op: %109 = "neura.load"(%108) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %107 = "neura.load"(%106) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<f32, i1>
[MapToAcceleratorPass] Topologically sorted op: %91 = "neura.load"(%90) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %125 = "neura.load"(%124) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<i32, i1>
[MapToAcceleratorPass] Topologically sorted op: %93 = "neura.load"(%92) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<i32, i1>
[MapToAcceleratorPass] Topologically sorted op: %82 = "neura.load"(%81) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<i32, i1>
[MapToAcceleratorPass] Topologically sorted op: %80 = "neura.load"(%79) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %112 = "neura.data_mov"(%111) : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
[MapToAcceleratorPass] Topologically sorted op: %114 = "neura.data_mov"(%109) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %120 = "neura.data_mov"(%107) : (!neura.data<f32, i1>) -> !neura.data<f32, i1>
[MapToAcceleratorPass] Topologically sorted op: %96 = "neura.data_mov"(%91) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %126 = "neura.data_mov"(%125) : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
[MapToAcceleratorPass] Topologically sorted op: %94 = "neura.data_mov"(%93) : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
[MapToAcceleratorPass] Topologically sorted op: %83 = "neura.data_mov"(%82) : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
[MapToAcceleratorPass] Topologically sorted op: %85 = "neura.data_mov"(%80) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %113 = neura.sext %112 : !neura.data<i32, i1> -> !neura.data<i64, i1>
[MapToAcceleratorPass] Topologically sorted op: %127 = "neura.add"(%126) {rhs_const_value = 1 : i32} : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
[MapToAcceleratorPass] Topologically sorted op: %95 = neura.sext %94 : !neura.data<i32, i1> -> !neura.data<i64, i1>
[MapToAcceleratorPass] Topologically sorted op: %84 = neura.sext %83 : !neura.data<i32, i1> -> !neura.data<i64, i1>
[MapToAcceleratorPass] Topologically sorted op: %115 = "neura.data_mov"(%113) : (!neura.data<i64, i1>) -> !neura.data<i64, i1>
[MapToAcceleratorPass] Topologically sorted op: %128 = "neura.data_mov"(%127) : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
[MapToAcceleratorPass] Topologically sorted op: %97 = "neura.data_mov"(%95) : (!neura.data<i64, i1>) -> !neura.data<i64, i1>
[MapToAcceleratorPass] Topologically sorted op: %86 = "neura.data_mov"(%84) : (!neura.data<i64, i1>) -> !neura.data<i64, i1>
[MapToAcceleratorPass] Topologically sorted op: %116 = "neura.gep"(%114, %115) : (!neura.data<!llvm.ptr, i1>, !neura.data<i64, i1>) -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: "neura.store"(%128, %129) : (!neura.data<i32, i1>, !neura.data<!llvm.ptr, i1>) -> ()
[MapToAcceleratorPass] Topologically sorted op: %98 = "neura.gep"(%96, %97) : (!neura.data<!llvm.ptr, i1>, !neura.data<i64, i1>) -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %87 = "neura.gep"(%85, %86) : (!neura.data<!llvm.ptr, i1>, !neura.data<i64, i1>) -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %123 = "neura.data_mov"(%116) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %117 = "neura.data_mov"(%116) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %99 = "neura.data_mov"(%98) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %88 = "neura.data_mov"(%87) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] Topologically sorted op: %118 = "neura.load"(%117) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<f32, i1>
[MapToAcceleratorPass] Topologically sorted op: %100 = "neura.load"(%99) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<f32, i1>
[MapToAcceleratorPass] Topologically sorted op: %89 = "neura.load"(%88) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<f32, i1>
[MapToAcceleratorPass] Topologically sorted op: %119 = "neura.data_mov"(%118) : (!neura.data<f32, i1>) -> !neura.data<f32, i1>
[MapToAcceleratorPass] Topologically sorted op: %102 = "neura.data_mov"(%100) : (!neura.data<f32, i1>) -> !neura.data<f32, i1>
[MapToAcceleratorPass] Topologically sorted op: %101 = "neura.data_mov"(%89) : (!neura.data<f32, i1>) -> !neura.data<f32, i1>
[MapToAcceleratorPass] Topologically sorted op: %121 = "neura.fadd"(%119, %120) : (!neura.data<f32, i1>, !neura.data<f32, i1>) -> !neura.data<f32, i1>
[MapToAcceleratorPass] Topologically sorted op: %103 = "neura.fmul"(%101, %102) : (!neura.data<f32, i1>, !neura.data<f32, i1>) -> !neura.data<f32, i1>
[MapToAcceleratorPass] Topologically sorted op: %122 = "neura.data_mov"(%121) : (!neura.data<f32, i1>) -> !neura.data<f32, i1>
[MapToAcceleratorPass] Topologically sorted op: %104 = "neura.data_mov"(%103) : (!neura.data<f32, i1>) -> !neura.data<f32, i1>
[MapToAcceleratorPass] Topologically sorted op: "neura.store"(%122, %123) : (!neura.data<f32, i1>, !neura.data<!llvm.ptr, i1>) -> ()
[MapToAcceleratorPass] Topologically sorted op: "neura.store"(%104, %105) : (!neura.data<f32, i1>, !neura.data<!llvm.ptr, i1>) -> ()
[MapToAcceleratorPass] ALAP Bucket Level 0: 2 ops
  %3 = "neura.constant"() <{value = 1 : i32}> : () -> !neura.data<i32, i1>
  %17 = "neura.data_mov"(%3) : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
[MapToAcceleratorPass] ALAP Bucket Level 1: 2 ops
  %18 = neura.alloca %17 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>
  %19 = "neura.data_mov"(%18) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] ALAP Bucket Level 2: 4 ops
  %54 = neura.reserve : !neura.data<!llvm.ptr, i1>
  %21 = "neura.data_mov"(%3) : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
  %20 = "neura.grant_once"(%19) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
  %55 = "neura.data_mov"(%20) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] ALAP Bucket Level 3: 8 ops
  %5 = "neura.data_mov"(%3) : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
  %9 = "neura.data_mov"(%3) : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
  %13 = "neura.data_mov"(%3) : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
  %22 = neura.alloca %21 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>
  %23 = "neura.data_mov"(%22) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
  %56 = "neura.phi"(%54, %55) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
  %64 = "neura.data_mov"(%56) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
  %57 = "neura.data_mov"(%56) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] ALAP Bucket Level 4: 11 ops
  %39 = neura.reserve : !neura.data<!llvm.ptr, i1>
  %6 = neura.alloca %5 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>
  %10 = neura.alloca %9 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>
  %14 = neura.alloca %13 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>
  %7 = "neura.data_mov"(%6) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
  %11 = "neura.data_mov"(%10) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
  %15 = "neura.data_mov"(%14) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
  %24 = "neura.grant_once"(%23) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
  %40 = "neura.data_mov"(%24) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
  %58 = "neura.load"(%57) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<i32, i1>
  %59 = "neura.data_mov"(%58) : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
[MapToAcceleratorPass] ALAP Bucket Level 5: 15 ops
  %42 = neura.reserve : !neura.data<!llvm.ptr, i1>
  %48 = neura.reserve : !neura.data<!llvm.ptr, i1>
  %51 = neura.reserve : !neura.data<!llvm.ptr, i1>
  %25 = "neura.data_mov"(%3) : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
  %8 = "neura.grant_once"(%7) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
  %12 = "neura.grant_once"(%11) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
  %16 = "neura.grant_once"(%15) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
  %52 = "neura.data_mov"(%8) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
  %43 = "neura.data_mov"(%12) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
  %49 = "neura.data_mov"(%16) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
  %41 = "neura.phi"(%39, %40) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
  %76 = "neura.data_mov"(%41) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
  %60 = "neura.icmp"(%59) <{cmpType = "slt"}> {rhs_const_value = 32 : i32} : (!neura.data<i32, i1>) -> !neura.data<i1, i1>
  %77 = "neura.data_mov"(%60) : (!neura.data<i1, i1>) -> !neura.data<i1, i1>
  %65 = "neura.data_mov"(%60) : (!neura.data<i1, i1>) -> !neura.data<i1, i1>
[MapToAcceleratorPass] ALAP Bucket Level 6: 18 ops
  %26 = neura.alloca %25 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>
  %27 = "neura.data_mov"(%26) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
  %53 = "neura.phi"(%51, %52) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
  %44 = "neura.phi"(%42, %43) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
  %50 = "neura.phi"(%48, %49) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
  %61 = "neura.data_mov"(%53) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
  %73 = "neura.data_mov"(%44) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
  %67 = "neura.data_mov"(%50) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
  %74 = "neura.data_mov"(%60) : (!neura.data<i1, i1>) -> !neura.data<i1, i1>
  %68 = "neura.data_mov"(%60) : (!neura.data<i1, i1>) -> !neura.data<i1, i1>
  %62 = "neura.data_mov"(%60) : (!neura.data<i1, i1>) -> !neura.data<i1, i1>
  %78 = neura.grant_predicate %76, %77 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>
  %66 = neura.grant_predicate %64, %65 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>
  neura.ctrl_mov %78 -> %39 : !neura.data<!llvm.ptr, i1> !neura.data<!llvm.ptr, i1>
  %110 = "neura.data_mov"(%78) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
  neura.ctrl_mov %66 -> %54 : !neura.data<!llvm.ptr, i1> !neura.data<!llvm.ptr, i1>
  %92 = "neura.data_mov"(%66) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
  %81 = "neura.data_mov"(%66) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] ALAP Bucket Level 7: 18 ops
  %45 = neura.reserve : !neura.data<!llvm.ptr, i1>
  %28 = "neura.grant_once"(%27) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
  %46 = "neura.data_mov"(%28) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
  %75 = neura.grant_predicate %73, %74 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>
  %69 = neura.grant_predicate %67, %68 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>
  %63 = neura.grant_predicate %61, %62 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>
  neura.ctrl_mov %75 -> %42 : !neura.data<!llvm.ptr, i1> !neura.data<!llvm.ptr, i1>
  %108 = "neura.data_mov"(%75) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
  neura.ctrl_mov %69 -> %48 : !neura.data<!llvm.ptr, i1> !neura.data<!llvm.ptr, i1>
  %90 = "neura.data_mov"(%69) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
  neura.ctrl_mov %63 -> %51 : !neura.data<!llvm.ptr, i1> !neura.data<!llvm.ptr, i1>
  %79 = "neura.data_mov"(%63) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
  %111 = "neura.load"(%110) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<i32, i1>
  %93 = "neura.load"(%92) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<i32, i1>
  %82 = "neura.load"(%81) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<i32, i1>
  %112 = "neura.data_mov"(%111) : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
  %94 = "neura.data_mov"(%93) : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
  %83 = "neura.data_mov"(%82) : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
[MapToAcceleratorPass] ALAP Bucket Level 8: 15 ops
  %47 = "neura.phi"(%45, %46) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
  %70 = "neura.data_mov"(%47) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
  %71 = "neura.data_mov"(%60) : (!neura.data<i1, i1>) -> !neura.data<i1, i1>
  %109 = "neura.load"(%108) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
  %91 = "neura.load"(%90) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
  %80 = "neura.load"(%79) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
  %114 = "neura.data_mov"(%109) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
  %96 = "neura.data_mov"(%91) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
  %85 = "neura.data_mov"(%80) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
  %113 = neura.sext %112 : !neura.data<i32, i1> -> !neura.data<i64, i1>
  %95 = neura.sext %94 : !neura.data<i32, i1> -> !neura.data<i64, i1>
  %84 = neura.sext %83 : !neura.data<i32, i1> -> !neura.data<i64, i1>
  %115 = "neura.data_mov"(%113) : (!neura.data<i64, i1>) -> !neura.data<i64, i1>
  %97 = "neura.data_mov"(%95) : (!neura.data<i64, i1>) -> !neura.data<i64, i1>
  %86 = "neura.data_mov"(%84) : (!neura.data<i64, i1>) -> !neura.data<i64, i1>
[MapToAcceleratorPass] ALAP Bucket Level 9: 10 ops
  %72 = neura.grant_predicate %70, %71 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>
  neura.ctrl_mov %72 -> %45 : !neura.data<!llvm.ptr, i1> !neura.data<!llvm.ptr, i1>
  %106 = "neura.data_mov"(%72) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
  %124 = "neura.data_mov"(%66) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
  %116 = "neura.gep"(%114, %115) : (!neura.data<!llvm.ptr, i1>, !neura.data<i64, i1>) -> !neura.data<!llvm.ptr, i1>
  %98 = "neura.gep"(%96, %97) : (!neura.data<!llvm.ptr, i1>, !neura.data<i64, i1>) -> !neura.data<!llvm.ptr, i1>
  %87 = "neura.gep"(%85, %86) : (!neura.data<!llvm.ptr, i1>, !neura.data<i64, i1>) -> !neura.data<!llvm.ptr, i1>
  %117 = "neura.data_mov"(%116) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
  %99 = "neura.data_mov"(%98) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
  %88 = "neura.data_mov"(%87) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[MapToAcceleratorPass] ALAP Bucket Level 10: 10 ops
  %107 = "neura.load"(%106) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<f32, i1>
  %125 = "neura.load"(%124) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<i32, i1>
  %120 = "neura.data_mov"(%107) : (!neura.data<f32, i1>) -> !neura.data<f32, i1>
  %126 = "neura.data_mov"(%125) : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
  %118 = "neura.load"(%117) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<f32, i1>
  %100 = "neura.load"(%99) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<f32, i1>
  %89 = "neura.load"(%88) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<f32, i1>
  %119 = "neura.data_mov"(%118) : (!neura.data<f32, i1>) -> !neura.data<f32, i1>
  %102 = "neura.data_mov"(%100) : (!neura.data<f32, i1>) -> !neura.data<f32, i1>
  %101 = "neura.data_mov"(%89) : (!neura.data<f32, i1>) -> !neura.data<f32, i1>
[MapToAcceleratorPass] ALAP Bucket Level 11: 23 ops
  %0 = "neura.constant"() <{value = "%arg0"}> : () -> !neura.data<!llvm.ptr, i1>
  %1 = "neura.constant"() <{value = "%arg1"}> : () -> !neura.data<!llvm.ptr, i1>
  %2 = "neura.constant"() <{value = "%arg2"}> : () -> !neura.data<!llvm.ptr, i1>
  %4 = "neura.constant"() <{value = 0 : i32}> : () -> !neura.data<i32, i1>
  %29 = "neura.data_mov"(%0) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
  %31 = "neura.data_mov"(%1) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
  %33 = "neura.data_mov"(%2) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
  %35 = "neura.data_mov"(%4) : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
  %37 = "neura.data_mov"(%4) : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
  %30 = "neura.data_mov"(%6) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
  %32 = "neura.data_mov"(%10) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
  %34 = "neura.data_mov"(%14) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
  %38 = "neura.data_mov"(%18) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
  %36 = "neura.data_mov"(%22) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
  %105 = "neura.data_mov"(%72) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
  %129 = "neura.data_mov"(%66) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
  %127 = "neura.add"(%126) {rhs_const_value = 1 : i32} : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
  %128 = "neura.data_mov"(%127) : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
  %123 = "neura.data_mov"(%116) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
  %121 = "neura.fadd"(%119, %120) : (!neura.data<f32, i1>, !neura.data<f32, i1>) -> !neura.data<f32, i1>
  %103 = "neura.fmul"(%101, %102) : (!neura.data<f32, i1>, !neura.data<f32, i1>) -> !neura.data<f32, i1>
  %122 = "neura.data_mov"(%121) : (!neura.data<f32, i1>) -> !neura.data<f32, i1>
  %104 = "neura.data_mov"(%103) : (!neura.data<f32, i1>) -> !neura.data<f32, i1>
[MapToAcceleratorPass] ALAP Bucket Level 12: 9 ops
  "neura.return"() : () -> ()
  "neura.store"(%29, %30) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> ()
  "neura.store"(%31, %32) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> ()
  "neura.store"(%33, %34) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> ()
  "neura.store"(%37, %38) : (!neura.data<i32, i1>, !neura.data<!llvm.ptr, i1>) -> ()
  "neura.store"(%35, %36) : (!neura.data<i32, i1>, !neura.data<!llvm.ptr, i1>) -> ()
  "neura.store"(%128, %129) : (!neura.data<i32, i1>, !neura.data<!llvm.ptr, i1>) -> ()
  "neura.store"(%122, %123) : (!neura.data<f32, i1>, !neura.data<!llvm.ptr, i1>) -> ()
  "neura.store"(%104, %105) : (!neura.data<f32, i1>, !neura.data<!llvm.ptr, i1>) -> ()
[MapToAcceleratorPass] ALAP sorted op: %3 = "neura.constant"() <{value = 1 : i32}> : () -> !neura.data<i32, i1> (ALAP level: 0)
[MapToAcceleratorPass] ALAP sorted op: %17 = "neura.data_mov"(%3) : (!neura.data<i32, i1>) -> !neura.data<i32, i1> (ALAP level: 0)
[MapToAcceleratorPass] ALAP sorted op: %18 = neura.alloca %17 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1> (ALAP level: 1)
[MapToAcceleratorPass] ALAP sorted op: %19 = "neura.data_mov"(%18) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> (ALAP level: 1)
[MapToAcceleratorPass] ALAP sorted op: %54 = neura.reserve : !neura.data<!llvm.ptr, i1> (ALAP level: 2)
[MapToAcceleratorPass] ALAP sorted op: %21 = "neura.data_mov"(%3) : (!neura.data<i32, i1>) -> !neura.data<i32, i1> (ALAP level: 2)
[MapToAcceleratorPass] ALAP sorted op: %20 = "neura.grant_once"(%19) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> (ALAP level: 2)
[MapToAcceleratorPass] ALAP sorted op: %55 = "neura.data_mov"(%20) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> (ALAP level: 2)
[MapToAcceleratorPass] ALAP sorted op: %5 = "neura.data_mov"(%3) : (!neura.data<i32, i1>) -> !neura.data<i32, i1> (ALAP level: 3)
[MapToAcceleratorPass] ALAP sorted op: %9 = "neura.data_mov"(%3) : (!neura.data<i32, i1>) -> !neura.data<i32, i1> (ALAP level: 3)
[MapToAcceleratorPass] ALAP sorted op: %13 = "neura.data_mov"(%3) : (!neura.data<i32, i1>) -> !neura.data<i32, i1> (ALAP level: 3)
[MapToAcceleratorPass] ALAP sorted op: %22 = neura.alloca %21 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1> (ALAP level: 3)
[MapToAcceleratorPass] ALAP sorted op: %23 = "neura.data_mov"(%22) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> (ALAP level: 3)
[MapToAcceleratorPass] ALAP sorted op: %56 = "neura.phi"(%54, %55) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> (ALAP level: 3)
[MapToAcceleratorPass] ALAP sorted op: %64 = "neura.data_mov"(%56) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> (ALAP level: 3)
[MapToAcceleratorPass] ALAP sorted op: %57 = "neura.data_mov"(%56) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> (ALAP level: 3)
[MapToAcceleratorPass] ALAP sorted op: %39 = neura.reserve : !neura.data<!llvm.ptr, i1> (ALAP level: 4)
[MapToAcceleratorPass] ALAP sorted op: %6 = neura.alloca %5 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1> (ALAP level: 4)
[MapToAcceleratorPass] ALAP sorted op: %10 = neura.alloca %9 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1> (ALAP level: 4)
[MapToAcceleratorPass] ALAP sorted op: %14 = neura.alloca %13 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1> (ALAP level: 4)
[MapToAcceleratorPass] ALAP sorted op: %7 = "neura.data_mov"(%6) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> (ALAP level: 4)
[MapToAcceleratorPass] ALAP sorted op: %11 = "neura.data_mov"(%10) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> (ALAP level: 4)
[MapToAcceleratorPass] ALAP sorted op: %15 = "neura.data_mov"(%14) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> (ALAP level: 4)
[MapToAcceleratorPass] ALAP sorted op: %24 = "neura.grant_once"(%23) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> (ALAP level: 4)
[MapToAcceleratorPass] ALAP sorted op: %40 = "neura.data_mov"(%24) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> (ALAP level: 4)
[MapToAcceleratorPass] ALAP sorted op: %58 = "neura.load"(%57) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<i32, i1> (ALAP level: 4)
[MapToAcceleratorPass] ALAP sorted op: %59 = "neura.data_mov"(%58) : (!neura.data<i32, i1>) -> !neura.data<i32, i1> (ALAP level: 4)
[MapToAcceleratorPass] ALAP sorted op: %42 = neura.reserve : !neura.data<!llvm.ptr, i1> (ALAP level: 5)
[MapToAcceleratorPass] ALAP sorted op: %48 = neura.reserve : !neura.data<!llvm.ptr, i1> (ALAP level: 5)
[MapToAcceleratorPass] ALAP sorted op: %51 = neura.reserve : !neura.data<!llvm.ptr, i1> (ALAP level: 5)
[MapToAcceleratorPass] ALAP sorted op: %25 = "neura.data_mov"(%3) : (!neura.data<i32, i1>) -> !neura.data<i32, i1> (ALAP level: 5)
[MapToAcceleratorPass] ALAP sorted op: %8 = "neura.grant_once"(%7) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> (ALAP level: 5)
[MapToAcceleratorPass] ALAP sorted op: %12 = "neura.grant_once"(%11) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> (ALAP level: 5)
[MapToAcceleratorPass] ALAP sorted op: %16 = "neura.grant_once"(%15) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> (ALAP level: 5)
[MapToAcceleratorPass] ALAP sorted op: %52 = "neura.data_mov"(%8) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> (ALAP level: 5)
[MapToAcceleratorPass] ALAP sorted op: %43 = "neura.data_mov"(%12) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> (ALAP level: 5)
[MapToAcceleratorPass] ALAP sorted op: %49 = "neura.data_mov"(%16) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> (ALAP level: 5)
[MapToAcceleratorPass] ALAP sorted op: %41 = "neura.phi"(%39, %40) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> (ALAP level: 5)
[MapToAcceleratorPass] ALAP sorted op: %76 = "neura.data_mov"(%41) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> (ALAP level: 5)
[MapToAcceleratorPass] ALAP sorted op: %60 = "neura.icmp"(%59) <{cmpType = "slt"}> {rhs_const_value = 32 : i32} : (!neura.data<i32, i1>) -> !neura.data<i1, i1> (ALAP level: 5)
[MapToAcceleratorPass] ALAP sorted op: %77 = "neura.data_mov"(%60) : (!neura.data<i1, i1>) -> !neura.data<i1, i1> (ALAP level: 5)
[MapToAcceleratorPass] ALAP sorted op: %65 = "neura.data_mov"(%60) : (!neura.data<i1, i1>) -> !neura.data<i1, i1> (ALAP level: 5)
[MapToAcceleratorPass] ALAP sorted op: %26 = neura.alloca %25 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1> (ALAP level: 6)
[MapToAcceleratorPass] ALAP sorted op: %27 = "neura.data_mov"(%26) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> (ALAP level: 6)
[MapToAcceleratorPass] ALAP sorted op: %53 = "neura.phi"(%51, %52) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> (ALAP level: 6)
[MapToAcceleratorPass] ALAP sorted op: %44 = "neura.phi"(%42, %43) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> (ALAP level: 6)
[MapToAcceleratorPass] ALAP sorted op: %50 = "neura.phi"(%48, %49) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> (ALAP level: 6)
[MapToAcceleratorPass] ALAP sorted op: %61 = "neura.data_mov"(%53) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> (ALAP level: 6)
[MapToAcceleratorPass] ALAP sorted op: %73 = "neura.data_mov"(%44) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> (ALAP level: 6)
[MapToAcceleratorPass] ALAP sorted op: %67 = "neura.data_mov"(%50) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> (ALAP level: 6)
[MapToAcceleratorPass] ALAP sorted op: %74 = "neura.data_mov"(%60) : (!neura.data<i1, i1>) -> !neura.data<i1, i1> (ALAP level: 6)
[MapToAcceleratorPass] ALAP sorted op: %68 = "neura.data_mov"(%60) : (!neura.data<i1, i1>) -> !neura.data<i1, i1> (ALAP level: 6)
[MapToAcceleratorPass] ALAP sorted op: %62 = "neura.data_mov"(%60) : (!neura.data<i1, i1>) -> !neura.data<i1, i1> (ALAP level: 6)
[MapToAcceleratorPass] ALAP sorted op: %78 = neura.grant_predicate %76, %77 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1> (ALAP level: 6)
[MapToAcceleratorPass] ALAP sorted op: %66 = neura.grant_predicate %64, %65 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1> (ALAP level: 6)
[MapToAcceleratorPass] ALAP sorted op: neura.ctrl_mov %78 -> %39 : !neura.data<!llvm.ptr, i1> !neura.data<!llvm.ptr, i1> (ALAP level: 6)
[MapToAcceleratorPass] ALAP sorted op: %110 = "neura.data_mov"(%78) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> (ALAP level: 6)
[MapToAcceleratorPass] ALAP sorted op: neura.ctrl_mov %66 -> %54 : !neura.data<!llvm.ptr, i1> !neura.data<!llvm.ptr, i1> (ALAP level: 6)
[MapToAcceleratorPass] ALAP sorted op: %92 = "neura.data_mov"(%66) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> (ALAP level: 6)
[MapToAcceleratorPass] ALAP sorted op: %81 = "neura.data_mov"(%66) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> (ALAP level: 6)
[MapToAcceleratorPass] ALAP sorted op: %45 = neura.reserve : !neura.data<!llvm.ptr, i1> (ALAP level: 7)
[MapToAcceleratorPass] ALAP sorted op: %28 = "neura.grant_once"(%27) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> (ALAP level: 7)
[MapToAcceleratorPass] ALAP sorted op: %46 = "neura.data_mov"(%28) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> (ALAP level: 7)
[MapToAcceleratorPass] ALAP sorted op: %75 = neura.grant_predicate %73, %74 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1> (ALAP level: 7)
[MapToAcceleratorPass] ALAP sorted op: %69 = neura.grant_predicate %67, %68 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1> (ALAP level: 7)
[MapToAcceleratorPass] ALAP sorted op: %63 = neura.grant_predicate %61, %62 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1> (ALAP level: 7)
[MapToAcceleratorPass] ALAP sorted op: neura.ctrl_mov %75 -> %42 : !neura.data<!llvm.ptr, i1> !neura.data<!llvm.ptr, i1> (ALAP level: 7)
[MapToAcceleratorPass] ALAP sorted op: %108 = "neura.data_mov"(%75) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> (ALAP level: 7)
[MapToAcceleratorPass] ALAP sorted op: neura.ctrl_mov %69 -> %48 : !neura.data<!llvm.ptr, i1> !neura.data<!llvm.ptr, i1> (ALAP level: 7)
[MapToAcceleratorPass] ALAP sorted op: %90 = "neura.data_mov"(%69) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> (ALAP level: 7)
[MapToAcceleratorPass] ALAP sorted op: neura.ctrl_mov %63 -> %51 : !neura.data<!llvm.ptr, i1> !neura.data<!llvm.ptr, i1> (ALAP level: 7)
[MapToAcceleratorPass] ALAP sorted op: %79 = "neura.data_mov"(%63) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> (ALAP level: 7)
[MapToAcceleratorPass] ALAP sorted op: %111 = "neura.load"(%110) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<i32, i1> (ALAP level: 7)
[MapToAcceleratorPass] ALAP sorted op: %93 = "neura.load"(%92) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<i32, i1> (ALAP level: 7)
[MapToAcceleratorPass] ALAP sorted op: %82 = "neura.load"(%81) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<i32, i1> (ALAP level: 7)
[MapToAcceleratorPass] ALAP sorted op: %112 = "neura.data_mov"(%111) : (!neura.data<i32, i1>) -> !neura.data<i32, i1> (ALAP level: 7)
[MapToAcceleratorPass] ALAP sorted op: %94 = "neura.data_mov"(%93) : (!neura.data<i32, i1>) -> !neura.data<i32, i1> (ALAP level: 7)
[MapToAcceleratorPass] ALAP sorted op: %83 = "neura.data_mov"(%82) : (!neura.data<i32, i1>) -> !neura.data<i32, i1> (ALAP level: 7)
[MapToAcceleratorPass] ALAP sorted op: %47 = "neura.phi"(%45, %46) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> (ALAP level: 8)
[MapToAcceleratorPass] ALAP sorted op: %70 = "neura.data_mov"(%47) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> (ALAP level: 8)
[MapToAcceleratorPass] ALAP sorted op: %71 = "neura.data_mov"(%60) : (!neura.data<i1, i1>) -> !neura.data<i1, i1> (ALAP level: 8)
[MapToAcceleratorPass] ALAP sorted op: %109 = "neura.load"(%108) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> (ALAP level: 8)
[MapToAcceleratorPass] ALAP sorted op: %91 = "neura.load"(%90) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> (ALAP level: 8)
[MapToAcceleratorPass] ALAP sorted op: %80 = "neura.load"(%79) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> (ALAP level: 8)
[MapToAcceleratorPass] ALAP sorted op: %114 = "neura.data_mov"(%109) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> (ALAP level: 8)
[MapToAcceleratorPass] ALAP sorted op: %96 = "neura.data_mov"(%91) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> (ALAP level: 8)
[MapToAcceleratorPass] ALAP sorted op: %85 = "neura.data_mov"(%80) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> (ALAP level: 8)
[MapToAcceleratorPass] ALAP sorted op: %113 = neura.sext %112 : !neura.data<i32, i1> -> !neura.data<i64, i1> (ALAP level: 8)
[MapToAcceleratorPass] ALAP sorted op: %95 = neura.sext %94 : !neura.data<i32, i1> -> !neura.data<i64, i1> (ALAP level: 8)
[MapToAcceleratorPass] ALAP sorted op: %84 = neura.sext %83 : !neura.data<i32, i1> -> !neura.data<i64, i1> (ALAP level: 8)
[MapToAcceleratorPass] ALAP sorted op: %115 = "neura.data_mov"(%113) : (!neura.data<i64, i1>) -> !neura.data<i64, i1> (ALAP level: 8)
[MapToAcceleratorPass] ALAP sorted op: %97 = "neura.data_mov"(%95) : (!neura.data<i64, i1>) -> !neura.data<i64, i1> (ALAP level: 8)
[MapToAcceleratorPass] ALAP sorted op: %86 = "neura.data_mov"(%84) : (!neura.data<i64, i1>) -> !neura.data<i64, i1> (ALAP level: 8)
[MapToAcceleratorPass] ALAP sorted op: %72 = neura.grant_predicate %70, %71 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1> (ALAP level: 9)
[MapToAcceleratorPass] ALAP sorted op: neura.ctrl_mov %72 -> %45 : !neura.data<!llvm.ptr, i1> !neura.data<!llvm.ptr, i1> (ALAP level: 9)
[MapToAcceleratorPass] ALAP sorted op: %106 = "neura.data_mov"(%72) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> (ALAP level: 9)
[MapToAcceleratorPass] ALAP sorted op: %124 = "neura.data_mov"(%66) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> (ALAP level: 9)
[MapToAcceleratorPass] ALAP sorted op: %116 = "neura.gep"(%114, %115) : (!neura.data<!llvm.ptr, i1>, !neura.data<i64, i1>) -> !neura.data<!llvm.ptr, i1> (ALAP level: 9)
[MapToAcceleratorPass] ALAP sorted op: %98 = "neura.gep"(%96, %97) : (!neura.data<!llvm.ptr, i1>, !neura.data<i64, i1>) -> !neura.data<!llvm.ptr, i1> (ALAP level: 9)
[MapToAcceleratorPass] ALAP sorted op: %87 = "neura.gep"(%85, %86) : (!neura.data<!llvm.ptr, i1>, !neura.data<i64, i1>) -> !neura.data<!llvm.ptr, i1> (ALAP level: 9)
[MapToAcceleratorPass] ALAP sorted op: %117 = "neura.data_mov"(%116) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> (ALAP level: 9)
[MapToAcceleratorPass] ALAP sorted op: %99 = "neura.data_mov"(%98) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> (ALAP level: 9)
[MapToAcceleratorPass] ALAP sorted op: %88 = "neura.data_mov"(%87) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> (ALAP level: 9)
[MapToAcceleratorPass] ALAP sorted op: %107 = "neura.load"(%106) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<f32, i1> (ALAP level: 10)
[MapToAcceleratorPass] ALAP sorted op: %125 = "neura.load"(%124) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<i32, i1> (ALAP level: 10)
[MapToAcceleratorPass] ALAP sorted op: %120 = "neura.data_mov"(%107) : (!neura.data<f32, i1>) -> !neura.data<f32, i1> (ALAP level: 10)
[MapToAcceleratorPass] ALAP sorted op: %126 = "neura.data_mov"(%125) : (!neura.data<i32, i1>) -> !neura.data<i32, i1> (ALAP level: 10)
[MapToAcceleratorPass] ALAP sorted op: %118 = "neura.load"(%117) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<f32, i1> (ALAP level: 10)
[MapToAcceleratorPass] ALAP sorted op: %100 = "neura.load"(%99) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<f32, i1> (ALAP level: 10)
[MapToAcceleratorPass] ALAP sorted op: %89 = "neura.load"(%88) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<f32, i1> (ALAP level: 10)
[MapToAcceleratorPass] ALAP sorted op: %119 = "neura.data_mov"(%118) : (!neura.data<f32, i1>) -> !neura.data<f32, i1> (ALAP level: 10)
[MapToAcceleratorPass] ALAP sorted op: %102 = "neura.data_mov"(%100) : (!neura.data<f32, i1>) -> !neura.data<f32, i1> (ALAP level: 10)
[MapToAcceleratorPass] ALAP sorted op: %101 = "neura.data_mov"(%89) : (!neura.data<f32, i1>) -> !neura.data<f32, i1> (ALAP level: 10)
[MapToAcceleratorPass] ALAP sorted op: %0 = "neura.constant"() <{value = "%arg0"}> : () -> !neura.data<!llvm.ptr, i1> (ALAP level: 11)
[MapToAcceleratorPass] ALAP sorted op: %1 = "neura.constant"() <{value = "%arg1"}> : () -> !neura.data<!llvm.ptr, i1> (ALAP level: 11)
[MapToAcceleratorPass] ALAP sorted op: %2 = "neura.constant"() <{value = "%arg2"}> : () -> !neura.data<!llvm.ptr, i1> (ALAP level: 11)
[MapToAcceleratorPass] ALAP sorted op: %4 = "neura.constant"() <{value = 0 : i32}> : () -> !neura.data<i32, i1> (ALAP level: 11)
[MapToAcceleratorPass] ALAP sorted op: %29 = "neura.data_mov"(%0) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> (ALAP level: 11)
[MapToAcceleratorPass] ALAP sorted op: %31 = "neura.data_mov"(%1) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> (ALAP level: 11)
[MapToAcceleratorPass] ALAP sorted op: %33 = "neura.data_mov"(%2) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> (ALAP level: 11)
[MapToAcceleratorPass] ALAP sorted op: %35 = "neura.data_mov"(%4) : (!neura.data<i32, i1>) -> !neura.data<i32, i1> (ALAP level: 11)
[MapToAcceleratorPass] ALAP sorted op: %37 = "neura.data_mov"(%4) : (!neura.data<i32, i1>) -> !neura.data<i32, i1> (ALAP level: 11)
[MapToAcceleratorPass] ALAP sorted op: %30 = "neura.data_mov"(%6) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> (ALAP level: 11)
[MapToAcceleratorPass] ALAP sorted op: %32 = "neura.data_mov"(%10) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> (ALAP level: 11)
[MapToAcceleratorPass] ALAP sorted op: %34 = "neura.data_mov"(%14) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> (ALAP level: 11)
[MapToAcceleratorPass] ALAP sorted op: %38 = "neura.data_mov"(%18) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> (ALAP level: 11)
[MapToAcceleratorPass] ALAP sorted op: %36 = "neura.data_mov"(%22) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> (ALAP level: 11)
[MapToAcceleratorPass] ALAP sorted op: %105 = "neura.data_mov"(%72) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> (ALAP level: 11)
[MapToAcceleratorPass] ALAP sorted op: %129 = "neura.data_mov"(%66) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> (ALAP level: 11)
[MapToAcceleratorPass] ALAP sorted op: %127 = "neura.add"(%126) {rhs_const_value = 1 : i32} : (!neura.data<i32, i1>) -> !neura.data<i32, i1> (ALAP level: 11)
[MapToAcceleratorPass] ALAP sorted op: %128 = "neura.data_mov"(%127) : (!neura.data<i32, i1>) -> !neura.data<i32, i1> (ALAP level: 11)
[MapToAcceleratorPass] ALAP sorted op: %123 = "neura.data_mov"(%116) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1> (ALAP level: 11)
[MapToAcceleratorPass] ALAP sorted op: %121 = "neura.fadd"(%119, %120) : (!neura.data<f32, i1>, !neura.data<f32, i1>) -> !neura.data<f32, i1> (ALAP level: 11)
[MapToAcceleratorPass] ALAP sorted op: %103 = "neura.fmul"(%101, %102) : (!neura.data<f32, i1>, !neura.data<f32, i1>) -> !neura.data<f32, i1> (ALAP level: 11)
[MapToAcceleratorPass] ALAP sorted op: %122 = "neura.data_mov"(%121) : (!neura.data<f32, i1>) -> !neura.data<f32, i1> (ALAP level: 11)
[MapToAcceleratorPass] ALAP sorted op: %104 = "neura.data_mov"(%103) : (!neura.data<f32, i1>) -> !neura.data<f32, i1> (ALAP level: 11)
[MapToAcceleratorPass] ALAP sorted op: "neura.return"() : () -> () (ALAP level: 12)
[MapToAcceleratorPass] ALAP sorted op: "neura.store"(%29, %30) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> () (ALAP level: 12)
[MapToAcceleratorPass] ALAP sorted op: "neura.store"(%31, %32) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> () (ALAP level: 12)
[MapToAcceleratorPass] ALAP sorted op: "neura.store"(%33, %34) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> () (ALAP level: 12)
[MapToAcceleratorPass] ALAP sorted op: "neura.store"(%37, %38) : (!neura.data<i32, i1>, !neura.data<!llvm.ptr, i1>) -> () (ALAP level: 12)
[MapToAcceleratorPass] ALAP sorted op: "neura.store"(%35, %36) : (!neura.data<i32, i1>, !neura.data<!llvm.ptr, i1>) -> () (ALAP level: 12)
[MapToAcceleratorPass] ALAP sorted op: "neura.store"(%128, %129) : (!neura.data<i32, i1>, !neura.data<!llvm.ptr, i1>) -> () (ALAP level: 12)
[MapToAcceleratorPass] ALAP sorted op: "neura.store"(%122, %123) : (!neura.data<f32, i1>, !neura.data<!llvm.ptr, i1>) -> () (ALAP level: 12)
[MapToAcceleratorPass] ALAP sorted op: "neura.store"(%104, %105) : (!neura.data<f32, i1>, !neura.data<!llvm.ptr, i1>) -> () (ALAP level: 12)
---------------------------------------------------------
[HeuristicMapping] Starting mapping with 145 operations.
Configuration: MAX Backtrack Depth = 1, MAX Candidate Locations = 1
[HeuristicMapping] Filtered 85 non-materialized operations, 60 operations require physical mapping.
[HeuristicMapping] Found 256 candidate locations for operation: %3 = "neura.constant"() <{value = 1 : i32}> : () -> !neura.data<i32, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#14 @t=0
[HeuristicMapping] Successfully mapped operation %3 = "neura.constant"() <{value = 1 : i32}> : () -> !neura.data<i32, i1>
[HeuristicMapping] Found 56 candidate locations for operation: %18 = neura.alloca %17 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#15 @t=1
[tryRouteDataMove] Routing from Tile#14 @t=0 to Tile#15 @t=1
[HeuristicMapping] Successfully mapped operation %18 = neura.alloca %17 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 42 candidate locations for operation: %20 = "neura.grant_once"(%19) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#23 @t=2
[tryRouteDataMove] Routing from Tile#15 @t=1 to Tile#23 @t=2
[HeuristicMapping] Successfully mapped operation %20 = "neura.grant_once"(%19) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 111 candidate locations for operation: %22 = neura.alloca %21 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#21 @t=3
[tryRouteDataMove] Routing from Tile#14 @t=0 to Tile#21 @t=3
[HeuristicMapping] Successfully mapped operation %22 = neura.alloca %21 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 47 candidate locations for operation: %56 = "neura.phi"(%54, %55) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#23 @t=3
[tryRouteDataMove] Routing from Tile#23 @t=2 to Tile#23 @t=3
[tryRouteDataMove] Successfully routed on same tile using Register #736
[HeuristicMapping] Successfully mapped operation %56 = "neura.phi"(%54, %55) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 134 candidate locations for operation: %6 = neura.alloca %5 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#19 @t=4
[tryRouteDataMove] Routing from Tile#14 @t=0 to Tile#19 @t=4
[HeuristicMapping] Successfully mapped operation %6 = neura.alloca %5 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 79 candidate locations for operation: %10 = neura.alloca %9 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#6 @t=4
[tryRouteDataMove] Routing from Tile#14 @t=0 to Tile#6 @t=4
[HeuristicMapping] Successfully mapped operation %10 = neura.alloca %9 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 3 candidate locations for operation: %14 = neura.alloca %13 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#14 @t=5
[tryRouteDataMove] Routing from Tile#14 @t=0 to Tile#14 @t=5
[tryRouteDataMove] Successfully routed on same tile using Register #448
[HeuristicMapping] Successfully mapped operation %14 = neura.alloca %13 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 70 candidate locations for operation: %24 = "neura.grant_once"(%23) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#13 @t=4
[tryRouteDataMove] Routing from Tile#21 @t=3 to Tile#13 @t=4
[HeuristicMapping] Successfully mapped operation %24 = "neura.grant_once"(%23) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 45 candidate locations for operation: %58 = "neura.load"(%57) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<i32, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#23 @t=4
[tryRouteDataMove] Routing from Tile#23 @t=3 to Tile#23 @t=4
[tryRouteDataMove] Successfully routed on same tile using Register #736
[HeuristicMapping] Successfully mapped operation %58 = "neura.load"(%57) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<i32, i1>
[HeuristicMapping] Found 73 candidate locations for operation: %8 = "neura.grant_once"(%7) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#11 @t=5
[tryRouteDataMove] Routing from Tile#19 @t=4 to Tile#11 @t=5
[HeuristicMapping] Successfully mapped operation %8 = "neura.grant_once"(%7) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 37 candidate locations for operation: %12 = "neura.grant_once"(%11) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#5 @t=5
[tryRouteDataMove] Routing from Tile#6 @t=4 to Tile#5 @t=5
[HeuristicMapping] Successfully mapped operation %12 = "neura.grant_once"(%11) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 47 candidate locations for operation: %16 = "neura.grant_once"(%15) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#15 @t=6
[tryRouteDataMove] Routing from Tile#14 @t=5 to Tile#15 @t=6
[HeuristicMapping] Successfully mapped operation %16 = "neura.grant_once"(%15) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 54 candidate locations for operation: %41 = "neura.phi"(%39, %40) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#13 @t=5
[tryRouteDataMove] Routing from Tile#13 @t=4 to Tile#13 @t=5
[tryRouteDataMove] Successfully routed on same tile using Register #416
[HeuristicMapping] Successfully mapped operation %41 = "neura.phi"(%39, %40) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 37 candidate locations for operation: %60 = "neura.icmp"(%59) <{cmpType = "slt"}> {rhs_const_value = 32 : i32} : (!neura.data<i32, i1>) -> !neura.data<i1, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#23 @t=5
[tryRouteDataMove] Routing from Tile#23 @t=4 to Tile#23 @t=5
[tryRouteDataMove] Successfully routed on same tile using Register #736
[HeuristicMapping] Successfully mapped operation %60 = "neura.icmp"(%59) <{cmpType = "slt"}> {rhs_const_value = 32 : i32} : (!neura.data<i32, i1>) -> !neura.data<i1, i1>
[HeuristicMapping] Found 2 candidate locations for operation: %26 = neura.alloca %25 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#14 @t=6
[tryRouteDataMove] Routing from Tile#14 @t=0 to Tile#14 @t=6
[tryRouteDataMove] Successfully routed on same tile using Register #449
[HeuristicMapping] Successfully mapped operation %26 = neura.alloca %25 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 61 candidate locations for operation: %53 = "neura.phi"(%51, %52) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#11 @t=6
[tryRouteDataMove] Routing from Tile#11 @t=5 to Tile#11 @t=6
[tryRouteDataMove] Successfully routed on same tile using Register #352
[HeuristicMapping] Successfully mapped operation %53 = "neura.phi"(%51, %52) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 40 candidate locations for operation: %44 = "neura.phi"(%42, %43) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#13 @t=6
[tryRouteDataMove] Routing from Tile#5 @t=5 to Tile#13 @t=6
[HeuristicMapping] Successfully mapped operation %44 = "neura.phi"(%42, %43) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 29 candidate locations for operation: %50 = "neura.phi"(%48, %49) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#15 @t=7
[tryRouteDataMove] Routing from Tile#15 @t=6 to Tile#15 @t=7
[tryRouteDataMove] Successfully routed on same tile using Register #480
[HeuristicMapping] Successfully mapped operation %50 = "neura.phi"(%48, %49) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 3 candidate locations for operation: %78 = neura.grant_predicate %76, %77 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#14 @t=7
[tryRouteDataMove] Routing from Tile#13 @t=5 to Tile#14 @t=7
[tryRouteDataMove] Routing from Tile#23 @t=5 to Tile#14 @t=7
[tryRouteDataMove] Routing from Tile#14 @t=7 to Tile#13 @t=9
[HeuristicMapping] Successfully mapped operation %78 = neura.grant_predicate %76, %77 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 1 candidate locations for operation: %66 = neura.grant_predicate %64, %65 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#31 @t=6
[tryRouteDataMove] Routing from Tile#23 @t=3 to Tile#31 @t=6
[tryRouteDataMove] Routing from Tile#23 @t=5 to Tile#31 @t=6
[tryRouteDataMove] Routing from Tile#31 @t=6 to Tile#23 @t=7
[HeuristicMapping] Successfully mapped operation %66 = neura.grant_predicate %64, %65 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 39 candidate locations for operation: %28 = "neura.grant_once"(%27) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#6 @t=7
[tryRouteDataMove] Routing from Tile#14 @t=6 to Tile#6 @t=7
[HeuristicMapping] Successfully mapped operation %28 = "neura.grant_once"(%27) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 3 candidate locations for operation: %75 = neura.grant_predicate %73, %74 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#22 @t=8
[tryRouteDataMove] Routing from Tile#13 @t=6 to Tile#22 @t=8
[tryRouteDataMove] Routing from Tile#23 @t=5 to Tile#22 @t=8
[tryRouteDataMove] Routing from Tile#22 @t=8 to Tile#13 @t=10
[HeuristicMapping] Successfully mapped operation %75 = neura.grant_predicate %73, %74 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 5 candidate locations for operation: %69 = neura.grant_predicate %67, %68 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#15 @t=8
[tryRouteDataMove] Routing from Tile#15 @t=7 to Tile#15 @t=8
[tryRouteDataMove] Successfully routed on same tile using Register #480
[tryRouteDataMove] Routing from Tile#23 @t=5 to Tile#15 @t=8
[tryRouteDataMove] Routing from Tile#15 @t=8 to Tile#15 @t=11
[tryRouteDataMove] Successfully routed on same tile using Register #482
[HeuristicMapping] Successfully mapped operation %69 = neura.grant_predicate %67, %68 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] No candidate locations found for operation: %63 = neura.grant_predicate %61, %62 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Backtracking to operation 23(depth = 1)
[HeuristicMapping] Found 5 candidate locations for operation: %69 = neura.grant_predicate %67, %68 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] All 1 locations for 23 tried, backtracking...
[HeuristicMapping] Backtracking to operation 22 (depth = 2).
[HeuristicMapping] Max backtrack depth exceeded: 2 > 1.
---------------------------------------------------------
[HeuristicMapping] Starting mapping with 145 operations.
Configuration: MAX Backtrack Depth = 1, MAX Candidate Locations = 1
[HeuristicMapping] Filtered 85 non-materialized operations, 60 operations require physical mapping.
[HeuristicMapping] Found 320 candidate locations for operation: %3 = "neura.constant"() <{value = 1 : i32}> : () -> !neura.data<i32, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#41 @t=0
[HeuristicMapping] Successfully mapped operation %3 = "neura.constant"() <{value = 1 : i32}> : () -> !neura.data<i32, i1>
[HeuristicMapping] Found 101 candidate locations for operation: %18 = neura.alloca %17 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#40 @t=1
[tryRouteDataMove] Routing from Tile#41 @t=0 to Tile#40 @t=1
[HeuristicMapping] Successfully mapped operation %18 = neura.alloca %17 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 78 candidate locations for operation: %20 = "neura.grant_once"(%19) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#41 @t=2
[tryRouteDataMove] Routing from Tile#40 @t=1 to Tile#41 @t=2
[HeuristicMapping] Successfully mapped operation %20 = "neura.grant_once"(%19) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 181 candidate locations for operation: %22 = neura.alloca %21 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#35 @t=3
[tryRouteDataMove] Routing from Tile#41 @t=0 to Tile#35 @t=3
[HeuristicMapping] Successfully mapped operation %22 = neura.alloca %21 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 99 candidate locations for operation: %56 = "neura.phi"(%54, %55) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#41 @t=3
[tryRouteDataMove] Routing from Tile#41 @t=2 to Tile#41 @t=3
[tryRouteDataMove] Successfully routed on same tile using Register #1312
[HeuristicMapping] Successfully mapped operation %56 = "neura.phi"(%54, %55) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 210 candidate locations for operation: %6 = neura.alloca %5 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#50 @t=4
[tryRouteDataMove] Routing from Tile#41 @t=0 to Tile#50 @t=4
[HeuristicMapping] Successfully mapped operation %6 = neura.alloca %5 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 186 candidate locations for operation: %10 = neura.alloca %9 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#25 @t=4
[tryRouteDataMove] Routing from Tile#41 @t=0 to Tile#25 @t=4
[HeuristicMapping] Successfully mapped operation %10 = neura.alloca %9 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 2 candidate locations for operation: %14 = neura.alloca %13 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#41 @t=4
[tryRouteDataMove] Routing from Tile#41 @t=0 to Tile#41 @t=4
[tryRouteDataMove] Successfully routed on same tile using Register #1313
[HeuristicMapping] Successfully mapped operation %14 = neura.alloca %13 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 130 candidate locations for operation: %24 = "neura.grant_once"(%23) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#34 @t=4
[tryRouteDataMove] Routing from Tile#35 @t=3 to Tile#34 @t=4
[HeuristicMapping] Successfully mapped operation %24 = "neura.grant_once"(%23) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 96 candidate locations for operation: %58 = "neura.load"(%57) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<i32, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#33 @t=4
[tryRouteDataMove] Routing from Tile#41 @t=3 to Tile#33 @t=4
[HeuristicMapping] Successfully mapped operation %58 = "neura.load"(%57) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<i32, i1>
[HeuristicMapping] Found 94 candidate locations for operation: %8 = "neura.grant_once"(%7) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#58 @t=5
[tryRouteDataMove] Routing from Tile#50 @t=4 to Tile#58 @t=5
[HeuristicMapping] Successfully mapped operation %8 = "neura.grant_once"(%7) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 101 candidate locations for operation: %12 = "neura.grant_once"(%11) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#17 @t=5
[tryRouteDataMove] Routing from Tile#25 @t=4 to Tile#17 @t=5
[HeuristicMapping] Successfully mapped operation %12 = "neura.grant_once"(%11) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 92 candidate locations for operation: %16 = "neura.grant_once"(%15) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#49 @t=5
[tryRouteDataMove] Routing from Tile#41 @t=4 to Tile#49 @t=5
[HeuristicMapping] Successfully mapped operation %16 = "neura.grant_once"(%15) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 117 candidate locations for operation: %41 = "neura.phi"(%39, %40) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#34 @t=5
[tryRouteDataMove] Routing from Tile#34 @t=4 to Tile#34 @t=5
[tryRouteDataMove] Successfully routed on same tile using Register #1088
[HeuristicMapping] Successfully mapped operation %41 = "neura.phi"(%39, %40) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 94 candidate locations for operation: %60 = "neura.icmp"(%59) <{cmpType = "slt"}> {rhs_const_value = 32 : i32} : (!neura.data<i32, i1>) -> !neura.data<i1, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#33 @t=5
[tryRouteDataMove] Routing from Tile#33 @t=4 to Tile#33 @t=5
[tryRouteDataMove] Successfully routed on same tile using Register #1056
[HeuristicMapping] Successfully mapped operation %60 = "neura.icmp"(%59) <{cmpType = "slt"}> {rhs_const_value = 32 : i32} : (!neura.data<i32, i1>) -> !neura.data<i1, i1>
[HeuristicMapping] Found 1 candidate locations for operation: %26 = neura.alloca %25 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#41 @t=6
[tryRouteDataMove] Routing from Tile#41 @t=0 to Tile#41 @t=6
[tryRouteDataMove] Successfully routed on same tile using Register #1314
[HeuristicMapping] Successfully mapped operation %26 = neura.alloca %25 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 70 candidate locations for operation: %53 = "neura.phi"(%51, %52) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#50 @t=6
[tryRouteDataMove] Routing from Tile#58 @t=5 to Tile#50 @t=6
[HeuristicMapping] Successfully mapped operation %53 = "neura.phi"(%51, %52) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 92 candidate locations for operation: %44 = "neura.phi"(%42, %43) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#17 @t=6
[tryRouteDataMove] Routing from Tile#17 @t=5 to Tile#17 @t=6
[tryRouteDataMove] Successfully routed on same tile using Register #544
[HeuristicMapping] Successfully mapped operation %44 = "neura.phi"(%42, %43) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 74 candidate locations for operation: %50 = "neura.phi"(%48, %49) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#49 @t=6
[tryRouteDataMove] Routing from Tile#49 @t=5 to Tile#49 @t=6
[tryRouteDataMove] Successfully routed on same tile using Register #1568
[HeuristicMapping] Successfully mapped operation %50 = "neura.phi"(%48, %49) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 23 candidate locations for operation: %78 = neura.grant_predicate %76, %77 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#34 @t=6
[tryRouteDataMove] Routing from Tile#34 @t=5 to Tile#34 @t=6
[tryRouteDataMove] Successfully routed on same tile using Register #1088
[tryRouteDataMove] Routing from Tile#33 @t=5 to Tile#34 @t=6
[tryRouteDataMove] Routing from Tile#34 @t=6 to Tile#34 @t=10
[tryRouteDataMove] Successfully routed on same tile using Register #1089
[HeuristicMapping] Successfully mapped operation %78 = neura.grant_predicate %76, %77 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 6 candidate locations for operation: %66 = neura.grant_predicate %64, %65 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#33 @t=6
[tryRouteDataMove] Routing from Tile#41 @t=3 to Tile#33 @t=6
[tryRouteDataMove] Routing from Tile#33 @t=5 to Tile#33 @t=6
[tryRouteDataMove] Successfully routed on same tile using Register #1057
[tryRouteDataMove] Routing from Tile#33 @t=6 to Tile#41 @t=8
[HeuristicMapping] Successfully mapped operation %66 = neura.grant_predicate %64, %65 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 82 candidate locations for operation: %28 = "neura.grant_once"(%27) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#49 @t=7
[tryRouteDataMove] Routing from Tile#41 @t=6 to Tile#49 @t=7
[HeuristicMapping] Successfully mapped operation %28 = "neura.grant_once"(%27) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 23 candidate locations for operation: %75 = neura.grant_predicate %73, %74 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#25 @t=7
[tryRouteDataMove] Routing from Tile#17 @t=6 to Tile#25 @t=7
[tryRouteDataMove] Routing from Tile#33 @t=5 to Tile#25 @t=7
[tryRouteDataMove] Routing from Tile#25 @t=7 to Tile#17 @t=11
[HeuristicMapping] Successfully mapped operation %75 = neura.grant_predicate %73, %74 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 12 candidate locations for operation: %69 = neura.grant_predicate %67, %68 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#49 @t=9
[tryRouteDataMove] Routing from Tile#49 @t=6 to Tile#49 @t=9
[tryRouteDataMove] Successfully routed on same tile using Register #1568
[tryRouteDataMove] Routing from Tile#33 @t=5 to Tile#49 @t=9
[tryRouteDataMove] Routing from Tile#49 @t=9 to Tile#49 @t=11
[tryRouteDataMove] Successfully routed on same tile using Register #1569
[HeuristicMapping] Successfully mapped operation %69 = neura.grant_predicate %67, %68 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 5 candidate locations for operation: %63 = neura.grant_predicate %61, %62 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#42 @t=9
[tryRouteDataMove] Routing from Tile#50 @t=6 to Tile#42 @t=9
[tryRouteDataMove] Routing from Tile#33 @t=5 to Tile#42 @t=9
[tryRouteDataMove] Routing from Tile#42 @t=9 to Tile#50 @t=11
[HeuristicMapping] Successfully mapped operation %63 = neura.grant_predicate %61, %62 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 103 candidate locations for operation: %111 = "neura.load"(%110) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<i32, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#42 @t=7
[tryRouteDataMove] Routing from Tile#34 @t=6 to Tile#42 @t=7
[HeuristicMapping] Successfully mapped operation %111 = "neura.load"(%110) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<i32, i1>
[HeuristicMapping] Found 36 candidate locations for operation: %93 = "neura.load"(%92) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<i32, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#32 @t=7
[tryRouteDataMove] Routing from Tile#33 @t=6 to Tile#32 @t=7
[HeuristicMapping] Successfully mapped operation %93 = "neura.load"(%92) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<i32, i1>
[HeuristicMapping] Found 2 candidate locations for operation: %82 = "neura.load"(%81) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<i32, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#33 @t=7
[tryRouteDataMove] Routing from Tile#33 @t=6 to Tile#33 @t=7
[tryRouteDataMove] Successfully routed on same tile using Register #1056
[HeuristicMapping] Successfully mapped operation %82 = "neura.load"(%81) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<i32, i1>
[HeuristicMapping] Found 61 candidate locations for operation: %47 = "neura.phi"(%45, %46) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#49 @t=8
[tryRouteDataMove] Routing from Tile#49 @t=7 to Tile#49 @t=8
[tryRouteDataMove] Successfully routed on same tile using Register #1569
[HeuristicMapping] Successfully mapped operation %47 = "neura.phi"(%45, %46) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 79 candidate locations for operation: %109 = "neura.load"(%108) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#24 @t=8
[tryRouteDataMove] Routing from Tile#25 @t=7 to Tile#24 @t=8
[HeuristicMapping] Successfully mapped operation %109 = "neura.load"(%108) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 61 candidate locations for operation: %91 = "neura.load"(%90) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#57 @t=10
[tryRouteDataMove] Routing from Tile#49 @t=9 to Tile#57 @t=10
[HeuristicMapping] Successfully mapped operation %91 = "neura.load"(%90) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 77 candidate locations for operation: %80 = "neura.load"(%79) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#42 @t=10
[tryRouteDataMove] Routing from Tile#42 @t=9 to Tile#42 @t=10
[tryRouteDataMove] Successfully routed on same tile using Register #1344
[HeuristicMapping] Successfully mapped operation %80 = "neura.load"(%79) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 90 candidate locations for operation: %113 = neura.sext %112 : !neura.data<i32, i1> -> !neura.data<i64, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#50 @t=8
[tryRouteDataMove] Routing from Tile#42 @t=7 to Tile#50 @t=8
[HeuristicMapping] Successfully mapped operation %113 = neura.sext %112 : !neura.data<i32, i1> -> !neura.data<i64, i1>
[HeuristicMapping] Found 61 candidate locations for operation: %95 = neura.sext %94 : !neura.data<i32, i1> -> !neura.data<i64, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#40 @t=8
[tryRouteDataMove] Routing from Tile#32 @t=7 to Tile#40 @t=8
[HeuristicMapping] Successfully mapped operation %95 = neura.sext %94 : !neura.data<i32, i1> -> !neura.data<i64, i1>
[HeuristicMapping] Found 81 candidate locations for operation: %84 = neura.sext %83 : !neura.data<i32, i1> -> !neura.data<i64, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#33 @t=8
[tryRouteDataMove] Routing from Tile#33 @t=7 to Tile#33 @t=8
[tryRouteDataMove] Successfully routed on same tile using Register #1056
[HeuristicMapping] Successfully mapped operation %84 = neura.sext %83 : !neura.data<i32, i1> -> !neura.data<i64, i1>
[HeuristicMapping] Found 14 candidate locations for operation: %72 = neura.grant_predicate %70, %71 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#48 @t=9
[tryRouteDataMove] Routing from Tile#49 @t=8 to Tile#48 @t=9
[tryRouteDataMove] Routing from Tile#33 @t=5 to Tile#48 @t=9
[tryRouteDataMove] Routing from Tile#48 @t=9 to Tile#49 @t=13
[HeuristicMapping] Successfully mapped operation %72 = neura.grant_predicate %70, %71 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 26 candidate locations for operation: %116 = "neura.gep"(%114, %115) : (!neura.data<!llvm.ptr, i1>, !neura.data<i64, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#26 @t=11
[tryRouteDataMove] Routing from Tile#24 @t=8 to Tile#26 @t=11
[tryRouteDataMove] Routing from Tile#50 @t=8 to Tile#26 @t=11
[HeuristicMapping] Successfully mapped operation %116 = "neura.gep"(%114, %115) : (!neura.data<!llvm.ptr, i1>, !neura.data<i64, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 41 candidate locations for operation: %98 = "neura.gep"(%96, %97) : (!neura.data<!llvm.ptr, i1>, !neura.data<i64, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#57 @t=11
[tryRouteDataMove] Routing from Tile#57 @t=10 to Tile#57 @t=11
[tryRouteDataMove] Successfully routed on same tile using Register #1824
[tryRouteDataMove] Routing from Tile#40 @t=8 to Tile#57 @t=11
[HeuristicMapping] Successfully mapped operation %98 = "neura.gep"(%96, %97) : (!neura.data<!llvm.ptr, i1>, !neura.data<i64, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 88 candidate locations for operation: %87 = "neura.gep"(%85, %86) : (!neura.data<!llvm.ptr, i1>, !neura.data<i64, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#43 @t=11
[tryRouteDataMove] Routing from Tile#42 @t=10 to Tile#43 @t=11
[tryRouteDataMove] Routing from Tile#33 @t=8 to Tile#43 @t=11
[HeuristicMapping] Successfully mapped operation %87 = "neura.gep"(%85, %86) : (!neura.data<!llvm.ptr, i1>, !neura.data<i64, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 25 candidate locations for operation: %107 = "neura.load"(%106) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<f32, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#40 @t=10
[tryRouteDataMove] Routing from Tile#48 @t=9 to Tile#40 @t=10
[HeuristicMapping] Successfully mapped operation %107 = "neura.load"(%106) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<f32, i1>
[HeuristicMapping] No candidate locations found for operation: %125 = "neura.load"(%124) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<i32, i1>
[HeuristicMapping] Backtracking to operation 39(depth = 1)
[HeuristicMapping] Found 25 candidate locations for operation: %107 = "neura.load"(%106) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<f32, i1>
[HeuristicMapping] All 1 locations for 39 tried, backtracking...
[HeuristicMapping] Backtracking to operation 38 (depth = 2).
[HeuristicMapping] Max backtrack depth exceeded: 2 > 1.
---------------------------------------------------------
[HeuristicMapping] Starting mapping with 145 operations.
Configuration: MAX Backtrack Depth = 1, MAX Candidate Locations = 1
[HeuristicMapping] Filtered 85 non-materialized operations, 60 operations require physical mapping.
[HeuristicMapping] Found 384 candidate locations for operation: %3 = "neura.constant"() <{value = 1 : i32}> : () -> !neura.data<i32, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#40 @t=0
[HeuristicMapping] Successfully mapped operation %3 = "neura.constant"() <{value = 1 : i32}> : () -> !neura.data<i32, i1>
[HeuristicMapping] Found 117 candidate locations for operation: %18 = neura.alloca %17 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#41 @t=1
[tryRouteDataMove] Routing from Tile#40 @t=0 to Tile#41 @t=1
[HeuristicMapping] Successfully mapped operation %18 = neura.alloca %17 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 146 candidate locations for operation: %20 = "neura.grant_once"(%19) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#42 @t=2
[tryRouteDataMove] Routing from Tile#41 @t=1 to Tile#42 @t=2
[HeuristicMapping] Successfully mapped operation %20 = "neura.grant_once"(%19) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 190 candidate locations for operation: %22 = neura.alloca %21 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#41 @t=3
[tryRouteDataMove] Routing from Tile#40 @t=0 to Tile#41 @t=3
[HeuristicMapping] Successfully mapped operation %22 = neura.alloca %21 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 165 candidate locations for operation: %56 = "neura.phi"(%54, %55) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#42 @t=3
[tryRouteDataMove] Routing from Tile#42 @t=2 to Tile#42 @t=3
[tryRouteDataMove] Successfully routed on same tile using Register #1344
[HeuristicMapping] Successfully mapped operation %56 = "neura.phi"(%54, %55) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 233 candidate locations for operation: %6 = neura.alloca %5 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#16 @t=4
[tryRouteDataMove] Routing from Tile#40 @t=0 to Tile#16 @t=4
[HeuristicMapping] Successfully mapped operation %6 = neura.alloca %5 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 169 candidate locations for operation: %10 = neura.alloca %9 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#33 @t=4
[tryRouteDataMove] Routing from Tile#40 @t=0 to Tile#33 @t=4
[HeuristicMapping] Successfully mapped operation %10 = neura.alloca %9 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 168 candidate locations for operation: %14 = neura.alloca %13 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#48 @t=4
[tryRouteDataMove] Routing from Tile#40 @t=0 to Tile#48 @t=4
[HeuristicMapping] Successfully mapped operation %14 = neura.alloca %13 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 142 candidate locations for operation: %24 = "neura.grant_once"(%23) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#42 @t=4
[tryRouteDataMove] Routing from Tile#41 @t=3 to Tile#42 @t=4
[HeuristicMapping] Successfully mapped operation %24 = "neura.grant_once"(%23) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 163 candidate locations for operation: %58 = "neura.load"(%57) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<i32, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#34 @t=4
[tryRouteDataMove] Routing from Tile#42 @t=3 to Tile#34 @t=4
[HeuristicMapping] Successfully mapped operation %58 = "neura.load"(%57) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<i32, i1>
[HeuristicMapping] Found 111 candidate locations for operation: %8 = "neura.grant_once"(%7) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#16 @t=5
[tryRouteDataMove] Routing from Tile#16 @t=4 to Tile#16 @t=5
[tryRouteDataMove] Successfully routed on same tile using Register #512
[HeuristicMapping] Successfully mapped operation %8 = "neura.grant_once"(%7) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 147 candidate locations for operation: %12 = "neura.grant_once"(%11) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#34 @t=5
[tryRouteDataMove] Routing from Tile#33 @t=4 to Tile#34 @t=5
[HeuristicMapping] Successfully mapped operation %12 = "neura.grant_once"(%11) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 94 candidate locations for operation: %16 = "neura.grant_once"(%15) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#49 @t=5
[tryRouteDataMove] Routing from Tile#48 @t=4 to Tile#49 @t=5
[HeuristicMapping] Successfully mapped operation %16 = "neura.grant_once"(%15) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 158 candidate locations for operation: %41 = "neura.phi"(%39, %40) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#42 @t=5
[tryRouteDataMove] Routing from Tile#42 @t=4 to Tile#42 @t=5
[tryRouteDataMove] Successfully routed on same tile using Register #1344
[HeuristicMapping] Successfully mapped operation %41 = "neura.phi"(%39, %40) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 169 candidate locations for operation: %60 = "neura.icmp"(%59) <{cmpType = "slt"}> {rhs_const_value = 32 : i32} : (!neura.data<i32, i1>) -> !neura.data<i1, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#26 @t=5
[tryRouteDataMove] Routing from Tile#34 @t=4 to Tile#26 @t=5
[HeuristicMapping] Successfully mapped operation %60 = "neura.icmp"(%59) <{cmpType = "slt"}> {rhs_const_value = 32 : i32} : (!neura.data<i32, i1>) -> !neura.data<i1, i1>
[HeuristicMapping] Found 5 candidate locations for operation: %26 = neura.alloca %25 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#40 @t=7
[tryRouteDataMove] Routing from Tile#40 @t=0 to Tile#40 @t=7
[tryRouteDataMove] Successfully routed on same tile using Register #1282
[HeuristicMapping] Successfully mapped operation %26 = neura.alloca %25 : !neura.data<i32, i1> -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 107 candidate locations for operation: %53 = "neura.phi"(%51, %52) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#16 @t=6
[tryRouteDataMove] Routing from Tile#16 @t=5 to Tile#16 @t=6
[tryRouteDataMove] Successfully routed on same tile using Register #512
[HeuristicMapping] Successfully mapped operation %53 = "neura.phi"(%51, %52) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 166 candidate locations for operation: %44 = "neura.phi"(%42, %43) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#34 @t=6
[tryRouteDataMove] Routing from Tile#34 @t=5 to Tile#34 @t=6
[tryRouteDataMove] Successfully routed on same tile using Register #1088
[HeuristicMapping] Successfully mapped operation %44 = "neura.phi"(%42, %43) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 115 candidate locations for operation: %50 = "neura.phi"(%48, %49) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#49 @t=6
[tryRouteDataMove] Routing from Tile#49 @t=5 to Tile#49 @t=6
[tryRouteDataMove] Successfully routed on same tile using Register #1568
[HeuristicMapping] Successfully mapped operation %50 = "neura.phi"(%48, %49) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 31 candidate locations for operation: %78 = neura.grant_predicate %76, %77 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#34 @t=7
[tryRouteDataMove] Routing from Tile#42 @t=5 to Tile#34 @t=7
[tryRouteDataMove] Routing from Tile#26 @t=5 to Tile#34 @t=7
[tryRouteDataMove] Routing from Tile#34 @t=7 to Tile#42 @t=11
[HeuristicMapping] Successfully mapped operation %78 = neura.grant_predicate %76, %77 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 8 candidate locations for operation: %66 = neura.grant_predicate %64, %65 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#26 @t=7
[tryRouteDataMove] Routing from Tile#42 @t=3 to Tile#26 @t=7
[tryRouteDataMove] Routing from Tile#26 @t=5 to Tile#26 @t=7
[tryRouteDataMove] Successfully routed on same tile using Register #833
[tryRouteDataMove] Routing from Tile#26 @t=7 to Tile#42 @t=9
[HeuristicMapping] Successfully mapped operation %66 = neura.grant_predicate %64, %65 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 55 candidate locations for operation: %28 = "neura.grant_once"(%27) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#48 @t=8
[tryRouteDataMove] Routing from Tile#40 @t=7 to Tile#48 @t=8
[HeuristicMapping] Successfully mapped operation %28 = "neura.grant_once"(%27) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 41 candidate locations for operation: %75 = neura.grant_predicate %73, %74 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#34 @t=8
[tryRouteDataMove] Routing from Tile#34 @t=6 to Tile#34 @t=8
[tryRouteDataMove] Successfully routed on same tile using Register #1090
[tryRouteDataMove] Routing from Tile#26 @t=5 to Tile#34 @t=8
[tryRouteDataMove] Routing from Tile#34 @t=8 to Tile#34 @t=12
[tryRouteDataMove] Successfully routed on same tile using Register #1089
[HeuristicMapping] Successfully mapped operation %75 = neura.grant_predicate %73, %74 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 20 candidate locations for operation: %69 = neura.grant_predicate %67, %68 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#33 @t=8
[tryRouteDataMove] Routing from Tile#49 @t=6 to Tile#33 @t=8
[tryRouteDataMove] Routing from Tile#26 @t=5 to Tile#33 @t=8
[tryRouteDataMove] Routing from Tile#33 @t=8 to Tile#49 @t=12
[HeuristicMapping] Successfully mapped operation %69 = neura.grant_predicate %67, %68 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 29 candidate locations for operation: %63 = neura.grant_predicate %61, %62 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#17 @t=7
[tryRouteDataMove] Routing from Tile#16 @t=6 to Tile#17 @t=7
[tryRouteDataMove] Routing from Tile#26 @t=5 to Tile#17 @t=7
[tryRouteDataMove] Routing from Tile#17 @t=7 to Tile#16 @t=12
[HeuristicMapping] Successfully mapped operation %63 = neura.grant_predicate %61, %62 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 150 candidate locations for operation: %111 = "neura.load"(%110) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<i32, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#35 @t=8
[tryRouteDataMove] Routing from Tile#34 @t=7 to Tile#35 @t=8
[HeuristicMapping] Successfully mapped operation %111 = "neura.load"(%110) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<i32, i1>
[HeuristicMapping] Found 155 candidate locations for operation: %93 = "neura.load"(%92) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<i32, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#27 @t=8
[tryRouteDataMove] Routing from Tile#26 @t=7 to Tile#27 @t=8
[HeuristicMapping] Successfully mapped operation %93 = "neura.load"(%92) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<i32, i1>
[HeuristicMapping] Found 121 candidate locations for operation: %82 = "neura.load"(%81) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<i32, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#18 @t=8
[tryRouteDataMove] Routing from Tile#26 @t=7 to Tile#18 @t=8
[HeuristicMapping] Successfully mapped operation %82 = "neura.load"(%81) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<i32, i1>
[HeuristicMapping] Found 85 candidate locations for operation: %47 = "neura.phi"(%45, %46) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#49 @t=9
[tryRouteDataMove] Routing from Tile#48 @t=8 to Tile#49 @t=9
[HeuristicMapping] Successfully mapped operation %47 = "neura.phi"(%45, %46) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 152 candidate locations for operation: %109 = "neura.load"(%108) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#26 @t=9
[tryRouteDataMove] Routing from Tile#34 @t=8 to Tile#26 @t=9
[HeuristicMapping] Successfully mapped operation %109 = "neura.load"(%108) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 128 candidate locations for operation: %91 = "neura.load"(%90) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#34 @t=9
[tryRouteDataMove] Routing from Tile#33 @t=8 to Tile#34 @t=9
[HeuristicMapping] Successfully mapped operation %91 = "neura.load"(%90) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 127 candidate locations for operation: %80 = "neura.load"(%79) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#9 @t=8
[tryRouteDataMove] Routing from Tile#17 @t=7 to Tile#9 @t=8
[HeuristicMapping] Successfully mapped operation %80 = "neura.load"(%79) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 169 candidate locations for operation: %113 = neura.sext %112 : !neura.data<i32, i1> -> !neura.data<i64, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#27 @t=9
[tryRouteDataMove] Routing from Tile#35 @t=8 to Tile#27 @t=9
[HeuristicMapping] Successfully mapped operation %113 = neura.sext %112 : !neura.data<i32, i1> -> !neura.data<i64, i1>
[HeuristicMapping] Found 171 candidate locations for operation: %95 = neura.sext %94 : !neura.data<i32, i1> -> !neura.data<i64, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#35 @t=9
[tryRouteDataMove] Routing from Tile#27 @t=8 to Tile#35 @t=9
[HeuristicMapping] Successfully mapped operation %95 = neura.sext %94 : !neura.data<i32, i1> -> !neura.data<i64, i1>
[HeuristicMapping] Found 147 candidate locations for operation: %84 = neura.sext %83 : !neura.data<i32, i1> -> !neura.data<i64, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#18 @t=9
[tryRouteDataMove] Routing from Tile#18 @t=8 to Tile#18 @t=9
[tryRouteDataMove] Successfully routed on same tile using Register #576
[HeuristicMapping] Successfully mapped operation %84 = neura.sext %83 : !neura.data<i32, i1> -> !neura.data<i64, i1>
[HeuristicMapping] Found 33 candidate locations for operation: %72 = neura.grant_predicate %70, %71 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#50 @t=10
[tryRouteDataMove] Routing from Tile#49 @t=9 to Tile#50 @t=10
[tryRouteDataMove] Routing from Tile#26 @t=5 to Tile#50 @t=10
[tryRouteDataMove] Routing from Tile#50 @t=10 to Tile#49 @t=15
[HeuristicMapping] Successfully mapped operation %72 = neura.grant_predicate %70, %71 : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 135 candidate locations for operation: %116 = "neura.gep"(%114, %115) : (!neura.data<!llvm.ptr, i1>, !neura.data<i64, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#27 @t=10
[tryRouteDataMove] Routing from Tile#26 @t=9 to Tile#27 @t=10
[tryRouteDataMove] Routing from Tile#27 @t=9 to Tile#27 @t=10
[tryRouteDataMove] Successfully routed on same tile using Register #864
[HeuristicMapping] Successfully mapped operation %116 = "neura.gep"(%114, %115) : (!neura.data<!llvm.ptr, i1>, !neura.data<i64, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 131 candidate locations for operation: %98 = "neura.gep"(%96, %97) : (!neura.data<!llvm.ptr, i1>, !neura.data<i64, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#35 @t=10
[tryRouteDataMove] Routing from Tile#34 @t=9 to Tile#35 @t=10
[tryRouteDataMove] Routing from Tile#35 @t=9 to Tile#35 @t=10
[tryRouteDataMove] Successfully routed on same tile using Register #1120
[HeuristicMapping] Successfully mapped operation %98 = "neura.gep"(%96, %97) : (!neura.data<!llvm.ptr, i1>, !neura.data<i64, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 121 candidate locations for operation: %87 = "neura.gep"(%85, %86) : (!neura.data<!llvm.ptr, i1>, !neura.data<i64, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#17 @t=10
[tryRouteDataMove] Routing from Tile#9 @t=8 to Tile#17 @t=10
[tryRouteDataMove] Routing from Tile#18 @t=9 to Tile#17 @t=10
[HeuristicMapping] Successfully mapped operation %87 = "neura.gep"(%85, %86) : (!neura.data<!llvm.ptr, i1>, !neura.data<i64, i1>) -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 110 candidate locations for operation: %107 = "neura.load"(%106) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<f32, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#58 @t=11
[tryRouteDataMove] Routing from Tile#50 @t=10 to Tile#58 @t=11
[HeuristicMapping] Successfully mapped operation %107 = "neura.load"(%106) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<f32, i1>
[HeuristicMapping] Found 163 candidate locations for operation: %125 = "neura.load"(%124) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<i32, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#32 @t=10
[tryRouteDataMove] Routing from Tile#26 @t=7 to Tile#32 @t=10
[HeuristicMapping] Successfully mapped operation %125 = "neura.load"(%124) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<i32, i1>
[HeuristicMapping] Found 155 candidate locations for operation: %118 = "neura.load"(%117) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<f32, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#35 @t=11
[tryRouteDataMove] Routing from Tile#27 @t=10 to Tile#35 @t=11
[HeuristicMapping] Successfully mapped operation %118 = "neura.load"(%117) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<f32, i1>
[HeuristicMapping] Found 162 candidate locations for operation: %100 = "neura.load"(%99) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<f32, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#43 @t=11
[tryRouteDataMove] Routing from Tile#35 @t=10 to Tile#43 @t=11
[HeuristicMapping] Successfully mapped operation %100 = "neura.load"(%99) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<f32, i1>
[HeuristicMapping] Found 117 candidate locations for operation: %89 = "neura.load"(%88) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<f32, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#18 @t=11
[tryRouteDataMove] Routing from Tile#17 @t=10 to Tile#18 @t=11
[HeuristicMapping] Successfully mapped operation %89 = "neura.load"(%88) : (!neura.data<!llvm.ptr, i1>) -> !neura.data<f32, i1>
[HeuristicMapping] Found 340 candidate locations for operation: %0 = "neura.constant"() <{value = "%arg0"}> : () -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#36 @t=11
[HeuristicMapping] Successfully mapped operation %0 = "neura.constant"() <{value = "%arg0"}> : () -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 339 candidate locations for operation: %1 = "neura.constant"() <{value = "%arg1"}> : () -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#8 @t=11
[HeuristicMapping] Successfully mapped operation %1 = "neura.constant"() <{value = "%arg1"}> : () -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 338 candidate locations for operation: %2 = "neura.constant"() <{value = "%arg2"}> : () -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#59 @t=11
[HeuristicMapping] Successfully mapped operation %2 = "neura.constant"() <{value = "%arg2"}> : () -> !neura.data<!llvm.ptr, i1>
[HeuristicMapping] Found 337 candidate locations for operation: %4 = "neura.constant"() <{value = 0 : i32}> : () -> !neura.data<i32, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#17 @t=11
[HeuristicMapping] Successfully mapped operation %4 = "neura.constant"() <{value = 0 : i32}> : () -> !neura.data<i32, i1>
[HeuristicMapping] Found 91 candidate locations for operation: %127 = "neura.add"(%126) {rhs_const_value = 1 : i32} : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#33 @t=11
[tryRouteDataMove] Routing from Tile#32 @t=10 to Tile#33 @t=11
[HeuristicMapping] Successfully mapped operation %127 = "neura.add"(%126) {rhs_const_value = 1 : i32} : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
[HeuristicMapping] Found 60 candidate locations for operation: %121 = "neura.fadd"(%119, %120) : (!neura.data<f32, i1>, !neura.data<f32, i1>) -> !neura.data<f32, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#42 @t=13
[tryRouteDataMove] Routing from Tile#35 @t=11 to Tile#42 @t=13
[tryRouteDataMove] Routing from Tile#58 @t=11 to Tile#42 @t=13
[HeuristicMapping] Successfully mapped operation %121 = "neura.fadd"(%119, %120) : (!neura.data<f32, i1>, !neura.data<f32, i1>) -> !neura.data<f32, i1>
[HeuristicMapping] Found 64 candidate locations for operation: %103 = "neura.fmul"(%101, %102) : (!neura.data<f32, i1>, !neura.data<f32, i1>) -> !neura.data<f32, i1>
[HeuristicMapping] Trying candidate 1/1 at tile#27 @t=13
[tryRouteDataMove] Routing from Tile#18 @t=11 to Tile#27 @t=13
[tryRouteDataMove] Routing from Tile#43 @t=11 to Tile#27 @t=13
[HeuristicMapping] Successfully mapped operation %103 = "neura.fmul"(%101, %102) : (!neura.data<f32, i1>, !neura.data<f32, i1>) -> !neura.data<f32, i1>
[HeuristicMapping] Found 333 candidate locations for operation: "neura.return"() : () -> ()
[HeuristicMapping] Trying candidate 1/1 at tile#0 @t=12
[HeuristicMapping] Successfully mapped operation "neura.return"() : () -> ()
[HeuristicMapping] Found 157 candidate locations for operation: "neura.store"(%29, %30) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> ()
[HeuristicMapping] Trying candidate 1/1 at tile#35 @t=12
[tryRouteDataMove] Routing from Tile#36 @t=11 to Tile#35 @t=12
[tryRouteDataMove] Routing from Tile#16 @t=4 to Tile#35 @t=12
[HeuristicMapping] Successfully mapped operation "neura.store"(%29, %30) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> ()
[HeuristicMapping] Found 80 candidate locations for operation: "neura.store"(%31, %32) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> ()
[HeuristicMapping] Trying candidate 1/1 at tile#8 @t=12
[tryRouteDataMove] Routing from Tile#8 @t=11 to Tile#8 @t=12
[tryRouteDataMove] Successfully routed on same tile using Register #256
[tryRouteDataMove] Routing from Tile#33 @t=4 to Tile#8 @t=12
[HeuristicMapping] Successfully mapped operation "neura.store"(%31, %32) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> ()
[HeuristicMapping] Found 96 candidate locations for operation: "neura.store"(%33, %34) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> ()
[HeuristicMapping] Trying candidate 1/1 at tile#59 @t=12
[tryRouteDataMove] Routing from Tile#59 @t=11 to Tile#59 @t=12
[tryRouteDataMove] Successfully routed on same tile using Register #1888
[tryRouteDataMove] Routing from Tile#48 @t=4 to Tile#59 @t=12
[HeuristicMapping] Successfully mapped operation "neura.store"(%33, %34) : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> ()
[HeuristicMapping] Found 99 candidate locations for operation: "neura.store"(%37, %38) : (!neura.data<i32, i1>, !neura.data<!llvm.ptr, i1>) -> ()
[HeuristicMapping] Trying candidate 1/1 at tile#17 @t=12
[tryRouteDataMove] Routing from Tile#17 @t=11 to Tile#17 @t=12
[tryRouteDataMove] Successfully routed on same tile using Register #544
[tryRouteDataMove] Routing from Tile#41 @t=1 to Tile#17 @t=12
[HeuristicMapping] Successfully mapped operation "neura.store"(%37, %38) : (!neura.data<i32, i1>, !neura.data<!llvm.ptr, i1>) -> ()
[HeuristicMapping] Found 98 candidate locations for operation: "neura.store"(%35, %36) : (!neura.data<i32, i1>, !neura.data<!llvm.ptr, i1>) -> ()
[HeuristicMapping] Trying candidate 1/1 at tile#9 @t=12
[tryRouteDataMove] Routing from Tile#17 @t=11 to Tile#9 @t=12
[tryRouteDataMove] Routing from Tile#41 @t=3 to Tile#9 @t=12
[HeuristicMapping] Successfully mapped operation "neura.store"(%35, %36) : (!neura.data<i32, i1>, !neura.data<!llvm.ptr, i1>) -> ()
[HeuristicMapping] Found 2 candidate locations for operation: "neura.store"(%128, %129) : (!neura.data<i32, i1>, !neura.data<!llvm.ptr, i1>) -> ()
[HeuristicMapping] Trying candidate 1/1 at tile#26 @t=14
[tryRouteDataMove] Routing from Tile#33 @t=11 to Tile#26 @t=14
[tryRouteDataMove] Routing from Tile#26 @t=7 to Tile#26 @t=14
[tryRouteDataMove] Successfully routed on same tile using Register #834
[HeuristicMapping] Successfully mapped operation "neura.store"(%128, %129) : (!neura.data<i32, i1>, !neura.data<!llvm.ptr, i1>) -> ()
[HeuristicMapping] Found 103 candidate locations for operation: "neura.store"(%122, %123) : (!neura.data<f32, i1>, !neura.data<!llvm.ptr, i1>) -> ()
[HeuristicMapping] Trying candidate 1/1 at tile#43 @t=14
[tryRouteDataMove] Routing from Tile#42 @t=13 to Tile#43 @t=14
[tryRouteDataMove] Routing from Tile#27 @t=10 to Tile#43 @t=14
[HeuristicMapping] Successfully mapped operation "neura.store"(%122, %123) : (!neura.data<f32, i1>, !neura.data<!llvm.ptr, i1>) -> ()
[HeuristicMapping] Found 131 candidate locations for operation: "neura.store"(%104, %105) : (!neura.data<f32, i1>, !neura.data<!llvm.ptr, i1>) -> ()
[HeuristicMapping] Trying candidate 1/1 at tile#28 @t=15
[tryRouteDataMove] Routing from Tile#27 @t=13 to Tile#28 @t=15
[tryRouteDataMove] Routing from Tile#50 @t=10 to Tile#28 @t=15
[HeuristicMapping] Successfully mapped operation "neura.store"(%104, %105) : (!neura.data<f32, i1>, !neura.data<!llvm.ptr, i1>) -> ()
[HeuristicMapping] Successfully mapped all 60 operations.
module attributes {dlti.dl_spec = #dlti.dl_spec<i32 = dense<32> : vector<2xi64>, f16 = dense<16> : vector<2xi64>, !llvm.ptr<270> = dense<32> : vector<4xi64>, f64 = dense<64> : vector<2xi64>, f128 = dense<128> : vector<2xi64>, !llvm.ptr<271> = dense<32> : vector<4xi64>, !llvm.ptr<272> = dense<64> : vector<4xi64>, i64 = dense<64> : vector<2xi64>, i128 = dense<128> : vector<2xi64>, f80 = dense<128> : vector<2xi64>, i1 = dense<8> : vector<2xi64>, !llvm.ptr = dense<64> : vector<4xi64>, i16 = dense<16> : vector<2xi64>, i8 = dense<8> : vector<2xi64>, "dlti.endianness" = "little", "dlti.stack_alignment" = 128 : i64>, llvm.ident = "clang version 20.1.7 (https://github.com/llvm/llvm-project.git 6146a88f60492b520a36f8f8f3231e15f3cc6082)"} {
  llvm.mlir.global external @input(dense<1.000000e+00> : tensor<32xf32>) {addr_space = 0 : i32, alignment = 16 : i64, dso_local} : !llvm.array<32 x f32>
  llvm.mlir.global external @output(dense<0.000000e+00> : tensor<32xf32>) {addr_space = 0 : i32, alignment = 16 : i64, dso_local} : !llvm.array<32 x f32>
  llvm.mlir.global external @coefficients(dense<[2.500000e-01, 1.500000e+00, 3.750000e+00, -2.250000e+00, 5.000000e-01, 7.500000e-01, -3.000000e+00, 1.250000e+00, 2.500000e-01, 1.500000e+00, 3.750000e+00, -2.250000e+00, 5.000000e-01, 7.500000e-01, -3.000000e+00, 1.250000e+00, 2.500000e-01, 1.500000e+00, 3.750000e+00, -2.250000e+00, 5.000000e-01, 7.500000e-01, -3.000000e+00, 1.250000e+00, 2.500000e-01, 1.500000e+00, 3.750000e+00, -2.250000e+00, 5.000000e-01, 7.500000e-01, -3.000000e+00, 1.250000e+00]> : tensor<32xf32>) {addr_space = 0 : i32, alignment = 16 : i64, dso_local} : !llvm.array<32 x f32>
  llvm.mlir.global private unnamed_addr constant @".str"("output: %f\0A\00") {addr_space = 0 : i32, alignment = 1 : i64, dso_local}
  llvm.func @main() -> (i32 {llvm.noundef}) attributes {frame_pointer = #llvm.framePointerKind<all>, no_inline, optimize_none, passthrough = ["mustprogress", "norecurse", ["uwtable", "2"], ["min-legal-vector-width", "0"], ["no-trapping-math", "true"], ["stack-protector-buffer-size", "8"], ["target-cpu", "x86-64"]], target_cpu = "x86-64", target_features = #llvm.target_features<["+cmov", "+cx8", "+fxsr", "+mmx", "+sse", "+sse2", "+x87"]>, tune_cpu = "generic"} {
    %0 = llvm.mlir.addressof @".str" : !llvm.ptr
    %1 = llvm.mlir.addressof @coefficients : !llvm.ptr
    %2 = llvm.mlir.addressof @output : !llvm.ptr
    %3 = llvm.mlir.addressof @input : !llvm.ptr
    %4 = "neura.constant"() <{value = 1 : i32}> : () -> i32
    %5 = "neura.constant"() <{value = 0 : i32}> : () -> i32
    %6 = "neura.data_mov"(%4) : (i32) -> i32
    %7 = neura.alloca %6 : i32 -> !llvm.ptr
    %8 = "neura.data_mov"(%5) : (i32) -> i32
    %9 = "neura.data_mov"(%7) : (!llvm.ptr) -> !llvm.ptr
    "neura.store"(%8, %9) : (i32, !llvm.ptr) -> ()
    %10 = func.call @_Z6kernelPfS_S_(%3, %2, %1) : (!llvm.ptr, !llvm.ptr, !llvm.ptr) -> !llvm.void
    %11 = "neura.data_mov"(%2) : (!llvm.ptr) -> !llvm.ptr
    %12 = "neura.load"(%11) : (!llvm.ptr) -> f32
    %13 = llvm.fpext %12 : f32 to f64
    %14 = llvm.call @printf(%0, %13) vararg(!llvm.func<i32 (ptr, ...)>) : (!llvm.ptr, f64) -> i32
    %15 = "neura.data_mov"(%5) : (i32) -> i32
    "neura.return"(%15) : (i32) -> ()
  }
  func.func @_Z6kernelPfS_S_(%arg0: !llvm.ptr {llvm.noundef}, %arg1: !llvm.ptr {llvm.noundef}, %arg2: !llvm.ptr {llvm.noundef}) -> !llvm.void attributes {CConv = #llvm.cconv<ccc>, accelerator = "neura", dataflow_mode = "predicate", frame_pointer = #llvm.framePointerKind<all>, linkage = #llvm.linkage<external>, mapping_info = {compiled_ii = 6 : i32, mapping_mode = "spatial-temporal", mapping_strategy = "heuristic", rec_mii = 4 : i32, res_mii = 1 : i32, x_tiles = 8 : i32, y_tiles = 8 : i32}, no_inline, no_unwind, optimize_none, passthrough = ["mustprogress", ["uwtable", "2"], ["min-legal-vector-width", "0"], ["no-trapping-math", "true"], ["stack-protector-buffer-size", "8"], ["target-cpu", "x86-64"]], target_cpu = "x86-64", target_features = #llvm.target_features<["+cmov", "+cx8", "+fxsr", "+mmx", "+sse", "+sse2", "+x87"]>, tune_cpu = "generic", unnamed_addr = 0 : i64, visibility_ = 0 : i64} {
    %0 = "neura.constant"() <{value = "%arg0"}> {mapping_locs = [{id = 36 : i32, resource = "tile", time_step = 11 : i32, x = 4 : i32, y = 4 : i32}]} : () -> !neura.data<!llvm.ptr, i1>
    %1 = "neura.constant"() <{value = "%arg1"}> {mapping_locs = [{id = 8 : i32, resource = "tile", time_step = 11 : i32, x = 0 : i32, y = 1 : i32}]} : () -> !neura.data<!llvm.ptr, i1>
    %2 = "neura.constant"() <{value = "%arg2"}> {mapping_locs = [{id = 59 : i32, resource = "tile", time_step = 11 : i32, x = 3 : i32, y = 7 : i32}]} : () -> !neura.data<!llvm.ptr, i1>
    %3 = "neura.constant"() <{value = 1 : i32}> {mapping_locs = [{id = 40 : i32, resource = "tile", time_step = 0 : i32, x = 0 : i32, y = 5 : i32}]} : () -> !neura.data<i32, i1>
    %4 = "neura.constant"() <{value = 0 : i32}> {mapping_locs = [{id = 17 : i32, resource = "tile", time_step = 11 : i32, x = 1 : i32, y = 2 : i32}]} : () -> !neura.data<i32, i1>
    %5 = "neura.data_mov"(%3) {mapping_locs = [{id = 143 : i32, resource = "link", time_step = 0 : i32}, {id = 113 : i32, resource = "link", time_step = 1 : i32}, {id = 83 : i32, resource = "link", time_step = 2 : i32}, {id = 512 : i32, resource = "register", time_step = 3 : i32}]} : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
    %6 = neura.alloca %5 : !neura.data<i32, i1> {mapping_locs = [{id = 16 : i32, resource = "tile", time_step = 4 : i32, x = 0 : i32, y = 2 : i32}]} -> !neura.data<!llvm.ptr, i1>
    %7 = "neura.data_mov"(%6) {mapping_locs = [{id = 512 : i32, resource = "register", time_step = 4 : i32}]} : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
    %8 = "neura.grant_once"(%7) {mapping_locs = [{id = 16 : i32, resource = "tile", time_step = 5 : i32, x = 0 : i32, y = 2 : i32}]} : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
    %9 = "neura.data_mov"(%3) {mapping_locs = [{id = 1281 : i32, resource = "register", time_step = 0 : i32}, {id = 143 : i32, resource = "link", time_step = 1 : i32}, {id = 112 : i32, resource = "link", time_step = 2 : i32}, {id = 1056 : i32, resource = "register", time_step = 3 : i32}]} : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
    %10 = neura.alloca %9 : !neura.data<i32, i1> {mapping_locs = [{id = 33 : i32, resource = "tile", time_step = 4 : i32, x = 1 : i32, y = 4 : i32}]} -> !neura.data<!llvm.ptr, i1>
    %11 = "neura.data_mov"(%10) {mapping_locs = [{id = 116 : i32, resource = "link", time_step = 4 : i32}]} : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
    %12 = "neura.grant_once"(%11) {mapping_locs = [{id = 34 : i32, resource = "tile", time_step = 5 : i32, x = 2 : i32, y = 4 : i32}]} : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
    %13 = "neura.data_mov"(%3) {mapping_locs = [{id = 144 : i32, resource = "link", time_step = 0 : i32}, {id = 1536 : i32, resource = "register", time_step = 1 : i32}, {id = 1536 : i32, resource = "register", time_step = 2 : i32}, {id = 1536 : i32, resource = "register", time_step = 3 : i32}]} : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
    %14 = neura.alloca %13 : !neura.data<i32, i1> {mapping_locs = [{id = 48 : i32, resource = "tile", time_step = 4 : i32, x = 0 : i32, y = 6 : i32}]} -> !neura.data<!llvm.ptr, i1>
    %15 = "neura.data_mov"(%14) {mapping_locs = [{id = 172 : i32, resource = "link", time_step = 4 : i32}]} : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
    %16 = "neura.grant_once"(%15) {mapping_locs = [{id = 49 : i32, resource = "tile", time_step = 5 : i32, x = 1 : i32, y = 6 : i32}]} : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
    %17 = "neura.data_mov"(%3) {mapping_locs = [{id = 142 : i32, resource = "link", time_step = 0 : i32}]} : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
    %18 = neura.alloca %17 : !neura.data<i32, i1> {mapping_locs = [{id = 41 : i32, resource = "tile", time_step = 1 : i32, x = 1 : i32, y = 5 : i32}]} -> !neura.data<!llvm.ptr, i1>
    %19 = "neura.data_mov"(%18) {mapping_locs = [{id = 146 : i32, resource = "link", time_step = 1 : i32}]} : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
    %20 = "neura.grant_once"(%19) {mapping_locs = [{id = 42 : i32, resource = "tile", time_step = 2 : i32, x = 2 : i32, y = 5 : i32}]} : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
    %21 = "neura.data_mov"(%3) {mapping_locs = [{id = 1280 : i32, resource = "register", time_step = 0 : i32}, {id = 142 : i32, resource = "link", time_step = 1 : i32}, {id = 1312 : i32, resource = "register", time_step = 2 : i32}]} : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
    %22 = neura.alloca %21 : !neura.data<i32, i1> {mapping_locs = [{id = 41 : i32, resource = "tile", time_step = 3 : i32, x = 1 : i32, y = 5 : i32}]} -> !neura.data<!llvm.ptr, i1>
    %23 = "neura.data_mov"(%22) {mapping_locs = [{id = 146 : i32, resource = "link", time_step = 3 : i32}]} : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
    %24 = "neura.grant_once"(%23) {mapping_locs = [{id = 42 : i32, resource = "tile", time_step = 4 : i32, x = 2 : i32, y = 5 : i32}]} : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
    %25 = "neura.data_mov"(%3) {mapping_locs = [{id = 1282 : i32, resource = "register", time_step = 0 : i32}, {id = 1282 : i32, resource = "register", time_step = 1 : i32}, {id = 1282 : i32, resource = "register", time_step = 2 : i32}, {id = 1282 : i32, resource = "register", time_step = 3 : i32}, {id = 1282 : i32, resource = "register", time_step = 4 : i32}, {id = 1282 : i32, resource = "register", time_step = 5 : i32}, {id = 1282 : i32, resource = "register", time_step = 6 : i32}]} : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
    %26 = neura.alloca %25 : !neura.data<i32, i1> {mapping_locs = [{id = 40 : i32, resource = "tile", time_step = 7 : i32, x = 0 : i32, y = 5 : i32}]} -> !neura.data<!llvm.ptr, i1>
    %27 = "neura.data_mov"(%26) {mapping_locs = [{id = 144 : i32, resource = "link", time_step = 7 : i32}]} : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
    %28 = "neura.grant_once"(%27) {mapping_locs = [{id = 48 : i32, resource = "tile", time_step = 8 : i32, x = 0 : i32, y = 6 : i32}]} : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
    %29 = "neura.data_mov"(%0) {mapping_locs = [{id = 127 : i32, resource = "link", time_step = 11 : i32}]} : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
    %30 = "neura.data_mov"(%6) {mapping_locs = [{id = 54 : i32, resource = "link", time_step = 4 : i32}, {id = 84 : i32, resource = "link", time_step = 5 : i32}, {id = 112 : i32, resource = "link", time_step = 6 : i32}, {id = 116 : i32, resource = "link", time_step = 7 : i32}, {id = 120 : i32, resource = "link", time_step = 8 : i32}, {id = 1121 : i32, resource = "register", time_step = 9 : i32}, {id = 1121 : i32, resource = "register", time_step = 10 : i32}, {id = 1121 : i32, resource = "register", time_step = 11 : i32}]} : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
    "neura.store"(%29, %30) {mapping_locs = [{id = 35 : i32, resource = "tile", time_step = 12 : i32, x = 3 : i32, y = 4 : i32}]} : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> ()
    %31 = "neura.data_mov"(%1) {mapping_locs = [{id = 256 : i32, resource = "register", time_step = 11 : i32}]} : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
    %32 = "neura.data_mov"(%10) {mapping_locs = [{id = 115 : i32, resource = "link", time_step = 4 : i32}, {id = 113 : i32, resource = "link", time_step = 5 : i32}, {id = 83 : i32, resource = "link", time_step = 6 : i32}, {id = 53 : i32, resource = "link", time_step = 7 : i32}, {id = 257 : i32, resource = "register", time_step = 8 : i32}, {id = 257 : i32, resource = "register", time_step = 9 : i32}, {id = 257 : i32, resource = "register", time_step = 10 : i32}, {id = 257 : i32, resource = "register", time_step = 11 : i32}]} : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
    "neura.store"(%31, %32) {mapping_locs = [{id = 8 : i32, resource = "tile", time_step = 12 : i32, x = 0 : i32, y = 1 : i32}]} : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> ()
    %33 = "neura.data_mov"(%2) {mapping_locs = [{id = 1888 : i32, resource = "register", time_step = 11 : i32}]} : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
    %34 = "neura.data_mov"(%14) {mapping_locs = [{id = 174 : i32, resource = "link", time_step = 4 : i32}, {id = 202 : i32, resource = "link", time_step = 5 : i32}, {id = 205 : i32, resource = "link", time_step = 6 : i32}, {id = 208 : i32, resource = "link", time_step = 7 : i32}, {id = 1889 : i32, resource = "register", time_step = 8 : i32}, {id = 1889 : i32, resource = "register", time_step = 9 : i32}, {id = 1889 : i32, resource = "register", time_step = 10 : i32}, {id = 1889 : i32, resource = "register", time_step = 11 : i32}]} : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
    "neura.store"(%33, %34) {mapping_locs = [{id = 59 : i32, resource = "tile", time_step = 12 : i32, x = 3 : i32, y = 7 : i32}]} : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> ()
    %35 = "neura.data_mov"(%4) {mapping_locs = [{id = 57 : i32, resource = "link", time_step = 11 : i32}]} : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
    %36 = "neura.data_mov"(%22) {mapping_locs = [{id = 147 : i32, resource = "link", time_step = 3 : i32}, {id = 117 : i32, resource = "link", time_step = 4 : i32}, {id = 87 : i32, resource = "link", time_step = 5 : i32}, {id = 57 : i32, resource = "link", time_step = 6 : i32}, {id = 288 : i32, resource = "register", time_step = 7 : i32}, {id = 288 : i32, resource = "register", time_step = 8 : i32}, {id = 288 : i32, resource = "register", time_step = 9 : i32}, {id = 288 : i32, resource = "register", time_step = 10 : i32}, {id = 288 : i32, resource = "register", time_step = 11 : i32}]} : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
    "neura.store"(%35, %36) {mapping_locs = [{id = 9 : i32, resource = "tile", time_step = 12 : i32, x = 1 : i32, y = 1 : i32}]} : (!neura.data<i32, i1>, !neura.data<!llvm.ptr, i1>) -> ()
    %37 = "neura.data_mov"(%4) {mapping_locs = [{id = 544 : i32, resource = "register", time_step = 11 : i32}]} : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
    %38 = "neura.data_mov"(%18) {mapping_locs = [{id = 1312 : i32, resource = "register", time_step = 1 : i32}, {id = 147 : i32, resource = "link", time_step = 2 : i32}, {id = 117 : i32, resource = "link", time_step = 3 : i32}, {id = 87 : i32, resource = "link", time_step = 4 : i32}, {id = 545 : i32, resource = "register", time_step = 5 : i32}, {id = 545 : i32, resource = "register", time_step = 6 : i32}, {id = 545 : i32, resource = "register", time_step = 7 : i32}, {id = 545 : i32, resource = "register", time_step = 8 : i32}, {id = 545 : i32, resource = "register", time_step = 9 : i32}, {id = 545 : i32, resource = "register", time_step = 10 : i32}, {id = 545 : i32, resource = "register", time_step = 11 : i32}]} : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
    "neura.store"(%37, %38) {mapping_locs = [{id = 17 : i32, resource = "tile", time_step = 12 : i32, x = 1 : i32, y = 2 : i32}]} : (!neura.data<i32, i1>, !neura.data<!llvm.ptr, i1>) -> ()
    %39 = neura.reserve : !neura.data<!llvm.ptr, i1>
    %40 = "neura.data_mov"(%24) {mapping_locs = [{id = 1344 : i32, resource = "register", time_step = 4 : i32}]} : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
    %41 = "neura.phi"(%39, %40) {mapping_locs = [{id = 42 : i32, resource = "tile", time_step = 5 : i32, x = 2 : i32, y = 5 : i32}]} : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
    %42 = neura.reserve : !neura.data<!llvm.ptr, i1>
    %43 = "neura.data_mov"(%12) {mapping_locs = [{id = 1088 : i32, resource = "register", time_step = 5 : i32}]} : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
    %44 = "neura.phi"(%42, %43) {mapping_locs = [{id = 34 : i32, resource = "tile", time_step = 6 : i32, x = 2 : i32, y = 4 : i32}]} : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
    %45 = neura.reserve : !neura.data<!llvm.ptr, i1>
    %46 = "neura.data_mov"(%28) {mapping_locs = [{id = 172 : i32, resource = "link", time_step = 8 : i32}]} : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
    %47 = "neura.phi"(%45, %46) {mapping_locs = [{id = 49 : i32, resource = "tile", time_step = 9 : i32, x = 1 : i32, y = 6 : i32}]} : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
    %48 = neura.reserve : !neura.data<!llvm.ptr, i1>
    %49 = "neura.data_mov"(%16) {mapping_locs = [{id = 1568 : i32, resource = "register", time_step = 5 : i32}]} : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
    %50 = "neura.phi"(%48, %49) {mapping_locs = [{id = 49 : i32, resource = "tile", time_step = 6 : i32, x = 1 : i32, y = 6 : i32}]} : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
    %51 = neura.reserve : !neura.data<!llvm.ptr, i1>
    %52 = "neura.data_mov"(%8) {mapping_locs = [{id = 512 : i32, resource = "register", time_step = 5 : i32}]} : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
    %53 = "neura.phi"(%51, %52) {mapping_locs = [{id = 16 : i32, resource = "tile", time_step = 6 : i32, x = 0 : i32, y = 2 : i32}]} : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
    %54 = neura.reserve : !neura.data<!llvm.ptr, i1>
    %55 = "neura.data_mov"(%20) {mapping_locs = [{id = 1344 : i32, resource = "register", time_step = 2 : i32}]} : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
    %56 = "neura.phi"(%54, %55) {mapping_locs = [{id = 42 : i32, resource = "tile", time_step = 3 : i32, x = 2 : i32, y = 5 : i32}]} : (!neura.data<!llvm.ptr, i1>, !neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
    %57 = "neura.data_mov"(%56) {mapping_locs = [{id = 151 : i32, resource = "link", time_step = 3 : i32}]} : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
    %58 = "neura.load"(%57) {mapping_locs = [{id = 34 : i32, resource = "tile", time_step = 4 : i32, x = 2 : i32, y = 4 : i32}]} : (!neura.data<!llvm.ptr, i1>) -> !neura.data<i32, i1>
    %59 = "neura.data_mov"(%58) {mapping_locs = [{id = 121 : i32, resource = "link", time_step = 4 : i32}]} : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
    %60 = "neura.icmp"(%59) <{cmpType = "slt"}> {mapping_locs = [{id = 26 : i32, resource = "tile", time_step = 5 : i32, x = 2 : i32, y = 3 : i32}], rhs_const_value = 32 : i32} : (!neura.data<i32, i1>) -> !neura.data<i1, i1>
    %61 = "neura.data_mov"(%53) {mapping_locs = [{id = 52 : i32, resource = "link", time_step = 6 : i32}]} : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
    %62 = "neura.data_mov"(%60) {mapping_locs = [{id = 91 : i32, resource = "link", time_step = 5 : i32}, {id = 59 : i32, resource = "link", time_step = 6 : i32}]} : (!neura.data<i1, i1>) -> !neura.data<i1, i1>
    %63 = neura.grant_predicate %61, %62 {mapping_locs = [{id = 17 : i32, resource = "tile", time_step = 7 : i32, x = 1 : i32, y = 2 : i32}]} : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>
    %64 = "neura.data_mov"(%56) {mapping_locs = [{id = 1344 : i32, resource = "register", time_step = 3 : i32}, {id = 151 : i32, resource = "link", time_step = 4 : i32}, {id = 121 : i32, resource = "link", time_step = 5 : i32}, {id = 832 : i32, resource = "register", time_step = 6 : i32}]} : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
    %65 = "neura.data_mov"(%60) {mapping_locs = [{id = 833 : i32, resource = "register", time_step = 5 : i32}, {id = 833 : i32, resource = "register", time_step = 6 : i32}]} : (!neura.data<i1, i1>) -> !neura.data<i1, i1>
    %66 = neura.grant_predicate %64, %65 {mapping_locs = [{id = 26 : i32, resource = "tile", time_step = 7 : i32, x = 2 : i32, y = 3 : i32}]} : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>
    %67 = "neura.data_mov"(%50) {mapping_locs = [{id = 177 : i32, resource = "link", time_step = 6 : i32}, {id = 147 : i32, resource = "link", time_step = 7 : i32}]} : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
    %68 = "neura.data_mov"(%60) {mapping_locs = [{id = 89 : i32, resource = "link", time_step = 5 : i32}, {id = 88 : i32, resource = "link", time_step = 6 : i32}, {id = 1056 : i32, resource = "register", time_step = 7 : i32}]} : (!neura.data<i1, i1>) -> !neura.data<i1, i1>
    %69 = neura.grant_predicate %67, %68 {mapping_locs = [{id = 33 : i32, resource = "tile", time_step = 8 : i32, x = 1 : i32, y = 4 : i32}]} : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>
    %70 = "neura.data_mov"(%47) {mapping_locs = [{id = 176 : i32, resource = "link", time_step = 9 : i32}]} : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
    %71 = "neura.data_mov"(%60) {mapping_locs = [{id = 90 : i32, resource = "link", time_step = 5 : i32}, {id = 96 : i32, resource = "link", time_step = 6 : i32}, {id = 126 : i32, resource = "link", time_step = 7 : i32}, {id = 153 : i32, resource = "link", time_step = 8 : i32}, {id = 152 : i32, resource = "link", time_step = 9 : i32}]} : (!neura.data<i1, i1>) -> !neura.data<i1, i1>
    %72 = neura.grant_predicate %70, %71 {mapping_locs = [{id = 50 : i32, resource = "tile", time_step = 10 : i32, x = 2 : i32, y = 6 : i32}]} : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>
    %73 = "neura.data_mov"(%44) {mapping_locs = [{id = 1090 : i32, resource = "register", time_step = 6 : i32}, {id = 1090 : i32, resource = "register", time_step = 7 : i32}]} : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
    %74 = "neura.data_mov"(%60) {mapping_locs = [{id = 832 : i32, resource = "register", time_step = 5 : i32}, {id = 92 : i32, resource = "link", time_step = 6 : i32}, {id = 1088 : i32, resource = "register", time_step = 7 : i32}]} : (!neura.data<i1, i1>) -> !neura.data<i1, i1>
    %75 = neura.grant_predicate %73, %74 {mapping_locs = [{id = 34 : i32, resource = "tile", time_step = 8 : i32, x = 2 : i32, y = 4 : i32}]} : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>
    %76 = "neura.data_mov"(%41) {mapping_locs = [{id = 151 : i32, resource = "link", time_step = 5 : i32}, {id = 1088 : i32, resource = "register", time_step = 6 : i32}]} : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
    %77 = "neura.data_mov"(%60) {mapping_locs = [{id = 92 : i32, resource = "link", time_step = 5 : i32}, {id = 1089 : i32, resource = "register", time_step = 6 : i32}]} : (!neura.data<i1, i1>) -> !neura.data<i1, i1>
    %78 = neura.grant_predicate %76, %77 {mapping_locs = [{id = 34 : i32, resource = "tile", time_step = 7 : i32, x = 2 : i32, y = 4 : i32}]} : !neura.data<!llvm.ptr, i1>, !neura.data<i1, i1> -> !neura.data<!llvm.ptr, i1>
    %79 = "neura.data_mov"(%63) {mapping_locs = [{id = 57 : i32, resource = "link", time_step = 7 : i32}]} : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
    %80 = "neura.load"(%79) {mapping_locs = [{id = 9 : i32, resource = "tile", time_step = 8 : i32, x = 1 : i32, y = 1 : i32}]} : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
    %81 = "neura.data_mov"(%66) {mapping_locs = [{id = 91 : i32, resource = "link", time_step = 7 : i32}]} : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
    %82 = "neura.load"(%81) {mapping_locs = [{id = 18 : i32, resource = "tile", time_step = 8 : i32, x = 2 : i32, y = 2 : i32}]} : (!neura.data<!llvm.ptr, i1>) -> !neura.data<i32, i1>
    %83 = "neura.data_mov"(%82) {mapping_locs = [{id = 576 : i32, resource = "register", time_step = 8 : i32}]} : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
    %84 = neura.sext %83 {mapping_locs = [{id = 18 : i32, resource = "tile", time_step = 9 : i32, x = 2 : i32, y = 2 : i32}]} : !neura.data<i32, i1> -> !neura.data<i64, i1>
    %85 = "neura.data_mov"(%80) {mapping_locs = [{id = 28 : i32, resource = "link", time_step = 8 : i32}, {id = 544 : i32, resource = "register", time_step = 9 : i32}]} : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
    %86 = "neura.data_mov"(%84) {mapping_locs = [{id = 59 : i32, resource = "link", time_step = 9 : i32}]} : (!neura.data<i64, i1>) -> !neura.data<i64, i1>
    %87 = "neura.gep"(%85, %86) {mapping_locs = [{id = 17 : i32, resource = "tile", time_step = 10 : i32, x = 1 : i32, y = 2 : i32}]} : (!neura.data<!llvm.ptr, i1>, !neura.data<i64, i1>) -> !neura.data<!llvm.ptr, i1>
    %88 = "neura.data_mov"(%87) {mapping_locs = [{id = 56 : i32, resource = "link", time_step = 10 : i32}]} : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
    %89 = "neura.load"(%88) {mapping_locs = [{id = 18 : i32, resource = "tile", time_step = 11 : i32, x = 2 : i32, y = 2 : i32}]} : (!neura.data<!llvm.ptr, i1>) -> !neura.data<f32, i1>
    %90 = "neura.data_mov"(%69) {mapping_locs = [{id = 116 : i32, resource = "link", time_step = 8 : i32}]} : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
    %91 = "neura.load"(%90) {mapping_locs = [{id = 34 : i32, resource = "tile", time_step = 9 : i32, x = 2 : i32, y = 4 : i32}]} : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
    %92 = "neura.data_mov"(%66) {mapping_locs = [{id = 90 : i32, resource = "link", time_step = 7 : i32}]} : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
    %93 = "neura.load"(%92) {mapping_locs = [{id = 27 : i32, resource = "tile", time_step = 8 : i32, x = 3 : i32, y = 3 : i32}]} : (!neura.data<!llvm.ptr, i1>) -> !neura.data<i32, i1>
    %94 = "neura.data_mov"(%93) {mapping_locs = [{id = 96 : i32, resource = "link", time_step = 8 : i32}]} : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
    %95 = neura.sext %94 {mapping_locs = [{id = 35 : i32, resource = "tile", time_step = 9 : i32, x = 3 : i32, y = 4 : i32}]} : !neura.data<i32, i1> -> !neura.data<i64, i1>
    %96 = "neura.data_mov"(%91) {mapping_locs = [{id = 120 : i32, resource = "link", time_step = 9 : i32}]} : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
    %97 = "neura.data_mov"(%95) {mapping_locs = [{id = 1120 : i32, resource = "register", time_step = 9 : i32}]} : (!neura.data<i64, i1>) -> !neura.data<i64, i1>
    %98 = "neura.gep"(%96, %97) {mapping_locs = [{id = 35 : i32, resource = "tile", time_step = 10 : i32, x = 3 : i32, y = 4 : i32}]} : (!neura.data<!llvm.ptr, i1>, !neura.data<i64, i1>) -> !neura.data<!llvm.ptr, i1>
    %99 = "neura.data_mov"(%98) {mapping_locs = [{id = 126 : i32, resource = "link", time_step = 10 : i32}]} : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
    %100 = "neura.load"(%99) {mapping_locs = [{id = 43 : i32, resource = "tile", time_step = 11 : i32, x = 3 : i32, y = 5 : i32}]} : (!neura.data<!llvm.ptr, i1>) -> !neura.data<f32, i1>
    %101 = "neura.data_mov"(%89) {mapping_locs = [{id = 60 : i32, resource = "link", time_step = 11 : i32}, {id = 66 : i32, resource = "link", time_step = 12 : i32}]} : (!neura.data<f32, i1>) -> !neura.data<f32, i1>
    %102 = "neura.data_mov"(%100) {mapping_locs = [{id = 155 : i32, resource = "link", time_step = 11 : i32}, {id = 125 : i32, resource = "link", time_step = 12 : i32}]} : (!neura.data<f32, i1>) -> !neura.data<f32, i1>
    %103 = "neura.fmul"(%101, %102) {mapping_locs = [{id = 27 : i32, resource = "tile", time_step = 13 : i32, x = 3 : i32, y = 3 : i32}]} : (!neura.data<f32, i1>, !neura.data<f32, i1>) -> !neura.data<f32, i1>
    %104 = "neura.data_mov"(%103) {mapping_locs = [{id = 94 : i32, resource = "link", time_step = 13 : i32}, {id = 896 : i32, resource = "register", time_step = 14 : i32}]} : (!neura.data<f32, i1>) -> !neura.data<f32, i1>
    %105 = "neura.data_mov"(%72) {mapping_locs = [{id = 180 : i32, resource = "link", time_step = 10 : i32}, {id = 184 : i32, resource = "link", time_step = 11 : i32}, {id = 189 : i32, resource = "link", time_step = 12 : i32}, {id = 159 : i32, resource = "link", time_step = 13 : i32}, {id = 129 : i32, resource = "link", time_step = 14 : i32}]} : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
    "neura.store"(%104, %105) {mapping_locs = [{id = 28 : i32, resource = "tile", time_step = 15 : i32, x = 4 : i32, y = 3 : i32}]} : (!neura.data<f32, i1>, !neura.data<!llvm.ptr, i1>) -> ()
    %106 = "neura.data_mov"(%72) {mapping_locs = [{id = 182 : i32, resource = "link", time_step = 10 : i32}]} : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
    %107 = "neura.load"(%106) {mapping_locs = [{id = 58 : i32, resource = "tile", time_step = 11 : i32, x = 2 : i32, y = 7 : i32}]} : (!neura.data<!llvm.ptr, i1>) -> !neura.data<f32, i1>
    %108 = "neura.data_mov"(%75) {mapping_locs = [{id = 121 : i32, resource = "link", time_step = 8 : i32}]} : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
    %109 = "neura.load"(%108) {mapping_locs = [{id = 26 : i32, resource = "tile", time_step = 9 : i32, x = 2 : i32, y = 3 : i32}]} : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
    %110 = "neura.data_mov"(%78) {mapping_locs = [{id = 120 : i32, resource = "link", time_step = 7 : i32}]} : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
    %111 = "neura.load"(%110) {mapping_locs = [{id = 35 : i32, resource = "tile", time_step = 8 : i32, x = 3 : i32, y = 4 : i32}]} : (!neura.data<!llvm.ptr, i1>) -> !neura.data<i32, i1>
    %112 = "neura.data_mov"(%111) {mapping_locs = [{id = 125 : i32, resource = "link", time_step = 8 : i32}]} : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
    %113 = neura.sext %112 {mapping_locs = [{id = 27 : i32, resource = "tile", time_step = 9 : i32, x = 3 : i32, y = 3 : i32}]} : !neura.data<i32, i1> -> !neura.data<i64, i1>
    %114 = "neura.data_mov"(%109) {mapping_locs = [{id = 90 : i32, resource = "link", time_step = 9 : i32}]} : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
    %115 = "neura.data_mov"(%113) {mapping_locs = [{id = 864 : i32, resource = "register", time_step = 9 : i32}]} : (!neura.data<i64, i1>) -> !neura.data<i64, i1>
    %116 = "neura.gep"(%114, %115) {mapping_locs = [{id = 27 : i32, resource = "tile", time_step = 10 : i32, x = 3 : i32, y = 3 : i32}]} : (!neura.data<!llvm.ptr, i1>, !neura.data<i64, i1>) -> !neura.data<!llvm.ptr, i1>
    %117 = "neura.data_mov"(%116) {mapping_locs = [{id = 96 : i32, resource = "link", time_step = 10 : i32}]} : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
    %118 = "neura.load"(%117) {mapping_locs = [{id = 35 : i32, resource = "tile", time_step = 11 : i32, x = 3 : i32, y = 4 : i32}]} : (!neura.data<!llvm.ptr, i1>) -> !neura.data<f32, i1>
    %119 = "neura.data_mov"(%118) {mapping_locs = [{id = 123 : i32, resource = "link", time_step = 11 : i32}, {id = 122 : i32, resource = "link", time_step = 12 : i32}]} : (!neura.data<f32, i1>) -> !neura.data<f32, i1>
    %120 = "neura.data_mov"(%107) {mapping_locs = [{id = 209 : i32, resource = "link", time_step = 11 : i32}, {id = 181 : i32, resource = "link", time_step = 12 : i32}]} : (!neura.data<f32, i1>) -> !neura.data<f32, i1>
    %121 = "neura.fadd"(%119, %120) {mapping_locs = [{id = 42 : i32, resource = "tile", time_step = 13 : i32, x = 2 : i32, y = 5 : i32}]} : (!neura.data<f32, i1>, !neura.data<f32, i1>) -> !neura.data<f32, i1>
    %122 = "neura.data_mov"(%121) {mapping_locs = [{id = 150 : i32, resource = "link", time_step = 13 : i32}]} : (!neura.data<f32, i1>) -> !neura.data<f32, i1>
    %123 = "neura.data_mov"(%116) {mapping_locs = [{id = 864 : i32, resource = "register", time_step = 10 : i32}, {id = 96 : i32, resource = "link", time_step = 11 : i32}, {id = 126 : i32, resource = "link", time_step = 12 : i32}, {id = 1376 : i32, resource = "register", time_step = 13 : i32}]} : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
    "neura.store"(%122, %123) {mapping_locs = [{id = 43 : i32, resource = "tile", time_step = 14 : i32, x = 3 : i32, y = 5 : i32}]} : (!neura.data<f32, i1>, !neura.data<!llvm.ptr, i1>) -> ()
    %124 = "neura.data_mov"(%66) {mapping_locs = [{id = 89 : i32, resource = "link", time_step = 7 : i32}, {id = 85 : i32, resource = "link", time_step = 8 : i32}, {id = 84 : i32, resource = "link", time_step = 9 : i32}]} : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
    %125 = "neura.load"(%124) {mapping_locs = [{id = 32 : i32, resource = "tile", time_step = 10 : i32, x = 0 : i32, y = 4 : i32}]} : (!neura.data<!llvm.ptr, i1>) -> !neura.data<i32, i1>
    %126 = "neura.data_mov"(%125) {mapping_locs = [{id = 112 : i32, resource = "link", time_step = 10 : i32}]} : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
    %127 = "neura.add"(%126) {mapping_locs = [{id = 33 : i32, resource = "tile", time_step = 11 : i32, x = 1 : i32, y = 4 : i32}], rhs_const_value = 1 : i32} : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
    %128 = "neura.data_mov"(%127) {mapping_locs = [{id = 116 : i32, resource = "link", time_step = 11 : i32}, {id = 121 : i32, resource = "link", time_step = 12 : i32}, {id = 832 : i32, resource = "register", time_step = 13 : i32}]} : (!neura.data<i32, i1>) -> !neura.data<i32, i1>
    %129 = "neura.data_mov"(%66) {mapping_locs = [{id = 834 : i32, resource = "register", time_step = 7 : i32}, {id = 834 : i32, resource = "register", time_step = 8 : i32}, {id = 834 : i32, resource = "register", time_step = 9 : i32}, {id = 834 : i32, resource = "register", time_step = 10 : i32}, {id = 834 : i32, resource = "register", time_step = 11 : i32}, {id = 834 : i32, resource = "register", time_step = 12 : i32}, {id = 834 : i32, resource = "register", time_step = 13 : i32}]} : (!neura.data<!llvm.ptr, i1>) -> !neura.data<!llvm.ptr, i1>
    "neura.store"(%128, %129) {mapping_locs = [{id = 26 : i32, resource = "tile", time_step = 14 : i32, x = 2 : i32, y = 3 : i32}]} : (!neura.data<i32, i1>, !neura.data<!llvm.ptr, i1>) -> ()
    neura.ctrl_mov %66 -> %54 {mapping_locs = [{id = 92 : i32, resource = "link", time_step = 7 : i32}, {id = 122 : i32, resource = "link", time_step = 8 : i32}]} : !neura.data<!llvm.ptr, i1> !neura.data<!llvm.ptr, i1>
    neura.ctrl_mov %63 -> %51 {mapping_locs = [{id = 55 : i32, resource = "link", time_step = 7 : i32}, {id = 513 : i32, resource = "register", time_step = 8 : i32}, {id = 513 : i32, resource = "register", time_step = 9 : i32}, {id = 513 : i32, resource = "register", time_step = 10 : i32}, {id = 513 : i32, resource = "register", time_step = 11 : i32}]} : !neura.data<!llvm.ptr, i1> !neura.data<!llvm.ptr, i1>
    neura.ctrl_mov %69 -> %48 {mapping_locs = [{id = 118 : i32, resource = "link", time_step = 8 : i32}, {id = 148 : i32, resource = "link", time_step = 9 : i32}, {id = 1569 : i32, resource = "register", time_step = 10 : i32}, {id = 1569 : i32, resource = "register", time_step = 11 : i32}]} : !neura.data<!llvm.ptr, i1> !neura.data<!llvm.ptr, i1>
    neura.ctrl_mov %72 -> %45 {mapping_locs = [{id = 179 : i32, resource = "link", time_step = 10 : i32}, {id = 1570 : i32, resource = "register", time_step = 11 : i32}, {id = 1570 : i32, resource = "register", time_step = 12 : i32}, {id = 1570 : i32, resource = "register", time_step = 13 : i32}, {id = 1570 : i32, resource = "register", time_step = 14 : i32}]} : !neura.data<!llvm.ptr, i1> !neura.data<!llvm.ptr, i1>
    neura.ctrl_mov %75 -> %42 {mapping_locs = [{id = 1089 : i32, resource = "register", time_step = 8 : i32}, {id = 1089 : i32, resource = "register", time_step = 9 : i32}, {id = 1089 : i32, resource = "register", time_step = 10 : i32}, {id = 1089 : i32, resource = "register", time_step = 11 : i32}]} : !neura.data<!llvm.ptr, i1> !neura.data<!llvm.ptr, i1>
    neura.ctrl_mov %78 -> %39 {mapping_locs = [{id = 122 : i32, resource = "link", time_step = 7 : i32}, {id = 1345 : i32, resource = "register", time_step = 8 : i32}, {id = 1345 : i32, resource = "register", time_step = 9 : i32}, {id = 1345 : i32, resource = "register", time_step = 10 : i32}]} : !neura.data<!llvm.ptr, i1> !neura.data<!llvm.ptr, i1>
    "neura.return"() {mapping_locs = [{id = 0 : i32, resource = "tile", time_step = 12 : i32, x = 0 : i32, y = 0 : i32}]} : () -> ()
  }
  llvm.func @printf(!llvm.ptr {llvm.noundef}, ...) -> i32 attributes {frame_pointer = #llvm.framePointerKind<all>, passthrough = [["no-trapping-math", "true"], ["stack-protector-buffer-size", "8"], ["target-cpu", "x86-64"]], target_cpu = "x86-64", target_features = #llvm.target_features<["+cmov", "+cx8", "+fxsr", "+mmx", "+sse", "+sse2", "+x87"]>, tune_cpu = "generic"}
}

